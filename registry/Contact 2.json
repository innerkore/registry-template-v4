{
  "name": "Contact 2",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/contact-2.tsx)",
  "title": "Contact 2",
  "files": [
    {
      "path": "src/components/ui/contact-2.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\n\ninterface WebLink {\n  label: string;\n  url: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n}\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface Contact2Props {\n  title?: string;\n  description?: string;\n  contactDetailsHeading?: string;\n  phoneLabel?: string;\n  emailLabel?: string;\n  webLabel?: string;\n  phone?: string;\n  email?: string;\n  web?: WebLink;\n  firstNameLabel?: string;\n  firstNamePlaceholder?: string;\n  lastNameLabel?: string;\n  lastNamePlaceholder?: string;\n  emailFieldLabel?: string;\n  emailFieldPlaceholder?: string;\n  subjectLabel?: string;\n  subjectPlaceholder?: string;\n  messageLabel?: string;\n  messagePlaceholder?: string;\n  ctaText?: string;\n  ctaHref?: string;\n  ctaTarget?: \"_blank\" | \"_self\";\n  ctaRel?: string;\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n}\n\nexport const Contact2: React.FC<Contact2Props> = ({\n  title,\n  description,\n  contactDetailsHeading,\n  phoneLabel,\n  emailLabel,\n  webLabel,\n  phone,\n  email,\n  web,\n  firstNameLabel,\n  firstNamePlaceholder,\n  lastNameLabel,\n  lastNamePlaceholder,\n  emailFieldLabel,\n  emailFieldPlaceholder,\n  subjectLabel,\n  subjectPlaceholder,\n  messageLabel,\n  messagePlaceholder,\n  ctaText,\n  ctaHref,\n  ctaTarget,\n  ctaRel,\n  backgroundColor,\n  backgroundImage,\n}) => {\n  return (\n    <section className=\"relative py-32\" style={backgroundColor ? { backgroundColor } : undefined}>\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            fill={backgroundImage.fill !== undefined ? backgroundImage.fill : true}\n            className={`h-full w-full object-cover ${backgroundImage.className ? backgroundImage.className : \"\"}`}\n          />\n        </div>\n      ) : null}\n      <div className=\"container\">\n        <div className=\"mx-auto flex max-w-screen-xl flex-col justify-between gap-10 lg:flex-row lg:gap-20\">\n          <div className=\"mx-auto flex max-w-sm flex-col justify-between gap-10\">\n            <div className=\"text-center lg:text-left\">\n              {title ? (\n                <h1 className=\"mb-2 text-5xl font-semibold lg:mb-1 lg:text-6xl\">{title}</h1>\n              ) : null}\n              {description ? <p className=\"text-muted-foreground\">{description}</p> : null}\n            </div>\n            <div className=\"mx-auto w-fit lg:mx-0\">\n              {contactDetailsHeading ? (\n                <h3 className=\"mb-6 text-center text-2xl font-semibold lg:text-left\">{contactDetailsHeading}</h3>\n              ) : null}\n              <ul className=\"ml-4 list-disc\">\n                {phone ? (\n                  <li>\n                    <span className=\"font-bold\">{phoneLabel ? `${phoneLabel} ` : \"\"}</span>\n                    {phone}\n                  </li>\n                ) : null}\n                {email ? (\n                  <li>\n                    <span className=\"font-bold\">{emailLabel ? `${emailLabel} ` : \"\"}</span>\n                    <Link href={`mailto:${email}`} className=\"underline\">\n                      {email}\n                    </Link>\n                  </li>\n                ) : null}\n                {web && web.url && web.label ? (\n                  <li>\n                    <span className=\"font-bold\">{webLabel ? `${webLabel} ` : \"\"}</span>\n                    <Link href={web.url} className=\"underline\" target={web.target} rel={web.rel}>\n                      {web.label}\n                    </Link>\n                  </li>\n                ) : null}\n              </ul>\n            </div>\n          </div>\n          <div className=\"mx-auto flex max-w-screen-md flex-col gap-6 rounded-lg border p-10\">\n            <div className=\"flex gap-4\">\n              <div className=\"grid w-full items-center gap-1.5\">\n                {firstNameLabel ? <Label htmlFor=\"firstname\">{firstNameLabel}</Label> : null}\n                <Input type=\"text\" id=\"firstname\" placeholder={firstNamePlaceholder} />\n              </div>\n              <div className=\"grid w-full items-center gap-1.5\">\n                {lastNameLabel ? <Label htmlFor=\"lastname\">{lastNameLabel}</Label> : null}\n                <Input type=\"text\" id=\"lastname\" placeholder={lastNamePlaceholder} />\n              </div>\n            </div>\n            <div className=\"grid w-full items-center gap-1.5\">\n              {emailFieldLabel ? <Label htmlFor=\"email\">{emailFieldLabel}</Label> : null}\n              <Input type=\"email\" id=\"email\" placeholder={emailFieldPlaceholder} />\n            </div>\n            <div className=\"grid w-full items-center gap-1.5\">\n              {subjectLabel ? <Label htmlFor=\"subject\">{subjectLabel}</Label> : null}\n              <Input type=\"text\" id=\"subject\" placeholder={subjectPlaceholder} />\n            </div>\n            <div className=\"grid w-full gap-1.5\">\n              {messageLabel ? <Label htmlFor=\"message\">{messageLabel}</Label> : null}\n              <Textarea placeholder={messagePlaceholder} id=\"message\" />\n            </div>\n            {ctaText && ctaHref ? (\n              <Button className=\"w-full\" asChild>\n                <Link href={ctaHref} target={ctaTarget} rel={ctaRel}>\n                  {ctaText}\n                </Link>\n              </Button>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n"
    }
  ],
  "meta": {
    "component_name": "Contact2",
    "component_path": "src/components/ui/contact-2.tsx",
    "props": "Contact2Props",
    "props_path": "src/components/ui/contact-2.tsx",
    "original_file": "src/components/ui/contact-2.tsx",
    "transformed_at": "2025-09-22T19:42:30.039683",
    "category": "contact",
    "tags": [
      "lead-generation",
      "form",
      "responsive-mobile",
      "responsive-desktop",
      "accessibility-optimized",
      "container-bound"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:42:30.039701",
    "install_url": "s3://registry-marketkore/registry/Contact 2.json"
  }
}