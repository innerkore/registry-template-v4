{
  "name": "Stats Cards With Links",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/stats-cards-with-links.tsx)",
  "title": "Stats Cards With Links",
  "files": [
    {
      "path": "src/components/ui/stats-cards-with-links.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\n\nfunction cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCard.displayName = \"Card\";\n\ninterface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {}\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = \"CardHeader\";\n\ninterface CardTitleProps extends React.HTMLAttributes<HTMLDivElement> {}\nconst CardTitle = React.forwardRef<HTMLDivElement, CardTitleProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n);\nCardTitle.displayName = \"CardTitle\";\n\ninterface CardDescriptionProps extends React.HTMLAttributes<HTMLDivElement> {}\nconst CardDescription = React.forwardRef<HTMLDivElement, CardDescriptionProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n);\nCardDescription.displayName = \"CardDescription\";\n\ninterface CardActionProps extends React.HTMLAttributes<HTMLDivElement> {}\nconst CardAction = React.forwardRef<HTMLDivElement, CardActionProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardAction.displayName = \"CardAction\";\n\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n);\nCardContent.displayName = \"CardContent\";\n\ninterface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {}\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = \"CardFooter\";\n\ntype ChangeType = \"positive\" | \"negative\";\n\nexport interface StatsItem {\n  name: string;\n  value: string;\n  change: string;\n  changeType: ChangeType;\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n}\n\nexport interface Stats05Props {\n  items: StatsItem[];\n  viewMoreText: string;\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n  className?: string;\n}\n\nexport default function Stats05({\n  items,\n  viewMoreText,\n  backgroundColor,\n  backgroundImage,\n  className,\n}: Stats05Props) {\n  return (\n    <div\n      className={cn(\"relative flex items-center justify-center p-10 w-full\", className)}\n      style={{ backgroundColor }}\n    >\n      {backgroundImage ? (\n        <Image\n          {...backgroundImage}\n          fill\n          className={cn(\n            \"absolute inset-0 -z-10 object-cover\",\n            backgroundImage.className\n          )}\n        />\n      ) : null}\n      <dl className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 w-full\">\n        {items.map((item) => (\n          <Card key={item.name} className=\"p-0 gap-0\">\n            <CardContent className=\"p-6\">\n              <dd className=\"flex items-start justify-between space-x-2\">\n                <span className=\"truncate text-sm text-muted-foreground\">\n                  {item.name}\n                </span>\n                <span\n                  className={cn(\n                    \"text-sm font-medium\",\n                    item.changeType === \"positive\"\n                      ? \"text-emerald-700 dark:text-emerald-500\"\n                      : \"text-red-700 dark:text-red-500\"\n                  )}\n                >\n                  {item.change}\n                </span>\n              </dd>\n              <dd className=\"mt-1 text-3xl font-semibold text-foreground\">\n                {item.value}\n              </dd>\n            </CardContent>\n            <CardFooter className=\"flex justify-end border-t border-border !p-0\">\n              <Link\n                href={item.href}\n                className={cn(\n                  \"px-6 py-3 text-sm font-medium text-primary hover:text-primary/90\"\n                )}\n                target={item.target}\n                rel={item.rel}\n              >\n                {viewMoreText}\n              </Link>\n            </CardFooter>\n          </Card>\n        ))}\n      </dl>\n    </div>\n  );\n}\n"
    }
  ],
  "meta": {
    "component_name": "Stats05",
    "component_path": "src/components/ui/stats-cards-with-links.tsx",
    "props": "Stats05Props",
    "props_path": "src/components/ui/stats-cards-with-links.tsx",
    "original_file": "src/components/ui/stats-cards-with-links.tsx",
    "transformed_at": "2025-09-23T17:40:46.767158",
    "category": "stats",
    "tags": [
      "trust-building",
      "data-display",
      "responsive-mobile",
      "responsive-desktop",
      "minimalist"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:05:57.063938",
    "install_url": "s3://registry-marketkore/registry/Stats Cards With Links.json"
  }
}