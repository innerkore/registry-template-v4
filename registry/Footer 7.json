{
  "name": "Footer 7",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/footer-7.tsx)",
  "title": "Footer 7",
  "files": [
    {
      "path": "src/components/ui/footer-7.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\n\ninterface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon-name only\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface LinkProps {\n  href: string;\n  target?: '_blank' | '_self';\n  className?: string;\n  rel?: string;\n}\n\ntype SectionLink = LinkProps & { name: string };\n\ntype SocialLink = {\n  icon: Icon;\n  href: LinkProps['href'];\n  label: string;\n  target?: LinkProps['target'];\n  rel?: LinkProps['rel'];\n};\n\nexport interface Footer7Props {\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n  logoHref: string;\n  logoTitle: string;\n  logoImage: ImageProps;\n  description: string;\n  sections: Array<{\n    title: string;\n    links: Array<SectionLink>;\n  }>;\n  socialLinks: Array<SocialLink>;\n  legalLinks: Array<SectionLink>;\n  copyright: string;\n  className?: string;\n}\n\nexport const Footer7: React.FC<Footer7Props> = ({\n  backgroundColor,\n  backgroundImage,\n  logoHref,\n  logoTitle,\n  logoImage,\n  description,\n  sections,\n  socialLinks,\n  legalLinks,\n  copyright,\n  className,\n}) => {\n  return (\n    <section\n      className={`relative py-32 ${className ?? ''}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage && (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            src={backgroundImage.src}\n            alt={backgroundImage.alt}\n            width={backgroundImage.width}\n            height={backgroundImage.height}\n            priority={backgroundImage.priority}\n            quality={backgroundImage.quality}\n            sizes={backgroundImage.sizes}\n            fill={backgroundImage.fill ?? true}\n            className={`object-cover ${backgroundImage.className ?? ''}`}\n            placeholder={backgroundImage.placeholder}\n          />\n        </div>\n      )}\n\n      <div className=\"container mx-auto relative\">\n        <div className=\"flex w-full flex-col justify-between gap-10 lg:flex-row lg:items-start lg:text-left\">\n          <div className=\"flex w-full flex-col justify-between gap-6 lg:items-start\">\n            {/* Logo */}\n            <div className=\"flex items-center gap-2 lg:justify-start\">\n              <Link href={logoHref}>\n                <Image\n                  src={logoImage.src}\n                  alt={logoImage.alt}\n                  width={logoImage.width}\n                  height={logoImage.height}\n                  priority={logoImage.priority}\n                  quality={logoImage.quality}\n                  sizes={logoImage.sizes}\n                  fill={logoImage.fill}\n                  className={`h-8 ${logoImage.className ?? ''}`}\n                  placeholder={logoImage.placeholder}\n                />\n              </Link>\n              <h2 className=\"text-xl font-semibold\">{logoTitle}</h2>\n            </div>\n\n            <p className=\"max-w-[70%] text-sm text-muted-foreground\">{description}</p>\n\n            <ul className=\"flex items-center space-x-6 text-muted-foreground\">\n              {socialLinks.map((social, idx) => (\n                <li key={idx} className=\"font-medium hover:text-primary\">\n                  <Link href={social.href} target={social.target} rel={social.rel}>\n                    <DynamicIcon name={social.icon.name} className={social.icon.className} />\n                    <span className=\"sr-only\">{social.label}</span>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"grid w-full gap-6 md:grid-cols-3 lg:gap-20\">\n            {sections.map((section, sectionIdx) => (\n              <div key={sectionIdx}>\n                <h3 className=\"mb-4 font-bold\">{section.title}</h3>\n                <ul className=\"space-y-3 text-sm text-muted-foreground\">\n                  {section.links.map((link, linkIdx) => (\n                    <li key={linkIdx} className=\"font-medium hover:text-primary\">\n                      <Link href={link.href} target={link.target} rel={link.rel}>\n                        {link.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mt-8 flex flex-col justify-between gap-4 border-t py-8 text-xs font-medium text-muted-foreground md:flex-row md:items-center md:text-left\">\n          <p className=\"order-2 lg:order-1\">{copyright}</p>\n          <ul className=\"order-1 flex flex-col gap-2 md:order-2 md:flex-row\">\n            {legalLinks.map((link, idx) => (\n              <li key={idx} className=\"hover:text-primary\">\n                <Link href={link.href} target={link.target} rel={link.rel}>\n                  {link.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Footer7;\n"
    }
  ],
  "meta": {
    "component_name": "Footer7",
    "component_path": "src/components/ui/footer-7.tsx",
    "props": "Footer7Props",
    "props_path": "src/components/ui/footer-7.tsx",
    "original_file": "src/components/ui/footer-7.tsx",
    "transformed_at": "2025-09-22T19:48:44.062813",
    "category": "footer",
    "tags": [
      "trust-building",
      "navigation-element",
      "text-heavy",
      "responsive-mobile",
      "responsive-desktop",
      "simple"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:48:44.062830"
  }
}