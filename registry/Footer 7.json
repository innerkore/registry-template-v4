{
  "name": "Footer 7",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/footer-7.tsx)",
  "title": "Footer 7",
  "files": [
    {
      "path": "src/components/ui/footer-7.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\n\n// Icon interface per guidelines\nexport interface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon-name only\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\n// Image interface per guidelines\nexport interface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\n// Link interface per guidelines\nexport interface LinkDataProps {\n  href: string;\n  target?: '_blank' | '_self';\n  className?: string;\n  rel?: string;\n}\n\nexport interface FooterSectionLink extends LinkDataProps {\n  name: string;\n}\n\nexport interface FooterSection {\n  title: string;\n  links: FooterSectionLink[];\n}\n\nexport interface SocialLink extends LinkDataProps {\n  icon: Icon;\n  label: string; // for screen readers\n}\n\nexport interface Footer7Props {\n  // Optional background controls\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n\n  // Logo block\n  logo?: {\n    href?: string;\n    image?: ImageProps;\n    title?: string;\n    titleClassName?: string;\n  };\n\n  // Main content\n  sections?: FooterSection[];\n  description?: string;\n  socialLinks?: SocialLink[];\n\n  // Footer bottom bar\n  copyright?: string;\n  legalLinks?: FooterSectionLink[];\n\n  // Optional wrapper class\n  className?: string;\n}\n\nexport const Footer7: React.FC<Footer7Props> = ({\n  backgroundImage,\n  backgroundColor,\n  logo,\n  sections,\n  description,\n  socialLinks,\n  copyright,\n  legalLinks,\n  className,\n}) => {\n  return (\n    <section\n      className={`py-32 ${backgroundImage ? 'relative' : ''} ${className ?? ''}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage ? (\n        <Image\n          {...backgroundImage}\n          className={`${backgroundImage.className ? backgroundImage.className + ' ' : ''}absolute inset-0 -z-10 object-cover`}\n        />\n      ) : null}\n\n      <div className=\"container mx-auto\">\n        <div className=\"flex w-full flex-col justify-between gap-10 lg:flex-row lg:items-start lg:text-left\">\n          <div className=\"flex w-full flex-col justify-between gap-6 lg:items-start\">\n            {/* Logo */}\n            <div className=\"flex items-center gap-2 lg:justify-start\">\n              {logo?.href ? (\n                <Link href={logo.href} className={logo.image?.className}>\n                  {logo.image ? (\n                    <Image {...logo.image} />\n                  ) : null}\n                </Link>\n              ) : (\n                logo?.image ? <Image {...logo.image} /> : null\n              )}\n              {logo?.title ? (\n                <h2 className={logo.titleClassName ?? 'text-xl font-semibold'}>{logo.title}</h2>\n              ) : null}\n            </div>\n\n            {description ? (\n              <p className=\"max-w-[70%] text-sm text-muted-foreground\">{description}</p>\n            ) : null}\n\n            {Array.isArray(socialLinks) && socialLinks.length > 0 ? (\n              <ul className=\"flex items-center space-x-6 text-muted-foreground\">\n                {socialLinks.map((social, idx) => (\n                  <li key={idx} className=\"font-medium hover:text-primary\">\n                    <Link href={social.href} target={social.target} rel={social.rel} className={social.className}>\n                      <DynamicIcon name={social.icon.name} className={social.icon.className} />\n                      <span className=\"sr-only\">{social.label}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            ) : null}\n          </div>\n\n          {Array.isArray(sections) && sections.length > 0 ? (\n            <div className=\"grid w-full gap-6 md:grid-cols-3 lg:gap-20\">\n              {sections.map((section, sectionIdx) => (\n                <div key={sectionIdx}>\n                  {section.title ? <h3 className=\"mb-4 font-bold\">{section.title}</h3> : null}\n                  <ul className=\"space-y-3 text-sm text-muted-foreground\">\n                    {section.links?.map((link, linkIdx) => (\n                      <li key={linkIdx} className=\"font-medium hover:text-primary\">\n                        <Link href={link.href} target={link.target} rel={link.rel} className={link.className}>\n                          {link.name}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"mt-8 flex flex-col justify-between gap-4 border-t py-8 text-xs font-medium text-muted-foreground md:flex-row md:items-center md:text-left\">\n          {copyright ? (\n            <p className=\"order-2 lg:order-1\">{copyright}</p>\n          ) : null}\n\n          {Array.isArray(legalLinks) && legalLinks.length > 0 ? (\n            <ul className=\"order-1 flex flex-col gap-2 md:order-2 md:flex-row\">\n              {legalLinks.map((link, idx) => (\n                <li key={idx} className=\"hover:text-primary\">\n                  <Link href={link.href} target={link.target} rel={link.rel} className={link.className}>\n                    {link.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          ) : null}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Footer7;\n"
    }
  ],
  "meta": {
    "component_name": "Footer7",
    "component_path": "src/components/ui/footer-7.tsx",
    "props": "Footer7Props",
    "props_path": "src/components/ui/footer-7.tsx",
    "original_file": "src/components/ui/footer-7.tsx",
    "transformed_at": "2025-09-21T21:19:52.349784",
    "category": "footer",
    "tags": [
      "brand-awareness",
      "navigation-element",
      "responsive-mobile",
      "container-bound",
      "minimalist",
      "accessibility-optimized"
    ],
    "variations": [],
    "created_at": "2025-09-21T21:19:52.349798"
  }
}