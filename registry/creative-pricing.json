{
  "name": "creative-pricing",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/creative-pricing.tsx)",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "/components/ui/creative-pricing.tsx",
      "type": "registry:ui",
      "content": "import Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nexport type PricingTier = {\n  name: string;\n  iconName: string; // lucide icon name\n  iconClassName?: string; // tailwind classes to style the icon (e.g., \"text-amber-500\")\n  price: number;\n  description: string;\n  features: string[];\n  popular?: boolean;\n  ctaLabel: string;\n  ctaHref: string;\n  ctaTarget?: \"_blank\" | \"_self\";\n  ctaRel?: string;\n};\n\nexport interface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface CreativePricingProps {\n  tag: string;\n  title: string;\n  description: string;\n  tiers: PricingTier[];\n  currencySymbol: string; // e.g., \"$\"\n  priceSuffix: string; // e.g., \"/month\"\n  popularBadgeText: string; // e.g., \"Popular!\"\n  // Decorative emojis/text around title\n  titleEmojiRight?: string; // e.g., \"\u2728\"\n  titleEmojiLeft?: string; // e.g., \"\u2b50\ufe0f\"\n  // Background floating emojis\n  bgEmojiTop?: string; // e.g., \"\u270e\"\n  bgEmojiBottom?: string; // e.g., \"\u270f\ufe0f\"\n  // Optional background\n  backgroundImage?: ImageProps;\n  backgroundColor?: string; // any valid CSS color\n  className?: string;\n}\n\nexport function CreativePricing({\n  tag,\n  title,\n  description,\n  tiers,\n  currencySymbol,\n  priceSuffix,\n  popularBadgeText,\n  titleEmojiRight,\n  titleEmojiLeft,\n  bgEmojiTop,\n  bgEmojiBottom,\n  backgroundImage,\n  backgroundColor,\n  className,\n}: CreativePricingProps) {\n  return (\n    <div className={cn(\"relative w-full\", className)} style={backgroundColor ? { backgroundColor } : undefined}>\n      <div className=\"w-full max-w-6xl mx-auto px-4 relative\">\n        <div className=\"text-center space-y-6 mb-16\">\n          <div className=\"font-handwritten text-xl text-blue-500 rotate-[-1deg]\">{tag}</div>\n\n          <div className=\"relative\">\n            <h2 className=\"text-4xl md:text-5xl font-bold font-handwritten text-zinc-900 dark:text-white rotate-[-1deg]\">\n              {title}\n              {titleEmojiRight ? (\n                <div className=\"absolute -right-12 top-0 text-amber-500 rotate-12\">{titleEmojiRight}</div>\n              ) : null}\n              {titleEmojiLeft ? (\n                <div className=\"absolute -left-8 bottom-0 text-blue-500 -rotate-12\">{titleEmojiLeft}</div>\n              ) : null}\n            </h2>\n            <div className=\"absolute -bottom-4 left-1/2 -translate-x-1/2 w-44 h-3 bg-blue-500/20 rotate-[-1deg] rounded-full blur-sm\" />\n          </div>\n\n          <p className=\"font-handwritten text-xl text-zinc-600 dark:text-zinc-400 rotate-[-1deg]\">{description}</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {tiers.map((tier, index) => (\n            <div\n              key={tier.name}\n              className={cn(\n                \"relative group\",\n                \"transition-all duration-300\",\n                index === 0 && \"rotate-[-1deg]\",\n                index === 1 && \"rotate-[1deg]\",\n                index === 2 && \"rotate-[-2deg]\"\n              )}\n            >\n              <div\n                className={cn(\n                  \"absolute inset-0 bg-white dark:bg-zinc-900\",\n                  \"border-2 border-zinc-900 dark:border-white\",\n                  \"rounded-lg shadow-[4px_4px_0px_0px] shadow-zinc-900 dark:shadow-white\",\n                  \"transition-all duration-300\",\n                  \"group-hover:shadow-[8px_8px_0px_0px]\",\n                  \"group-hover:translate-x-[-4px]\",\n                  \"group-hover:translate-y-[-4px]\"\n                )}\n              />\n\n              <div className=\"relative p-6\">\n                {tier.popular ? (\n                  <div className=\"absolute -top-2 -right-2 bg-amber-400 text-zinc-900 font-handwritten px-3 py-1 rounded-full rotate-12 text-sm border-2 border-zinc-900\">\n                    {popularBadgeText}\n                  </div>\n                ) : null}\n\n                <div className=\"mb-6\">\n                  <div\n                    className={cn(\n                      \"w-12 h-12 rounded-full mb-4\",\n                      \"flex items-center justify-center\",\n                      \"border-2 border-zinc-900 dark:border-white\"\n                    )}\n                  >\n                    <DynamicIcon name={tier.iconName} className={cn(\"w-6 h-6\", tier.iconClassName)} />\n                  </div>\n                  <h3 className=\"font-handwritten text-2xl text-zinc-900 dark:text-white\">{tier.name}</h3>\n                  <p className=\"font-handwritten text-zinc-600 dark:text-zinc-400\">{tier.description}</p>\n                </div>\n\n                <div className=\"mb-6 font-handwritten\">\n                  <span className=\"text-4xl font-bold text-zinc-900 dark:text-white\">\n                    {currencySymbol}\n                    {tier.price}\n                  </span>\n                  <span className=\"text-zinc-600 dark:text-zinc-400\">{priceSuffix}</span>\n                </div>\n\n                <div className=\"space-y-3 mb-6\">\n                  {tier.features.map((feature) => (\n                    <div key={feature} className=\"flex items-center gap-3\">\n                      <div className=\"w-5 h-5 rounded-full border-2 border-zinc-900 dark:border-white flex items-center justify-center\">\n                        <DynamicIcon name=\"Check\" className=\"w-3 h-3\" />\n                      </div>\n                      <span className=\"font-handwritten text-lg text-zinc-900 dark:text-white\">{feature}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <Button\n                  asChild\n                  className={cn(\n                    \"w-full h-12 font-handwritten text-lg relative\",\n                    \"border-2 border-zinc-900 dark:border-white\",\n                    \"transition-all duration-300\",\n                    \"shadow-[4px_4px_0px_0px] shadow-zinc-900 dark:shadow-white\",\n                    \"hover:shadow-[6px_6px_0px_0px]\",\n                    \"hover:translate-x-[-2px] hover:translate-y-[-2px]\",\n                    tier.popular\n                      ? [\n                          \"bg-amber-400 text-zinc-900\",\n                          \"hover:bg-amber-300\",\n                          \"active:bg-amber-400\",\n                          \"dark:hover:bg-amber-300\",\n                          \"dark:active:bg-amber-400\",\n                        ]\n                      : [\n                          \"bg-zinc-50 dark:bg-zinc-800\",\n                          \"text-zinc-900 dark:text-white\",\n                          \"hover:bg-white dark:hover:bg-zinc-700\",\n                          \"active:bg-zinc-50 dark:active:bg-zinc-800\",\n                        ]\n                  )}\n                >\n                  <Link href={tier.ctaHref} target={tier.ctaTarget} rel={tier.ctaRel} className=\"w-full h-full flex items-center justify-center\">\n                    {tier.ctaLabel}\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"absolute -z-10 inset-0 overflow-hidden pointer-events-none\">\n          {bgEmojiTop ? (\n            <div className=\"absolute top-40 left-20 text-4xl rotate-12\">{bgEmojiTop}</div>\n          ) : null}\n          {bgEmojiBottom ? (\n            <div className=\"absolute bottom-40 right-20 text-4xl -rotate-12\">{bgEmojiBottom}</div>\n          ) : null}\n          {backgroundImage ? <Image {...backgroundImage} /> : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreativePricing;\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "imported_from": "https://21st.dev/r/kokonutd/creative-pricing",
    "component_name": "CreativePricing",
    "component_path": "/components/ui/creative-pricing.tsx",
    "props": "CreativePricingProps",
    "props_path": "/components/ui/creative-pricing.tsx",
    "original_file": "/components/ui/creative-pricing.tsx",
    "transformed_at": "2025-09-21T20:40:48.411814",
    "category": "pricing",
    "tags": [
      "conversion-focused",
      "content-container",
      "interactive",
      "responsive-mobile",
      "responsive-desktop",
      "decision-stage"
    ],
    "variations": []
  }
}