{
  "name": "creative-pricing",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/creative-pricing.tsx)",
  "title": "Creative Pricing",
  "files": [
    {
      "path": "/components/ui/creative-pricing.tsx",
      "type": "registry:ui",
      "content": "import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\nimport { cn } from \"@/lib/utils\";\n\n// Icon interface as per guidelines\nexport interface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon-name only\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\n// ImageProps as per guidelines (for optional background image)\nexport interface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface PricingTier {\n  name: string;\n  icon: Icon;\n  price: number;\n  currencySymbol: string; // e.g., \"$\"\n  priceSuffix: string; // e.g., \"/month\"\n  description: string;\n  features: string[];\n  popular?: boolean;\n  popularLabel?: string; // e.g., \"Popular!\"\n  cta: {\n    label: string; // e.g., \"Get Started\"\n    href: string;\n    target?: '_blank' | '_self';\n    rel?: string;\n  };\n}\n\nexport interface TitleDecoration {\n  content: string; // e.g., \"\u2728\"\n  positionClassName: string; // e.g., \"-right-12 top-0 rotate-12\"\n}\n\nexport interface BackgroundEmoji {\n  content: string; // e.g., \"\u270e\"\n  positionClassName: string; // e.g., \"top-40 left-20\"\n}\n\nexport interface CreativePricingProps {\n  tag: string;\n  title: string;\n  description: string;\n  tiers: PricingTier[];\n  titleDecorations?: TitleDecoration[];\n  backgroundEmojis?: BackgroundEmoji[];\n  backgroundImage?: ImageProps; // optional background image\n  backgroundColorClass?: string; // optional background color utility class\n  className?: string;\n}\n\nconst CreativePricing: React.FC<CreativePricingProps> = ({\n  tag,\n  title,\n  description,\n  tiers,\n  titleDecorations,\n  backgroundEmojis,\n  backgroundImage,\n  backgroundColorClass,\n  className,\n}) => {\n  return (\n    <div className={cn(\"relative w-full max-w-6xl mx-auto px-4\", backgroundColorClass, className)}>\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            fill={true}\n            className={cn(\"object-cover\", backgroundImage.className)}\n          />\n        </div>\n      ) : null}\n\n      <div className=\"text-center space-y-6 mb-16\">\n        <div className=\"font-handwritten text-xl text-blue-500 rotate-[-1deg]\">\n          {tag}\n        </div>\n        <div className=\"relative\">\n          <h2 className=\"text-4xl md:text-5xl font-bold font-handwritten text-zinc-900 dark:text-white rotate-[-1deg]\">\n            {title}\n          </h2>\n          {titleDecorations?.map((decoration, i) => (\n            <div key={i} className={cn(\"absolute\", decoration.positionClassName)}>\n              {decoration.content}\n            </div>\n          ))}\n          <div\n            className=\"absolute -bottom-4 left-1/2 -translate-x-1/2 w-44 h-3 bg-blue-500/20 \n                        rotate-[-1deg] rounded-full blur-sm\"\n          />\n        </div>\n        <p className=\"font-handwritten text-xl text-zinc-600 dark:text-zinc-400 rotate-[-1deg]\">\n          {description}\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n        {tiers.map((tier, index) => (\n          <div\n            key={tier.name}\n            className={cn(\n              \"relative group\",\n              \"transition-all duration-300\",\n              index === 0 && \"rotate-[-1deg]\",\n              index === 1 && \"rotate-[1deg]\",\n              index === 2 && \"rotate-[-2deg]\"\n            )}\n          >\n            <div\n              className={cn(\n                \"absolute inset-0 bg-white dark:bg-zinc-900\",\n                \"border-2 border-zinc-900 dark:border-white\",\n                \"rounded-lg shadow-[4px_4px_0px_0px] shadow-zinc-900 dark:shadow-white\",\n                \"transition-all duration-300\",\n                \"group-hover:shadow-[8px_8px_0px_0px]\",\n                \"group-hover:translate-x-[-4px]\",\n                \"group-hover:translate-y-[-4px]\"\n              )}\n            />\n\n            <div className=\"relative p-6\">\n              {tier.popular && (\n                <div\n                  className=\"absolute -top-2 -right-2 bg-amber-400 text-zinc-900 \n                                    font-handwritten px-3 py-1 rounded-full rotate-12 text-sm border-2 border-zinc-900\"\n                >\n                  {tier.popularLabel}\n                </div>\n              )}\n\n              <div className=\"mb-6\">\n                <div\n                  className={cn(\n                    \"w-12 h-12 rounded-full mb-4\",\n                    \"flex items-center justify-center\",\n                    \"border-2 border-zinc-900 dark:border-white\"\n                  )}\n                >\n                  <DynamicIcon name={tier.icon.name} className={cn(\"w-6 h-6\", tier.icon.className)} />\n                </div>\n                <h3 className=\"font-handwritten text-2xl text-zinc-900 dark:text-white\">\n                  {tier.name}\n                </h3>\n                <p className=\"font-handwritten text-zinc-600 dark:text-zinc-400\">\n                  {tier.description}\n                </p>\n              </div>\n\n              {/* Price */}\n              <div className=\"mb-6 font-handwritten\">\n                <span className=\"text-4xl font-bold text-zinc-900 dark:text-white\">\n                  {tier.currencySymbol}\n                  {tier.price}\n                </span>\n                <span className=\"text-zinc-600 dark:text-zinc-400\">\n                  {tier.priceSuffix}\n                </span>\n              </div>\n\n              <div className=\"space-y-3 mb-6\">\n                {tier.features.map((feature) => (\n                  <div key={feature} className=\"flex items-center gap-3\">\n                    <div\n                      className=\"w-5 h-5 rounded-full border-2 border-zinc-900 \n                                            dark:border-white flex items-center justify-center\"\n                    >\n                      <DynamicIcon name=\"Check\" className=\"w-3 h-3\" />\n                    </div>\n                    <span className=\"font-handwritten text-lg text-zinc-900 dark:text-white\">\n                      {feature}\n                    </span>\n                  </div>\n                ))}\n              </div>\n\n              <Button\n                asChild\n                className={cn(\n                  \"w-full h-12 font-handwritten text-lg relative\",\n                  \"border-2 border-zinc-900 dark:border-white\",\n                  \"transition-all duration-300\",\n                  \"shadow-[4px_4px_0px_0px] shadow-zinc-900 dark:shadow-white\",\n                  \"hover:shadow-[6px_6px_0px_0px]\",\n                  \"hover:translate-x-[-2px] hover:translate-y-[-2px]\",\n                  tier.popular\n                    ? [\n                        \"bg-amber-400 text-zinc-900\",\n                        \"hover:bg-amber-300\",\n                        \"active:bg-amber-400\",\n                        \"dark:hover:bg-amber-300\",\n                        \"dark:active:bg-amber-400\",\n                      ]\n                    : [\n                        \"bg-zinc-50 dark:bg-zinc-800\",\n                        \"text-zinc-900 dark:text-white\",\n                        \"hover:bg-white dark:hover:bg-zinc-700\",\n                        \"active:bg-zinc-50 dark:active:bg-zinc-800\",\n                      ]\n                )}\n              >\n                <Link href={tier.cta.href} target={tier.cta.target} rel={tier.cta.rel} className=\"flex items-center justify-center w-full h-full\">\n                  {tier.cta.label}\n                </Link>\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {backgroundEmojis && backgroundEmojis.length > 0 ? (\n        <div className=\"absolute -z-10 inset-0 overflow-hidden\">\n          {backgroundEmojis.map((item, idx) => (\n            <div key={idx} className={cn(\"absolute text-4xl\", item.positionClassName)}>\n              {item.content}\n            </div>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport { CreativePricing };\nexport type { CreativePricingProps, PricingTier };"
    }
  ],
  "meta": {
    "component_name": "CreativePricing",
    "component_path": "/components/ui/creative-pricing.tsx",
    "props": "CreativePricingProps",
    "props_path": "/components/ui/creative-pricing.tsx",
    "original_file": "/components/ui/creative-pricing.tsx",
    "transformed_at": "2025-09-22T19:08:53.608178",
    "category": "pricing",
    "tags": [
      "conversion-focused",
      "content-container",
      "interactive",
      "responsive-mobile",
      "decision-stage"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:08:53.608197",
    "install_url": "s3://registry-marketkore/registry/creative-pricing.json"
  }
}