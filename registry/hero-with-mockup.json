{
  "name": "hero-with-mockup",
  "type": "registry:block",
  "description": "TypeScript component (transformed from /components/blocks/hero-with-mockup.tsx)",
  "title": "Hero With Mockup",
  "files": [
    {
      "path": "/components/blocks/hero-with-mockup.tsx",
      "type": "registry:block",
      "content": "import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Mockup } from \"@/components/ui/mockup\";\nimport { Glow } from \"@/components/ui/glow\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\n\n// Icon interface guideline\ninterface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon-name only\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\n// ImageProps interface guideline\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\n// CTA structure leveraging LinkProps guidelines\ninterface CTA {\n  text: string;\n  href: string;\n  target?: '_blank' | '_self';\n  rel?: string;\n  icon?: Icon;\n}\n\nexport interface HeroWithMockupProps {\n  title: string;\n  description: string;\n  primaryCta?: CTA;\n  secondaryCta?: CTA;\n  mockupImage: ImageProps;\n  backgroundImage?: ImageProps; // Optional background image\n  backgroundColor?: string; // Optional background color\n  className?: string;\n}\n\nexport function HeroWithMockup({\n  title,\n  description,\n  primaryCta,\n  secondaryCta,\n  mockupImage,\n  backgroundImage,\n  backgroundColor,\n  className,\n}: HeroWithMockupProps): JSX.Element {\n  return (\n    <section\n      className={cn(\n        \"relative bg-background text-foreground\",\n        \"py-12 px-4 md:py-24 lg:py-32\",\n        \"overflow-hidden\",\n        className,\n      )}\n      style={{ backgroundColor: backgroundColor }}\n    >\n      {/* Optional Background Image */}\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            fill={backgroundImage.fill ?? true}\n            className={cn(\"object-cover object-center pointer-events-none select-none\", backgroundImage.className)}\n          />\n        </div>\n      ) : null}\n\n      <div className=\"relative mx-auto max-w-[1280px] flex flex-col gap-12 lg:gap-24\">\n        <div className=\"relative z-10 flex flex-col items-center gap-6 pt-8 md:pt-16 text-center lg:gap-12\">\n          {/* Heading */}\n          <h1\n            className={cn(\n              \"inline-block animate-appear\",\n              \"bg-gradient-to-b from-foreground via-foreground/90 to-muted-foreground\",\n              \"bg-clip-text text-transparent\",\n              \"text-4xl font-bold tracking-tight sm:text-5xl md:text-6xl lg:text-7xl xl:text-8xl\",\n              \"leading-[1.1] sm:leading-[1.1]\",\n              \"drop-shadow-sm dark:drop-shadow-[0_0_15px_rgba(255,255,255,0.1)]\",\n            )}\n          >\n            {title}\n          </h1>\n\n          {/* Description */}\n          <p\n            className={cn(\n              \"max-w-[550px] animate-appear opacity-0 [animation-delay:150ms]\",\n              \"text-base sm:text-lg md:text-xl\",\n              \"text-muted-foreground\",\n              \"font-medium\",\n            )}\n          >\n            {description}\n          </p>\n\n          {/* CTAs */}\n          <div\n            className=\"relative z-10 flex flex-wrap justify-center gap-4 \n            animate-appear opacity-0 [animation-delay:300ms]\"\n          >\n            {primaryCta ? (\n              <Button\n                asChild\n                size=\"lg\"\n                className={cn(\n                  \"bg-gradient-to-b from-brand to-brand/90 dark:from-brand/90 dark:to-brand/80\",\n                  \"hover:from-brand/95 hover:to-brand/85 dark:hover:from-brand/80 dark:hover:to-brand/70\",\n                  \"text-white shadow-lg\",\n                  \"transition-all duration-300\",\n                )}\n              >\n                <Link href={primaryCta.href} target={primaryCta.target} rel={primaryCta.rel}>\n                  {primaryCta.icon ? (\n                    <DynamicIcon name={primaryCta.icon.name} className={cn(\"mr-2 h-4 w-4\", primaryCta.icon.className)} />\n                  ) : null}\n                  {primaryCta.text}\n                </Link>\n              </Button>\n            ) : null}\n\n            {secondaryCta ? (\n              <Button\n                asChild\n                size=\"lg\"\n                variant=\"ghost\"\n                className={cn(\n                  \"text-foreground/80 dark:text-foreground/70\",\n                  \"transition-all duration-300\",\n                )}\n              >\n                <Link href={secondaryCta.href} target={secondaryCta.target} rel={secondaryCta.rel}>\n                  {secondaryCta.icon ? (\n                    <DynamicIcon name={secondaryCta.icon.name} className={cn(\"mr-2 h-4 w-4\", secondaryCta.icon.className)} />\n                  ) : null}\n                  {secondaryCta.text}\n                </Link>\n              </Button>\n            ) : null}\n          </div>\n\n          {/* Mockup */}\n          <div className=\"relative w-full pt-12 px-4 sm:px-6 lg:px-8\">\n            <Mockup\n              className={cn(\n                \"animate-appear opacity-0 [animation-delay:700ms]\",\n                \"shadow-[0_0_50px_-12px_rgba(0,0,0,0.3)] dark:shadow-[0_0_50px_-12px_rgba(255,255,255,0.1)]\",\n                \"border-brand/10 dark:border-brand/5\",\n              )}\n            >\n              <Image\n                {...mockupImage}\n                className={cn(\"w-full h-auto\", mockupImage.className)}\n              />\n            </Mockup>\n          </div>\n        </div>\n      </div>\n\n      {/* Background Glow */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <Glow\n          variant=\"above\"\n          className=\"animate-appear-zoom opacity-0 [animation-delay:1000ms]\"\n        />\n      </div>\n    </section>\n  );\n}\n"
    }
  ],
  "meta": {
    "component_name": "HeroWithMockup",
    "component_path": "/components/blocks/hero-with-mockup.tsx",
    "props": "HeroWithMockupProps",
    "props_path": "/components/blocks/hero-with-mockup.tsx",
    "original_file": "/components/blocks/hero-with-mockup.tsx",
    "transformed_at": "2025-09-22T19:22:00.891040",
    "category": "hero",
    "tags": [
      "conversion-focused",
      "visual-dominant",
      "animated",
      "above-fold",
      "responsive-mobile",
      "responsive-desktop"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:22:00.891083",
    "install_url": "s3://registry-marketkore/registry/hero-with-mockup.json"
  }
}