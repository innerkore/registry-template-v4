{
  "name": "Menu Hover Effects",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/menu-hover-effects.tsx)",
  "title": "Menu Hover Effects",
  "files": [
    {
      "path": "src/components/ui/menu-hover-effects.tsx",
      "type": "registry:component",
      "content": "import { useState } from \"react\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ntype NavItem = {\n  label: string;\n  href: string;\n  target?: '_blank' | '_self';\n  rel?: string;\n};\n\nexport interface NavMenuProps {\n  items: NavItem[];\n  toggleOpenAriaLabel: string;\n  toggleCloseAriaLabel: string;\n  navAriaLabel?: string;\n  className?: string;\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n}\n\nexport default function NavMenu({\n  items,\n  toggleOpenAriaLabel,\n  toggleCloseAriaLabel,\n  navAriaLabel,\n  className,\n  backgroundColor,\n  backgroundImage,\n}: NavMenuProps) {\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false);\n\n  const toggleMenu = () => {\n    setIsMenuOpen((prev) => !prev);\n  };\n\n  return (\n    <nav\n      className={`absolute inset-0 w-full ${className ?? \"\"}`}\n      aria-label={navAriaLabel}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            src={backgroundImage.src}\n            alt={backgroundImage.alt}\n            width={backgroundImage.width}\n            height={backgroundImage.height}\n            priority={backgroundImage.priority}\n            quality={backgroundImage.quality}\n            sizes={backgroundImage.sizes}\n            fill={backgroundImage.fill}\n            className={`object-cover ${backgroundImage.className ?? \"\"}`}\n            placeholder={backgroundImage.placeholder}\n          />\n        </div>\n      ) : null}\n\n      <button\n        onClick={toggleMenu}\n        className=\"md:hidden absolute top-6 right-6 z-20 p-2\"\n        aria-label={isMenuOpen ? toggleCloseAriaLabel : toggleOpenAriaLabel}\n        type=\"button\"\n      >\n        <div className={`w-6 h-0.5 bg-[#262626] mb-1.5 transition-transform duration-300 ${isMenuOpen ? 'transform rotate-45 translate-y-2' : ''}`} />\n        <div className={`w-6 h-0.5 bg-[#262626] mb-1.5 transition-opacity duration-300 ${isMenuOpen ? 'opacity-0' : ''}`} />\n        <div className={`w-6 h-0.5 bg-[#262626] transition-transform duration-300 ${isMenuOpen ? 'transform -rotate-45 -translate-y-2' : ''}`} />\n      </button>\n\n      <div\n        className={`\n          flex items-center justify-center w-full h-full\n          md:block md:h-auto md:pt-8\n          ${isMenuOpen ? 'block' : 'hidden md:block'}\n        `}\n      >\n        <ul\n          className={`\n            flex flex-col items-center space-y-6\n            md:flex-row md:space-y-0 md:space-x-4 md:justify-center\n            lg:space-x-8\n          `}\n        >\n          {items.map((item) => (\n            <li\n              key={`${item.href}-${item.label}`}\n              className=\"list-none\"\n              onClick={() => setIsMenuOpen(false)}\n            >\n              <Link\n                href={item.href}\n                target={item.target}\n                rel={item.rel}\n                className=\"relative inline-block group\"\n              >\n                <span\n                  className=\"\n                    relative z-10 block uppercase text-[#262626]\n                    font-sans font-semibold transition-colors duration-300\n                    group-hover:text-white\n                    text-xl py-2 px-3\n                    md:text-base md:py-2 md:px-3\n                    lg:text-lg lg:py-2 lg:px-4\n                  \"\n                >\n                  {item.label}\n                </span>\n                <span\n                  className=\"\n                    pointer-events-none absolute inset-0 border-t-2 border-b-2 border-[#262626]\n                    transform scale-y-[2] opacity-0\n                    transition-all duration-300 origin-center\n                    group-hover:scale-y-100 group-hover:opacity-100\n                  \"\n                />\n                <span\n                  className=\"\n                    pointer-events-none absolute top-[2px] left-0 w-full h-full bg-[#262626]\n                    transform scale-0 opacity-0\n                    transition-all duration-300 origin-top\n                    group-hover:scale-100 group-hover:opacity-100\n                  \"\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  );\n}\n"
    }
  ],
  "meta": {
    "component_name": "NavMenu",
    "component_path": "src/components/ui/menu-hover-effects.tsx",
    "props": "NavMenuProps",
    "props_path": "src/components/ui/menu-hover-effects.tsx",
    "original_file": "src/components/ui/menu-hover-effects.tsx",
    "transformed_at": "2025-09-22T19:15:02.860707",
    "category": "navigation",
    "tags": [
      "navigation-element",
      "responsive-mobile",
      "responsive-desktop",
      "interactive",
      "accessibility-optimized",
      "above-fold",
      "engagement"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:15:02.860718"
  }
}