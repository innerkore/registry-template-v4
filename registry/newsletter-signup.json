{
  "name": "newsletter-signup",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/newsletter-signup.tsx)",
  "title": "None",
  "author": "None",
  "docs": "None",
  "dependencies": [
    "motion",
    "lucide-react",
    "canvas-confetti"
  ],
  "files": [
    {
      "path": "/components/ui/newsletter-signup.tsx",
      "type": "registry:ui",
      "content": "import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { Send } from \"lucide-react\";\nimport Link from \"@/components/Link\";\n\nexport interface NewsletterSignupProps {\n  onSubmit: (email: string) => Promise<void>;\n  className?: string;\n  backgroundImage?: string;\n  backgroundColor?: string;\n}\n\nexport const NewsletterSignup: React.FC<NewsletterSignupProps> = ({\n  onSubmit,\n  className = \"\",\n  backgroundImage,\n  backgroundColor,\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (!email) {\n      setError(\"Email is required\");\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError(\"Please enter a valid email address\");\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      await onSubmit(email);\n      setIsSubmitted(true);\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 },\n      });\n    } catch (err) {\n      setError(\"An error occurred. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div\n      className={`bg-secondary/50 border border-primary/10 rounded-lg p-6 ${className}`} \n      style={{ backgroundImage: backgroundImage ? `url(${backgroundImage})` : undefined, backgroundColor }}\n    >\n      <AnimatePresence mode=\"wait\">\n        {!isSubmitted ? (\n          <motion.form\n            key=\"form\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            onSubmit={handleSubmit}\n            className=\"flex flex-col gap-4\"\n          >\n            <div className=\"flex items-start justify-center gap-1 flex-col overflow-y-hidden\">\n              <motion.h2\n                className=\"text-2xl font-bold text-foreground\"\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n              >\n                Subscribe to our newsletter\n              </motion.h2>\n              <motion.p\n                className=\"text-muted-foreground text-sm\"\n                initial={{ opacity: 0, y: 10, filter: \"blur(3px)\" }}\n                animate={{ opacity: 1, y: 0, filter: \"blur(0px)\" }}\n                transition={{ delay: 0.4 }}\n              >\n                Stay up to date with our latest news and updates.\n              </motion.p>\n            </div>\n            <div className=\"space-y-2\">\n              <motion.label\n                initial={{ opacity: 0, filter: \"blur(3px)\" }}\n                animate={{ opacity: 1, filter: \"blur(0px)\" }}\n                transition={{ delay: 0.6 }}\n                className=\"font-medium text-sm\"\n                htmlFor=\"email\"\n              >\n                Email address\n              </motion.label>\n              <motion.div\n                className=\"flex gap-2\"\n                initial={{ opacity: 0, filter: \"blur(3px)\" }}\n                animate={{ opacity: 1, filter: \"blur(0px)\" }}\n                transition={{ delay: 0.7 }}\n              >\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"you@example.com\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"w-full px-3 py-2 border rounded-md focus-visible:ring-0 focus-within:ring-0 focus:outline-white/10 \"\n                />\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"relative overflow-hidden text-sm flex items-center justify-center gap-2 px-4 py-2 bg-white border-black font-medium\"\n                >\n                  <motion.div\n                    key=\"default\"\n                    initial={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"flex items-center px-4\"\n                  >\n                    <Send className=\"h-4 w-4\" />\n                    <Link href=\"/subscribe\" className=\"ml-2\">Subscribe</Link>\n                  </motion.div>\n                </button>\n              </motion.div>\n            </div>\n            <AnimatePresence>\n              {error && (\n                <motion.p\n                  className=\"text-red-500 text-sm\"\n                  initial={{ opacity: 0, y: 5 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -5 }}\n                >\n                  {error}\n                </motion.p>\n              )}\n            </AnimatePresence>\n          </motion.form>\n        ) : (\n          <motion.div\n            key=\"success\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"text-center\"\n          >\n            <h2 className=\"text-2xl font-bold text-foreground mb-2\">\n              Thank you for subscribing!\n            </h2>\n            <p className=\"text-muted-foreground\">\n              We've sent a confirmation email to your inbox.\n            </p>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};"
    }
  ],
  "meta": {
    "category": "newsletter",
    "component_name": "NewsletterSignup",
    "component_path": "/components/ui/newsletter-signup.tsx",
    "original_file": "/components/ui/newsletter-signup.tsx",
    "props": "NewsletterSignupProps",
    "props_path": "/components/ui/newsletter-signup.tsx",
    "transformed_at": "2025-09-19T16:40:38.470245",
    "variations": [],
    "tags": [
      "action-trigger",
      "form",
      "text-heavy",
      "interactive",
      "conversion-focused",
      "above-fold"
    ],
    "imported_from": "https://21st.dev/r/preetsuthar17/newsletter-signup"
  }
}