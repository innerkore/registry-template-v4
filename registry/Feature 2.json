{
  "name": "Feature 2",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/feature-2.tsx)",
  "title": "Feature 2",
  "files": [
    {
      "path": "src/components/ui/feature-2.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\n\nexport type CtaLink = {\n  label: string;\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n  className?: string;\n};\n\nexport interface Feature2Props {\n  title: string;\n  description?: string;\n\n  imageSrc: string;\n  imageAlt: string;\n  imageWidth: number;\n  imageHeight: number;\n  imagePriority?: boolean;\n  imageQuality?: number;\n  imageSizes?: string;\n  imageFill?: boolean;\n  imageClassName?: string;\n  imagePlaceholder?: string;\n\n  buttonPrimary: CtaLink;\n  buttonSecondary?: CtaLink;\n\n  backgroundColor?: string;\n\n  backgroundImageSrc?: string;\n  backgroundImageAlt?: string;\n  backgroundImageWidth?: number;\n  backgroundImageHeight?: number;\n  backgroundImagePriority?: boolean;\n  backgroundImageQuality?: number;\n  backgroundImageSizes?: string;\n  backgroundImageFill?: boolean;\n  backgroundImageClassName?: string;\n  backgroundImagePlaceholder?: string;\n\n  sectionClassName?: string;\n}\n\nexport const Feature2: React.FC<Feature2Props> = ({\n  title,\n  description,\n  imageSrc,\n  imageAlt,\n  imageWidth,\n  imageHeight,\n  imagePriority,\n  imageQuality,\n  imageSizes,\n  imageFill,\n  imageClassName,\n  imagePlaceholder,\n  buttonPrimary,\n  buttonSecondary,\n  backgroundColor,\n  backgroundImageSrc,\n  backgroundImageAlt,\n  backgroundImageWidth,\n  backgroundImageHeight,\n  backgroundImagePriority,\n  backgroundImageQuality,\n  backgroundImageSizes,\n  backgroundImageFill,\n  backgroundImageClassName,\n  backgroundImagePlaceholder,\n  sectionClassName,\n}) => {\n  const primaryRel = buttonPrimary.target === \"_blank\" ? buttonPrimary.rel ?? \"noopener noreferrer\" : buttonPrimary.rel;\n  const secondaryRel = buttonSecondary?.target === \"_blank\" ? buttonSecondary.rel ?? \"noopener noreferrer\" : buttonSecondary?.rel;\n\n  return (\n    <section\n      className={`relative py-32 ${sectionClassName ?? \"\"}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImageSrc && backgroundImageWidth && backgroundImageHeight && (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            src={backgroundImageSrc}\n            alt={backgroundImageAlt ?? \"\"}\n            width={backgroundImageWidth}\n            height={backgroundImageHeight}\n            priority={backgroundImagePriority}\n            quality={backgroundImageQuality}\n            sizes={backgroundImageSizes}\n            fill={backgroundImageFill}\n            className={`h-full w-full object-cover ${backgroundImageClassName ?? \"\"}`}\n            placeholder={backgroundImagePlaceholder}\n          />\n        </div>\n      )}\n\n      <div className=\"container\">\n        <div className=\"grid items-center gap-8 md:gap-16 lg:grid-cols-2\">\n          <Image\n            src={imageSrc}\n            alt={imageAlt}\n            width={imageWidth}\n            height={imageHeight}\n            priority={imagePriority}\n            quality={imageQuality}\n            sizes={imageSizes}\n            fill={imageFill}\n            className={`max-h-96 w-full rounded-md object-cover ${imageClassName ?? \"\"}`}\n            placeholder={imagePlaceholder}\n          />\n\n          <div className=\"flex flex-col items-center text-center lg:items-start lg:text-left\">\n            <h1 className=\"my-6 mt-0 text-balance text-4xl font-semibold lg:text-5xl\">{title}</h1>\n            {description && (\n              <p className=\"mb-8 max-w-xl text-muted-foreground lg:text-lg\">{description}</p>\n            )}\n            <div className=\"flex w-full flex-col justify-center gap-2 sm:flex-row lg:justify-start\">\n              <Button asChild>\n                <Link\n                  href={buttonPrimary.href}\n                  target={buttonPrimary.target}\n                  rel={primaryRel}\n                  className={buttonPrimary.className}\n                >\n                  {buttonPrimary.label}\n                </Link>\n              </Button>\n\n              {buttonSecondary && (\n                <Button variant=\"outline\" asChild>\n                  <Link\n                    href={buttonSecondary.href}\n                    target={buttonSecondary.target}\n                    rel={secondaryRel}\n                    className={buttonSecondary.className}\n                  >\n                    {buttonSecondary.label}\n                  </Link>\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Feature2;\n"
    }
  ],
  "meta": {
    "component_name": "Feature2",
    "component_path": "src/components/ui/feature-2.tsx",
    "props": "Feature2Props",
    "props_path": "src/components/ui/feature-2.tsx",
    "original_file": "src/components/ui/feature-2.tsx",
    "transformed_at": "2025-09-21T21:15:48.752698",
    "category": "features",
    "tags": [
      "product-highlight",
      "content-container",
      "mixed-media",
      "responsive-mobile",
      "container-bound",
      "composite"
    ],
    "variations": [],
    "created_at": "2025-09-21T21:15:48.752713"
  }
}