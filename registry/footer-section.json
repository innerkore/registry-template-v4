{
  "name": "footer-section",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/tooltip.tsx)",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-label",
    "@radix-ui/react-checkbox",
    "@radix-ui/react-switch",
    "@radix-ui/react-tooltip"
  ],
  "registryDependencies": [
    "https://21st.dev/r/shadcn/button",
    "https://21st.dev/r/shadcn/input",
    "https://21st.dev/r/shadcn/label",
    "https://21st.dev/r/shadcn/switch",
    "https://21st.dev/r/shadcn/textarea",
    "https://21st.dev/r/shadcn/tooltip"
  ],
  "files": [
    {
      "path": "/components/ui/footer-section.tsx",
      "type": "registry:ui",
      "content": "import * as React from 'react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\nimport { Facebook, Instagram, Linkedin, Moon, Send, Sun, Twitter } from 'lucide-react';\n\ninterface FooterDemoProps {\n  newsletterPlaceholder: string;\n  contactAddress: string;\n  contactPhone: string;\n  contactEmail: string;\n  privacyPolicyUrl: string;\n  termsUrl: string;\n  cookieSettingsUrl: string;\n  quickLinks: { label: string; href: string }[];\n  socialLinks: { icon: JSX.Element; tooltip: string }[];\n}\n\nfunction Footerdemo({ \n  newsletterPlaceholder,\n  contactAddress,\n  contactPhone,\n  contactEmail,\n  privacyPolicyUrl,\n  termsUrl,\n  cookieSettingsUrl,\n  quickLinks,\n  socialLinks,\n}: FooterDemoProps) {\n  const [isDarkMode, setIsDarkMode] = React.useState(true);\n\n  React.useEffect(() => {\n    document.documentElement.classList.toggle('dark', isDarkMode);\n  }, [isDarkMode]);\n\n  return (\n    <footer className='relative border-t bg-background text-foreground transition-colors duration-300'>\n      <div className='container mx-auto px-4 py-12 md:px-6 lg:px-8'>\n        <div className='grid gap-12 md:grid-cols-2 lg:grid-cols-4'>\n          <div className='relative'>\n            <h2 className='mb-4 text-3xl font-bold tracking-tight'>Stay Connected</h2>\n            <p className='mb-6 text-muted-foreground'>Join our newsletter for the latest updates and exclusive offers.</p>\n            <form className='relative'>\n              <Input type='email' placeholder={newsletterPlaceholder} className='pr-12 backdrop-blur-sm' />\n              <a href='#' className='absolute right-1 top-1 h-8 w-8 rounded-full bg-primary text-primary-foreground transition-transform hover:scale-105'>\n                <Send className='h-4 w-4' />\n                <span className='sr-only'>Subscribe</span>\n              </a>\n            </form>\n            <div className='absolute -right-4 top-0 h-24 w-24 rounded-full bg-primary/10 blur-2xl' />\n          </div>\n          <div>\n            <h3 className='mb-4 text-lg font-semibold'>Quick Links</h3>\n            <nav className='space-y-2 text-sm'>\n              {quickLinks.map(link => (\n                <a key={link.label} href={link.href} className='block transition-colors hover:text-primary'>{link.label}</a>\n              ))}\n            </nav>\n          </div>\n          <div>\n            <h3 className='mb-4 text-lg font-semibold'>Contact Us</h3>\n            <address className='space-y-2 text-sm not-italic'>\n              <p>{contactAddress}</p>\n              <p>Phone: {contactPhone}</p>\n              <p>Email: {contactEmail}</p>\n            </address>\n          </div>\n          <div className='relative'>\n            <h3 className='mb-4 text-lg font-semibold'>Follow Us</h3>\n            <div className='mb-6 flex space-x-4'>\n              {socialLinks.map(link => (\n                <TooltipProvider key={link.tooltip}>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <a href='#' className='rounded-full'>\n                        {link.icon}\n                        <span className='sr-only'>{link.tooltip}</span>\n                      </a>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>{link.tooltip}</p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              ))}\n            </div>\n            <div className='flex items-center space-x-2'>\n              <Sun className='h-4 w-4' />\n              <Switch id='dark-mode' checked={isDarkMode} onCheckedChange={setIsDarkMode} />\n              <Moon className='h-4 w-4' />\n              <Label htmlFor='dark-mode' className='sr-only'>Toggle dark mode</Label>\n            </div>\n          </div>\n        </div>\n        <div className='mt-12 flex flex-col items-center justify-between gap-4 border-t pt-8 text-center md:flex-row'>\n          <p className='text-sm text-muted-foreground'>\u00a9 2024 Your Company. All rights reserved.</p>\n          <nav className='flex gap-4 text-sm'>\n            <a href={privacyPolicyUrl} className='transition-colors hover:text-primary'>Privacy Policy</a>\n            <a href={termsUrl} className='transition-colors hover:text-primary'>Terms of Service</a>\n            <a href={cookieSettingsUrl} className='transition-colors hover:text-primary'>Cookie Settings</a>\n          </nav>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport { Footerdemo };"
    },
    {
      "path": "/components/ui/button.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
    },
    {
      "path": "/components/ui/input.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"
    },
    {
      "path": "/components/ui/label.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"
    },
    {
      "path": "/components/ui/checkbox.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"
    },
    {
      "path": "/components/ui/switch.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"
    },
    {
      "path": "/components/ui/textarea.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"
    },
    {
      "path": "/components/ui/tooltip.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className,\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "component_name": "Footerdemo",
    "component_path": "/components/ui/footer-section.tsx",
    "props": "FooterDemoProps",
    "props_path": "/components/ui/footer-section.tsx",
    "original_file": "/components/ui/footer-section.tsx",
    "transformed_at": "2025-08-14T08:41:57.996674",
    "category": "footer",
    "tags": [
      "action-trigger",
      " content-container",
      " text-heavy",
      " responsive-mobile",
      " conversion-focused"
    ],
    "public_ready": true,
    "public_ready_updated_at": "2025-08-14T08:42:16.529878",
    "schema": {
      "type": "object",
      "properties": {
        "newsletterPlaceholder": {
          "type": "string"
        },
        "contactAddress": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "privacyPolicyUrl": {
          "type": "string"
        },
        "termsUrl": {
          "type": "string"
        },
        "cookieSettingsUrl": {
          "type": "string"
        },
        "quickLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "href": {
                "type": "string"
              }
            }
          }
        },
        "socialLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "icon": {},
              "tooltip": {
                "type": "string"
              }
            }
          }
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "schema_updated_at": "2025-09-03T07:59:26.796062",
    "imported_from": "https://21st.dev/r/arihantcodes/footer-section"
  }
}