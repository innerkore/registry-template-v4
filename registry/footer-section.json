{
  "name": "footer-section",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/footer-section.tsx)",
  "title": "Footer Section",
  "files": [
    {
      "path": "/components/ui/footer-section.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\n\n// ImageProps interface per guideline for optional background image\ninterface BgImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface LinkItem {\n  label: string;\n  href: string;\n  target: \"_blank\" | \"_self\";\n  rel: string;\n}\n\ninterface SocialLinkItem extends LinkItem {\n  tooltip: string;\n  iconName: string; // lucide-react icon name\n}\n\nexport interface FooterDemoProps {\n  // Optional background styling\n  backgroundColor?: string;\n  backgroundImage?: BgImageProps;\n\n  // Newsletter section\n  newsletterHeading: string;\n  newsletterDescription: string;\n  newsletterInputPlaceholder: string;\n  newsletterCtaHref: string;\n  newsletterCtaTarget: \"_blank\" | \"_self\";\n  newsletterCtaRel: string;\n  newsletterCtaIconName: string; // lucide-react icon name, e.g., \"Send\"\n  newsletterCtaAriaLabel: string;\n\n  // Quick links\n  quickLinksHeading: string;\n  quickLinks: LinkItem[];\n\n  // Contact\n  contactHeading: string;\n  contactLines: string[]; // Each line of address/contact info\n\n  // Social\n  socialHeading: string;\n  socialLinks: SocialLinkItem[];\n\n  // Theme toggle\n  darkModeLabel: string;\n\n  // Bottom bar\n  bottomCopyrightText: string;\n  bottomNavLinks: LinkItem[];\n}\n\nfunction FooterDemo(props: FooterDemoProps) {\n  const {\n    backgroundColor,\n    backgroundImage,\n\n    newsletterHeading,\n    newsletterDescription,\n    newsletterInputPlaceholder,\n    newsletterCtaHref,\n    newsletterCtaTarget,\n    newsletterCtaRel,\n    newsletterCtaIconName,\n    newsletterCtaAriaLabel,\n\n    quickLinksHeading,\n    quickLinks,\n\n    contactHeading,\n    contactLines,\n\n    socialHeading,\n    socialLinks,\n\n    darkModeLabel,\n\n    bottomCopyrightText,\n    bottomNavLinks,\n  } = props;\n\n  const [isDarkMode, setIsDarkMode] = React.useState(true);\n  const footerStyle = backgroundColor ? { backgroundColor } : undefined;\n\n  React.useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [isDarkMode]);\n\n  return (\n    <footer className=\"relative border-t bg-background text-foreground transition-colors duration-300\" style={footerStyle}>\n      {backgroundImage ? (\n        <Image\n          {...backgroundImage}\n          className={`${backgroundImage.className ?? \"\"} absolute inset-0 -z-10 object-cover`}\n        />\n      ) : null}\n      <div className=\"container mx-auto px-4 py-12 md:px-6 lg:px-8\">\n        <div className=\"grid gap-12 md:grid-cols-2 lg:grid-cols-4\">\n          {/* Newsletter */}\n          <div className=\"relative\">\n            <h2 className=\"mb-4 text-3xl font-bold tracking-tight\">{newsletterHeading}</h2>\n            <p className=\"mb-6 text-muted-foreground\">{newsletterDescription}</p>\n            <form className=\"relative\">\n              <Input type=\"email\" placeholder={newsletterInputPlaceholder} className=\"pr-12 backdrop-blur-sm\" />\n              <Button\n                asChild\n                size=\"icon\"\n                className=\"absolute right-1 top-1 h-8 w-8 rounded-full bg-primary text-primary-foreground transition-transform hover:scale-105\"\n              >\n                <Link href={newsletterCtaHref} target={newsletterCtaTarget} rel={newsletterCtaRel} className=\"flex items-center justify-center\">\n                  <DynamicIcon name={newsletterCtaIconName} className=\"h-4 w-4\" />\n                  <span className=\"sr-only\">{newsletterCtaAriaLabel}</span>\n                </Link>\n              </Button>\n            </form>\n            <div className=\"absolute -right-4 top-0 h-24 w-24 rounded-full bg-primary/10 blur-2xl\" />\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"mb-4 text-lg font-semibold\">{quickLinksHeading}</h3>\n            <nav className=\"space-y-2 text-sm\">\n              {quickLinks.map((item, idx) => (\n                <Link key={idx} href={item.href} target={item.target} rel={item.rel} className=\"block transition-colors hover:text-primary\">\n                  {item.label}\n                </Link>\n              ))}\n            </nav>\n          </div>\n\n          {/* Contact */}\n          <div>\n            <h3 className=\"mb-4 text-lg font-semibold\">{contactHeading}</h3>\n            <address className=\"space-y-2 text-sm not-italic\">\n              {contactLines.map((line, idx) => (\n                <p key={idx}>{line}</p>\n              ))}\n            </address>\n          </div>\n\n          {/* Social + Theme Toggle */}\n          <div className=\"relative\">\n            <h3 className=\"mb-4 text-lg font-semibold\">{socialHeading}</h3>\n            <div className=\"mb-6 flex space-x-4\">\n              <TooltipProvider>\n                {socialLinks.map((s, idx) => (\n                  <Tooltip key={idx}>\n                    <TooltipTrigger asChild>\n                      <Button variant=\"outline\" size=\"icon\" className=\"rounded-full\" asChild>\n                        <Link href={s.href} target={s.target} rel={s.rel} className=\"flex items-center justify-center\" aria-label={s.label}>\n                          <DynamicIcon name={s.iconName} className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">{s.label}</span>\n                        </Link>\n                      </Button>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>{s.tooltip}</p>\n                    </TooltipContent>\n                  </Tooltip>\n                ))}\n              </TooltipProvider>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <DynamicIcon name=\"Sun\" className=\"h-4 w-4\" />\n              <Switch id=\"dark-mode\" checked={isDarkMode} onCheckedChange={setIsDarkMode} />\n              <DynamicIcon name=\"Moon\" className=\"h-4 w-4\" />\n              <Label htmlFor=\"dark-mode\" className=\"sr-only\">\n                {darkModeLabel}\n              </Label>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"mt-12 flex flex-col items-center justify-between gap-4 border-t pt-8 text-center md:flex-row\">\n          <p className=\"text-sm text-muted-foreground\">{bottomCopyrightText}</p>\n          <nav className=\"flex gap-4 text-sm\">\n            {bottomNavLinks.map((item, idx) => (\n              <Link key={idx} href={item.href} target={item.target} rel={item.rel} className=\"transition-colors hover:text-primary\">\n                {item.label}\n              </Link>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport { FooterDemo };"
    }
  ],
  "meta": {
    "component_name": "FooterDemo",
    "component_path": "/components/ui/footer-section.tsx",
    "props": "FooterDemoProps",
    "props_path": "/components/ui/footer-section.tsx",
    "original_file": "/components/ui/footer-section.tsx",
    "transformed_at": "2025-09-23T17:34:15.516993",
    "category": "footer",
    "tags": [
      "trust-building",
      "navigation-element",
      "social-proof",
      "responsive-mobile",
      "accessibility-optimized",
      "minimalist"
    ],
    "variations": [],
    "created_at": "2025-09-22T18:59:58.908178",
    "install_url": "s3://registry-marketkore/registry/footer-section.json"
  }
}