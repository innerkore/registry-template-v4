{
  "name": "footer-section",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/footer-section.tsx)",
  "title": "Footer Section",
  "files": [
    {
      "path": "/components/ui/footer-section.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\nimport Link from \"@/components/Link\"\nimport Image from \"@/components/Image\"\nimport DynamicIcon from \"@/components/DynamicIcon\"\n\n// Icon typing helper (lucide icon names)\nexport type LucideIconName = string\n\n// Per guidelines\nexport interface ImageProps {\n  src: string\n  alt: string\n  width: number\n  height: number\n  priority?: boolean\n  quality?: number\n  sizes?: string\n  fill?: boolean\n  className?: string\n  placeholder?: string\n}\n\nexport interface LinkProps {\n  href: string\n  target?: \"_blank\" | \"_self\"\n  className?: string\n  rel?: string\n}\n\nexport interface NavLinkItem extends LinkProps {\n  label: string\n}\n\nexport interface SocialLinkItem extends LinkProps {\n  label: string\n  tooltip: string\n  iconName: LucideIconName\n}\n\nexport interface FooterProps {\n  // Layout and theming\n  className?: string\n  containerClassName?: string\n  backgroundColor?: string\n  backgroundImage?: ImageProps\n\n  // Dark mode toggle\n  initialDarkMode?: boolean\n  darkModeLabel: string\n  sunIconName: LucideIconName\n  moonIconName: LucideIconName\n\n  // Newsletter section\n  newsletterTitle: string\n  newsletterDescription: string\n  emailPlaceholder: string\n  subscribeAriaLabel: string\n  sendIconName: LucideIconName\n  onSubscribe?: (email: string) => void\n\n  // Quick links\n  quickLinksTitle: string\n  quickLinks: NavLinkItem[]\n\n  // Contact section\n  contactTitle: string\n  addressLines: string[]\n\n  // Social section\n  followUsTitle: string\n  socialLinks: SocialLinkItem[]\n\n  // Footer bottom\n  copyrightText: string\n  policyLinks: NavLinkItem[]\n}\n\nexport function Footer(props: FooterProps) {\n  const {\n    className,\n    containerClassName,\n    backgroundColor,\n    backgroundImage,\n    initialDarkMode,\n    darkModeLabel,\n    sunIconName,\n    moonIconName,\n    newsletterTitle,\n    newsletterDescription,\n    emailPlaceholder,\n    subscribeAriaLabel,\n    sendIconName,\n    onSubscribe,\n    quickLinksTitle,\n    quickLinks,\n    contactTitle,\n    addressLines,\n    followUsTitle,\n    socialLinks,\n    copyrightText,\n    policyLinks,\n  } = props\n\n  const [isDarkMode, setIsDarkMode] = React.useState<boolean>(Boolean(initialDarkMode))\n\n  React.useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add(\"dark\")\n    } else {\n      document.documentElement.classList.remove(\"dark\")\n    }\n  }, [isDarkMode])\n\n  const handleSubscribe = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const formData = new FormData(e.currentTarget)\n    const email = String(formData.get(\"email\") ?? \"\")\n    onSubscribe?.(email)\n  }\n\n  return (\n    <footer\n      className={`relative border-t bg-background text-foreground transition-colors duration-300 ${className ?? \"\"}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10 overflow-hidden\">\n          <Image\n            src={backgroundImage.src}\n            alt={backgroundImage.alt}\n            width={backgroundImage.width}\n            height={backgroundImage.height}\n            priority={backgroundImage.priority}\n            quality={backgroundImage.quality}\n            sizes={backgroundImage.sizes}\n            fill={backgroundImage.fill}\n            className={`object-cover ${backgroundImage.className ?? \"\"}`}\n            placeholder={backgroundImage.placeholder}\n          />\n        </div>\n      ) : null}\n\n      <div className={`container mx-auto px-4 py-12 md:px-6 lg:px-8 ${containerClassName ?? \"\"}`}>\n        <div className=\"grid gap-12 md:grid-cols-2 lg:grid-cols-4\">\n          {/* Newsletter */}\n          <div className=\"relative\">\n            <h2 className=\"mb-4 text-3xl font-bold tracking-tight\">{newsletterTitle}</h2>\n            <p className=\"mb-6 text-muted-foreground\">{newsletterDescription}</p>\n            <form className=\"relative\" onSubmit={handleSubscribe}>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder={emailPlaceholder}\n                className=\"pr-12 backdrop-blur-sm\"\n                aria-label={emailPlaceholder}\n                required\n              />\n              <Button\n                type=\"submit\"\n                size=\"icon\"\n                className=\"absolute right-1 top-1 h-8 w-8 rounded-full bg-primary text-primary-foreground transition-transform hover:scale-105\"\n              >\n                <DynamicIcon name={sendIconName} className=\"h-4 w-4\" />\n                <span className=\"sr-only\">{subscribeAriaLabel}</span>\n              </Button>\n            </form>\n            <div className=\"absolute -right-4 top-0 h-24 w-24 rounded-full bg-primary/10 blur-2xl\" />\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"mb-4 text-lg font-semibold\">{quickLinksTitle}</h3>\n            <nav className=\"space-y-2 text-sm\">\n              {quickLinks?.map((item, idx) => (\n                <Link\n                  key={idx}\n                  href={item.href}\n                  target={item.target}\n                  rel={item.rel}\n                  className=\"block transition-colors hover:text-primary\"\n                >\n                  {item.label}\n                </Link>\n              ))}\n            </nav>\n          </div>\n\n          {/* Contact */}\n          <div>\n            <h3 className=\"mb-4 text-lg font-semibold\">{contactTitle}</h3>\n            <address className=\"space-y-2 text-sm not-italic\">\n              {addressLines?.map((line, idx) => (\n                <p key={idx}>{line}</p>\n              ))}\n            </address>\n          </div>\n\n          {/* Social and Theme */}\n          <div className=\"relative\">\n            <h3 className=\"mb-4 text-lg font-semibold\">{followUsTitle}</h3>\n            <div className=\"mb-6 flex space-x-4\">\n              {socialLinks?.map((social, idx) => (\n                <TooltipProvider key={idx}>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <Button variant=\"outline\" size=\"icon\" className=\"rounded-full\" asChild>\n                        <Link href={social.href} target={social.target} rel={social.rel} className=\"inline-flex\">\n                          <DynamicIcon name={social.iconName} className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">{social.label}</span>\n                        </Link>\n                      </Button>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>{social.tooltip}</p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              ))}\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <DynamicIcon name={sunIconName} className=\"h-4 w-4\" />\n              <Switch id=\"dark-mode\" checked={isDarkMode} onCheckedChange={setIsDarkMode} />\n              <DynamicIcon name={moonIconName} className=\"h-4 w-4\" />\n              <Label htmlFor=\"dark-mode\" className=\"sr-only\">\n                {darkModeLabel}\n              </Label>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom bar */}\n        <div className=\"mt-12 flex flex-col items-center justify-between gap-4 border-t pt-8 text-center md:flex-row\">\n          <p className=\"text-sm text-muted-foreground\">{copyrightText}</p>\n          <nav className=\"flex gap-4 text-sm\">\n            {policyLinks?.map((item, idx) => (\n              <Link key={idx} href={item.href} target={item.target} rel={item.rel} className=\"transition-colors hover:text-primary\">\n                {item.label}\n              </Link>\n            ))}\n          </nav>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport { Footer }\n"
    }
  ],
  "meta": {
    "component_name": "Footer",
    "component_path": "/components/ui/footer-section.tsx",
    "props": "FooterProps",
    "props_path": "/components/ui/footer-section.tsx",
    "original_file": "/components/ui/footer-section.tsx",
    "transformed_at": "2025-09-22T18:59:58.908165",
    "category": "footer",
    "tags": [
      "engagement",
      "navigation-element",
      "responsive-mobile",
      "responsive-desktop",
      "dark-mode"
    ],
    "variations": [],
    "created_at": "2025-09-22T18:59:58.908178",
    "install_url": "s3://registry-marketkore/registry/footer-section.json"
  }
}