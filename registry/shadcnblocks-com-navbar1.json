{
  "name": "shadcnblocks-com-navbar1",
  "type": "registry:block",
  "description": "TypeScript component (transformed from /components/blocks/shadcnblocks-com-navbar1.tsx)",
  "title": "Shadcnblocks Com Navbar1",
  "files": [
    {
      "path": "/components/blocks/shadcnblocks-com-navbar1.tsx",
      "type": "registry:block",
      "content": "import Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \"@/components/ui/navigation-menu\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport React from \"react\";\n\n// Icon interface guideline\ninterface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon-name only\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\n// Image interface guideline\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\n// Internal types\ninterface MenuItem {\n  title: string;\n  url?: string;\n  description?: string;\n  icon?: Icon;\n  items?: MenuItem[];\n}\n\ninterface LogoProps {\n  url: string;\n  title: string;\n  image: ImageProps;\n}\n\ninterface AuthLinks {\n  login: {\n    text: string;\n    url: string;\n  };\n  signup: {\n    text: string;\n    url: string;\n  };\n}\n\nexport interface Navbar1Props {\n  logo: LogoProps;\n  menu: MenuItem[];\n  mobileExtraLinks?: {\n    name: string;\n    url: string;\n    target?: '_blank' | '_self';\n    rel?: string;\n  }[];\n  auth: AuthLinks;\n  backgroundImage?: ImageProps; // optional background image\n  backgroundColor?: string; // optional background color\n}\n\nconst Navbar1: React.FC<Navbar1Props> = ({\n  logo,\n  menu,\n  mobileExtraLinks,\n  auth,\n  backgroundImage,\n  backgroundColor,\n}) => {\n  return (\n    <section className=\"relative py-4\" style={backgroundColor ? { backgroundColor } : undefined}>\n      {backgroundImage ? (\n        <Image\n          {...backgroundImage}\n          fill={true}\n          className={[\n            'absolute inset-0 -z-10 object-cover',\n            backgroundImage.className || ''\n          ].join(' ').trim()}\n        />\n      ) : null}\n\n      <div className=\"container\">\n        {/* Desktop Navbar */}\n        <nav className=\"hidden justify-between lg:flex\">\n          <div className=\"flex items-center gap-6\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <Image\n                src={logo.image.src}\n                alt={logo.image.alt}\n                width={logo.image.width}\n                height={logo.image.height}\n                className={[\"w-8\", logo.image.className || \"\"].join(' ').trim()}\n              />\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n\n            <div className=\"flex items-center\">\n              <NavigationMenu>\n                <NavigationMenuList>\n                  {menu.map((item) => (\n                    <React.Fragment key={item.title}>\n                      {renderMenuItem(item)}\n                    </React.Fragment>\n                  ))}\n                </NavigationMenuList>\n              </NavigationMenu>\n            </div>\n          </div>\n\n          <div className=\"flex gap-2\">\n            <Button asChild variant=\"outline\" size=\"sm\">\n              <Link href={auth.login.url}>{auth.login.text}</Link>\n            </Button>\n            <Button asChild size=\"sm\">\n              <Link href={auth.signup.url}>{auth.signup.text}</Link>\n            </Button>\n          </div>\n        </nav>\n\n        {/* Mobile Navbar */}\n        <div className=\"block lg:hidden\">\n          <div className=\"flex items-center justify-between\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <Image\n                src={logo.image.src}\n                alt={logo.image.alt}\n                width={logo.image.width}\n                height={logo.image.height}\n                className={[\"w-8\", logo.image.className || \"\"].join(' ').trim()}\n              />\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"outline\" size=\"icon\">\n                  <DynamicIcon name=\"Menu\" className=\"size-4\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent className=\"overflow-y-auto\">\n                <SheetHeader>\n                  <SheetTitle>\n                    <Link href={logo.url} className=\"flex items-center gap-2\">\n                      <Image\n                        src={logo.image.src}\n                        alt={logo.image.alt}\n                        width={logo.image.width}\n                        height={logo.image.height}\n                        className={[\"w-8\", logo.image.className || \"\"].join(' ').trim()}\n                      />\n                      <span className=\"text-lg font-semibold\">{logo.title}</span>\n                    </Link>\n                  </SheetTitle>\n                </SheetHeader>\n\n                <div className=\"my-6 flex flex-col gap-6\">\n                  <Accordion type=\"single\" collapsible className=\"flex w-full flex-col gap-4\">\n                    {menu.map((item) => (\n                      <React.Fragment key={item.title}>\n                        {renderMobileMenuItem(item)}\n                      </React.Fragment>\n                    ))}\n                  </Accordion>\n\n                  <div className=\"border-t py-4\">\n                    <div className=\"grid grid-cols-2 justify-start\">\n                      {mobileExtraLinks?.map((link, idx) => (\n                        <Link\n                          key={idx}\n                          className=\"inline-flex h-10 items-center gap-2 whitespace-nowrap rounded-md px-4 py-2 text-sm font-medium text-muted-foreground transition-colors hover:bg-muted hover:text-accent-foreground\"\n                          href={link.url}\n                          target={link.target}\n                          rel={link.rel}\n                        >\n                          {link.name}\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"flex flex-col gap-3\">\n                    <Button asChild variant=\"outline\">\n                      <Link href={auth.login.url}>{auth.login.text}</Link>\n                    </Button>\n                    <Button asChild>\n                      <Link href={auth.signup.url}>{auth.signup.text}</Link>\n                    </Button>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nfunction renderMenuItem(item: MenuItem): React.ReactNode {\n  if (item.items && item.items.length > 0) {\n    return (\n      <NavigationMenuItem className=\"text-muted-foreground\">\n        <NavigationMenuTrigger>{item.title}</NavigationMenuTrigger>\n        <NavigationMenuContent>\n          <ul className=\"w-80 p-3\">\n            {item.items.map((subItem) => (\n              <li key={subItem.title}>\n                <NavigationMenuLink asChild>\n                  <Link\n                    className=\"flex select-none gap-4 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-muted hover:text-accent-foreground\"\n                    href={subItem.url || '#'}\n                  >\n                    {subItem.icon ? (\n                      <DynamicIcon name={subItem.icon.name} className={subItem.icon.className} />\n                    ) : null}\n                    <div>\n                      <div className=\"text-sm font-semibold\">{subItem.title}</div>\n                      {subItem.description ? (\n                        <p className=\"text-sm leading-snug text-muted-foreground\">{subItem.description}</p>\n                      ) : null}\n                    </div>\n                  </Link>\n                </NavigationMenuLink>\n              </li>\n            ))}\n          </ul>\n        </NavigationMenuContent>\n      </NavigationMenuItem>\n    );\n  }\n\n  return (\n    <NavigationMenuItem>\n      <NavigationMenuLink asChild>\n        <Link\n          className=\"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium text-muted-foreground transition-colors hover:bg-muted hover:text-accent-foreground\"\n          href={item.url || '#'}\n        >\n          {item.title}\n        </Link>\n      </NavigationMenuLink>\n    </NavigationMenuItem>\n  );\n}\n\nfunction renderMobileMenuItem(item: MenuItem): React.ReactNode {\n  if (item.items && item.items.length > 0) {\n    return (\n      <AccordionItem value={item.title} className=\"border-b-0\">\n        <AccordionTrigger className=\"py-0 font-semibold hover:no-underline\">\n          {item.title}\n        </AccordionTrigger>\n        <AccordionContent className=\"mt-2\">\n          {item.items.map((subItem) => (\n            <Link\n              key={subItem.title}\n              className=\"flex select-none gap-4 rounded-md p-3 leading-none outline-none transition-colors hover:bg-muted hover:text-accent-foreground\"\n              href={subItem.url || '#'}\n            >\n              {subItem.icon ? (\n                <DynamicIcon name={subItem.icon.name} className={subItem.icon.className} />\n              ) : null}\n              <div>\n                <div className=\"text-sm font-semibold\">{subItem.title}</div>\n                {subItem.description ? (\n                  <p className=\"text-sm leading-snug text-muted-foreground\">{subItem.description}</p>\n                ) : null}\n              </div>\n            </Link>\n          ))}\n        </AccordionContent>\n      </AccordionItem>\n    );\n  }\n\n  return (\n    <Link href={item.url || '#'} className=\"font-semibold\">\n      {item.title}\n    </Link>\n  );\n}\n\nexport { Navbar1 };"
    }
  ],
  "meta": {
    "component_name": "Navbar1",
    "component_path": "/components/blocks/shadcnblocks-com-navbar1.tsx",
    "props": "Navbar1Props",
    "props_path": "/components/blocks/shadcnblocks-com-navbar1.tsx",
    "original_file": "/components/blocks/shadcnblocks-com-navbar1.tsx",
    "transformed_at": "2025-09-22T19:59:04.024061",
    "category": "navigation",
    "tags": [
      "brand-awareness",
      "navigation-element",
      "responsive-mobile",
      "responsive-desktop",
      "accessibility-optimized",
      "above-fold"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:59:04.024072",
    "install_url": "s3://registry-marketkore/registry/shadcnblocks-com-navbar1.json"
  }
}