{
  "name": "Features",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/features.tsx)",
  "title": "Features",
  "files": [
    {
      "path": "src/components/ui/features.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport Image from \"@/components/Image\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\n\n// Icon interface (as per guidelines)\nexport interface Icon {\n  package: \"lucide\";\n  name: string; // known lucide react icon-name only\n  type: \"icon\";\n  className: string; // tailwind classes for styling\n}\n\n// Image interface (as per guidelines)\nexport interface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface FeatureItem {\n  id: number | string;\n  icon: Icon;\n  title: string;\n  description: string;\n  image: ImageProps;\n}\n\nexport interface FeaturesProps {\n  // Header content\n  eyebrowText: string; // e.g., \"AI Mentors. Real Results.\"\n  heading: string; // e.g., \"AI That Actually Teaches\"\n\n  // Feature list\n  features: FeatureItem[];\n\n  // Progress bar gradient classes (light and dark variants)\n  progressGradientLight: string; // e.g., \"bg-gradient-to-r from-sky-500 to-blue-500\"\n  progressGradientDark: string; // e.g., \"dark:from-sky-400 dark:to-blue-400\"\n\n  // Optional presentation props\n  backgroundImage?: ImageProps; // Optional background image behind the section\n  backgroundColor?: string; // Optional solid background color (e.g., \"#fff\" or \"rgb(...)\" or \"var(--color)\")\n}\n\nconst Features: React.FC<FeaturesProps> = ({\n  eyebrowText,\n  heading,\n  features,\n  progressGradientLight,\n  progressGradientDark,\n  backgroundImage,\n  backgroundColor,\n}) => {\n  const [currentFeature, setCurrentFeature] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const featureRefs = useRef<(HTMLDivElement | null)[]>([]);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setProgress((prev) => (prev >= 100 ? 100 : prev + 1));\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (!features || features.length === 0) return;\n    if (progress >= 100) {\n      const id = setTimeout(() => {\n        setCurrentFeature((prev) => (prev + 1) % features.length);\n        setProgress(0);\n      }, 200);\n      return () => clearTimeout(id);\n    }\n  }, [progress, features]);\n\n  useEffect(() => {\n    const activeFeatureElement = featureRefs.current[currentFeature];\n    const container = containerRef.current;\n\n    if (activeFeatureElement && container) {\n      const containerRect = container.getBoundingClientRect();\n      const elementRect = activeFeatureElement.getBoundingClientRect();\n\n      container.scrollTo({\n        left:\n          activeFeatureElement.offsetLeft -\n          (containerRect.width - elementRect.width) / 2,\n        behavior: \"smooth\",\n      });\n    }\n  }, [currentFeature]);\n\n  const handleFeatureClick = (index: number) => {\n    setCurrentFeature(index);\n    setProgress(0);\n  };\n\n  const currentImage = features[currentFeature]?.image;\n\n  return (\n    <section\n      className=\"relative min-h-screen py-16 px-4\"\n      style={{ backgroundColor: backgroundColor || undefined }}\n    >\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            className={`object-cover ${backgroundImage.className ?? \"\"}`}\n          />\n        </div>\n      ) : null}\n\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <span className={`text-sky-500 font-semibold text-sm uppercase tracking-wider`}>\n            {eyebrowText}\n          </span>\n          <h2 className=\"text-4xl md:text-5xl font-bold text-black dark:text-white mt-4 mb-6\">\n            {heading}\n          </h2>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 lg:gap-16 gap-8 items-center\">\n          {/* Left Side - Features with Progress Lines */}\n          <div\n            ref={containerRef}\n            className=\"lg:space-y-8 md:space-x-6 lg:space-x-0 overflow-x-auto overflow-hidden no-scrollbar lg:overflow-visible flex lg:flex lg:flex-col flex-row order-1 pb-4 scroll-smooth\"\n          >\n            {features.map((feature, index) => {\n              const isActive = currentFeature === index;\n\n              return (\n                <div\n                  key={feature.id}\n                  ref={(el) => {\n                    featureRefs.current[index] = el;\n                  }}\n                  className=\"relative cursor-pointer flex-shrink-0\"\n                  onClick={() => handleFeatureClick(index)}\n                >\n                  {/* Feature Content */}\n                  <div\n                    className={`\n                      flex lg:flex-row flex-col items-start space-x-4 p-3 max-w-sm md:max-w-sm lg:max-w-2xl transition-all duration-300\n                      ${\n                        isActive\n                          ? \" bg-white dark:bg-black/80 md:shadow-xl dark:drop-shadow-lg  rounded-xl md:border dark:border-none border-gray-200 \"\n                          : \" \"\n                      }\n                    `}\n                  >\n                    {/* Icon */}\n                    <div\n                      className={`\n                        p-3 hidden md:block rounded-full transition-all duration-300\n                        ${\n                          isActive\n                            ? `bg-sky-500 text-white`\n                            : `bg-sky-500/10 dark:bg-black/80 text-sky-500`\n                        }\n                      `}\n                    >\n                      <DynamicIcon name={feature.icon.name} className={feature.icon.className} />\n                    </div>\n\n                    {/* Content */}\n                    <div className=\"flex-1\">\n                      <h3\n                        className={`\n                          text-lg md:mt-4 lg:mt-0 font-semibold mb-2 transition-colors duration-300\n                          ${\n                            isActive\n                              ? \"text-gray-900 dark:text-white\"\n                              : \"text-gray-700 dark:text-white/80\"\n                          }\n                        `}\n                      >\n                        {feature.title}\n                      </h3>\n                      <p\n                        className={`\n                          transition-colors duration-300 text-sm\n                          ${\n                            isActive\n                              ? \"text-gray-600 dark:text-white/60\"\n                              : \"text-gray-500 dark:text-white/40\"\n                          }\n                        `}\n                      >\n                        {feature.description}\n                      </p>\n                      <div className=\"mt-4 bg-white dark:bg-black/80 rounded-sm h-1 overflow-hidden\">\n                        {isActive && (\n                          <motion.div\n                            className={`h-full ${progressGradientLight} ${progressGradientDark}`}\n                            initial={{ width: 0 }}\n                            animate={{ width: `${progress}%` }}\n                            transition={{ duration: 0.1, ease: \"linear\" }}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Right Side - Image Display */}\n          <div className=\"relative order-1 max-w-lg mx-auto lg:order-2\">\n            {currentImage && (\n              <motion.div\n                key={currentFeature}\n                initial={{ opacity: 0, y: 50 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -50 }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n                className=\"relative\"\n              >\n                <Image\n                  {...currentImage}\n                  className={`rounded-2xl border dark:border-none border-gray-50 shadow-lg dark:drop-shadow-lg ${currentImage.className ?? \"\"}`}\n                />\n              </motion.div>\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Features;\n"
    }
  ],
  "meta": {
    "component_name": "Features",
    "component_path": "src/components/ui/features.tsx",
    "props": "FeaturesProps",
    "props_path": "src/components/ui/features.tsx",
    "original_file": "src/components/ui/features.tsx",
    "transformed_at": "2025-09-22T19:20:46.863211",
    "category": "features",
    "tags": [
      "product-highlight",
      "mixed-media",
      "interactive",
      "responsive-mobile",
      "responsive-desktop",
      "animated"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:20:46.863228",
    "install_url": "s3://registry-marketkore/registry/Features.json"
  }
}