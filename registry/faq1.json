{
  "name": "faq1",
  "type": "registry:block",
  "description": "TypeScript component (transformed from /components/ui/accordion.tsx)",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-accordion"
  ],
  "registryDependencies": [
    "https://21st.dev/r/shadcn/accordion"
  ],
  "files": [
    {
      "path": "/components/blocks/faq1.tsx",
      "type": "registry:block",
      "content": "import Image from \"@/components/Image\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\n\n// Background image props aligned with the project's Image component interface\nexport interface BackgroundImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface FaqItem {\n  question: string;\n  answer: string;\n}\n\nexport interface Faq1Props {\n  heading?: string;\n  items?: FaqItem[];\n  backgroundImage?: BackgroundImageProps;\n  backgroundColor?: string;\n  className?: string;\n}\n\nexport function Faq1({\n  heading,\n  items,\n  backgroundImage,\n  backgroundColor,\n  className,\n}: Faq1Props) {\n  return (\n    <section\n      className={[\"relative py-32\", className].filter(Boolean).join(\" \")}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage ? (\n        <Image\n          {...backgroundImage}\n          className={[\n            \"absolute inset-0 -z-10 h-full w-full object-cover\",\n            backgroundImage.className,\n          ]\n            .filter(Boolean)\n            .join(\" \")}\n        />\n      ) : null}\n\n      <div className=\"container mx-auto\">\n        {heading ? (\n          <h1 className=\"mb-4 text-3xl font-semibold md:mb-11 md:text-5xl\">{heading}</h1>\n        ) : null}\n\n        {items?.map((item, index) => (\n          <Accordion key={index} type=\"single\" collapsible>\n            <AccordionItem value={`item-${index}`}>\n              <AccordionTrigger className=\"hover:text-foreground/60 hover:no-underline\">\n                {item.question}\n              </AccordionTrigger>\n              <AccordionContent>{item.answer}</AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nexport { Faq1 };"
    },
    {
      "path": "/components/ui/accordion.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "imported_from": "https://21st.dev/r/shadcnblockscom/faq1",
    "component_name": "Faq1",
    "component_path": "/components/blocks/faq1.tsx",
    "props": "Faq1Props",
    "props_path": "/components/blocks/faq1.tsx",
    "original_file": "/components/blocks/faq1.tsx",
    "transformed_at": "2025-09-21T21:13:34.797062",
    "category": "faq",
    "tags": [
      "trust-building",
      "disclosure",
      "text-heavy",
      "responsive-mobile",
      "accessibility-optimized"
    ],
    "variations": []
  }
}