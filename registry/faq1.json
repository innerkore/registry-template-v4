{
  "name": "faq1",
  "type": "registry:block",
  "description": "TypeScript component (transformed from /components/ui/accordion.tsx)",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-accordion"
  ],
  "registryDependencies": [
    "https://21st.dev/r/shadcn/accordion"
  ],
  "files": [
    {
      "path": "/components/blocks/faq1.tsx",
      "type": "registry:block",
      "content": "import React from \"react\";\nimport Image from \"@/components/Image\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\n\nexport interface FaqItem {\n  question: string;\n  answer: string;\n}\n\n// Per guidelines\nexport interface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface Faq1Props {\n  heading: string;\n  items: FaqItem[];\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n  sectionClassName?: string;\n  containerClassName?: string;\n  headingClassName?: string;\n}\n\nexport const Faq1: React.FC<Faq1Props> = ({\n  heading,\n  items,\n  backgroundImage,\n  backgroundColor,\n  sectionClassName,\n  containerClassName,\n  headingClassName,\n}) => {\n  return (\n    <section\n      className={`relative ${sectionClassName ?? \"\"}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            fill={backgroundImage.fill ?? true}\n            className={`object-cover ${backgroundImage.className ?? \"\"}`}\n          />\n        </div>\n      ) : null}\n\n      <div className=\"py-32\">\n        <div className={`container mx-auto ${containerClassName ?? \"\"}`}>\n          <h1 className={`mb-4 text-3xl font-semibold md:mb-11 md:text-5xl ${headingClassName ?? \"\"}`}>\n            {heading}\n          </h1>\n          {items.map((item, index) => (\n            <Accordion key={`${item.question}-${index}`} type=\"single\" collapsible>\n              <AccordionItem value={`item-${index}`}>\n                <AccordionTrigger className=\"hover:text-foreground/60 hover:no-underline\">\n                  {item.question}\n                </AccordionTrigger>\n                <AccordionContent>{item.answer}</AccordionContent>\n              </AccordionItem>\n            </Accordion>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Faq1;\nexport type { Faq1Props as Props };"
    },
    {
      "path": "/components/ui/accordion.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "imported_from": "https://21st.dev/r/shadcnblockscom/faq1",
    "component_name": "Faq1",
    "component_path": "/components/blocks/faq1.tsx",
    "props": "Faq1Props",
    "props_path": "/components/blocks/faq1.tsx",
    "original_file": "/components/blocks/faq1.tsx",
    "transformed_at": "2025-09-21T20:43:44.010852",
    "category": "faq",
    "tags": [
      "trust-building",
      "disclosure",
      "text-heavy",
      "responsive-mobile",
      "consideration-stage"
    ],
    "variations": []
  }
}