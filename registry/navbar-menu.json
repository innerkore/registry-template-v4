{
  "name": "navbar-menu",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/navbar-menu.tsx)",
  "title": "Navbar Menu",
  "files": [
    {
      "path": "/components/ui/navbar-menu.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\nimport * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\n\nconst transition = {\n  type: \"spring\",\n  mass: 0.5,\n  damping: 11.5,\n  stiffness: 100,\n  restDelta: 0.001,\n  restSpeed: 0.001,\n} as const;\n\nexport interface MenuItemProps {\n  setActive: (item: string) => void;\n  active: string | null;\n  item: string;\n  children?: React.ReactNode;\n}\n\nexport const MenuItem: React.FC<MenuItemProps> = ({ setActive, active, item, children }) => {\n  return (\n    <div onMouseEnter={() => setActive(item)} className=\"relative\">\n      <motion.p\n        transition={{ duration: 0.3 }}\n        className=\"cursor-pointer text-black hover:opacity-[0.9] dark:text-white\"\n      >\n        {item}\n      </motion.p>\n      {active !== null && (\n        <motion.div\n          initial={{ opacity: 0, scale: 0.85, y: 10 }}\n          animate={{ opacity: 1, scale: 1, y: 0 }}\n          transition={transition}\n        >\n          {active === item && (\n            <div className=\"absolute top-[calc(100%_+_1.2rem)] left-1/2 transform -translate-x-1/2 pt-4\">\n              <motion.div\n                transition={transition}\n                layoutId=\"active\"\n                className=\"bg-white dark:bg-black backdrop-blur-sm rounded-2xl overflow-hidden border border-black/[0.2] dark:border-white/[0.2] shadow-xl\"\n              >\n                <motion.div layout className=\"w-max h-full p-4\">\n                  {children}\n                </motion.div>\n              </motion.div>\n            </div>\n          )}\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport interface MenuBackgroundImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface MenuProps {\n  setActive: (item: string | null) => void;\n  children: React.ReactNode;\n  backgroundImage?: MenuBackgroundImageProps;\n  backgroundColor?: string; // CSS color string (e.g., hex, rgb, var(--token))\n  className?: string;\n}\n\nexport const Menu: React.FC<MenuProps> = ({ setActive, children, backgroundImage, backgroundColor, className }) => {\n  return (\n    <nav\n      onMouseLeave={() => setActive(null)}\n      className={[\n        \"relative rounded-full border border-transparent dark:bg-black dark:border-white/[0.2] bg-white shadow-input flex justify-center space-x-4 px-8 py-6\",\n        className ?? \"\",\n      ].join(\" \")}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10 overflow-hidden rounded-full\">\n          <Image\n            src={backgroundImage.src}\n            alt={backgroundImage.alt}\n            width={backgroundImage.width}\n            height={backgroundImage.height}\n            priority={backgroundImage.priority}\n            quality={backgroundImage.quality}\n            sizes={backgroundImage.sizes}\n            fill={backgroundImage.fill}\n            className={[\"object-cover\", backgroundImage.className ?? \"\"].join(\" \")}\n            placeholder={backgroundImage.placeholder}\n          />\n        </div>\n      ) : null}\n      {children}\n    </nav>\n  );\n};\n\nexport interface ProductItemImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface ProductItemLinkProps {\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  className?: string;\n  rel?: string;\n}\n\nexport interface ProductItemProps {\n  title: string;\n  description: string;\n  link: ProductItemLinkProps;\n  image: ProductItemImageProps;\n  containerClassName?: string;\n}\n\nexport const ProductItem: React.FC<ProductItemProps> = ({ title, description, link, image, containerClassName }) => {\n  const computedRel = link.target === \"_blank\" ? link.rel ?? \"noopener noreferrer\" : link.rel;\n  return (\n    <Link href={link.href} className={[\"flex space-x-2\", containerClassName ?? \"\", link.className ?? \"\"].join(\" \")} target={link.target} rel={computedRel}>\n      <Image\n        src={image.src}\n        width={image.width}\n        height={image.height}\n        alt={image.alt}\n        className={[\"flex-shrink-0 rounded-md shadow-2xl\", image.className ?? \"\"].join(\" \")}\n        priority={image.priority}\n        quality={image.quality}\n        sizes={image.sizes}\n        fill={image.fill}\n        placeholder={image.placeholder}\n      />\n      <div>\n        <h4 className=\"text-xl font-bold mb-1 text-black dark:text-white\">{title}</h4>\n        <p className=\"text-neutral-700 text-sm max-w-[10rem] dark:text-neutral-300\">{description}</p>\n      </div>\n    </Link>\n  );\n};\n\nexport interface HoveredLinkProps {\n  href: string;\n  label: string;\n  target?: \"_blank\" | \"_self\";\n  className?: string;\n  rel?: string;\n}\n\nexport const HoveredLink: React.FC<HoveredLinkProps> = ({ href, label, target, className, rel }) => {\n  const computedRel = target === \"_blank\" ? rel ?? \"noopener noreferrer\" : rel;\n  return (\n    <Link href={href} target={target} rel={computedRel} className={[\"text-neutral-700 dark:text-neutral-200 hover:text-black\", className ?? \"\"].join(\" \")}>{label}</Link>\n  );\n};\n\nexport default Menu;\n"
    }
  ],
  "meta": {
    "component_name": "Menu",
    "component_path": "/components/ui/navbar-menu.tsx",
    "props": "MenuProps",
    "props_path": "/components/ui/navbar-menu.tsx",
    "original_file": "/components/ui/navbar-menu.tsx",
    "transformed_at": "2025-09-22T18:56:38.742307",
    "category": "navigation",
    "tags": [
      "navigation-element",
      "interactive",
      "responsive-mobile",
      "header",
      "engagement"
    ],
    "variations": [],
    "created_at": "2025-09-22T17:47:00.058737",
    "install_url": "s3://registry-marketkore/registry/navbar-menu.json"
  }
}