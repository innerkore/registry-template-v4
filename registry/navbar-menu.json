{
  "name": "navbar-menu",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/navbar-menu.tsx)",
  "title": "Navbar Menu",
  "files": [
    {
      "path": "/components/ui/navbar-menu.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\nimport React, { ReactNode, CSSProperties } from \"react\";\nimport { motion } from \"framer-motion\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\n\nconst transition = {\n  type: \"spring\",\n  mass: 0.5,\n  damping: 11.5,\n  stiffness: 100,\n  restDelta: 0.001,\n  restSpeed: 0.001,\n} as const;\n\nexport interface MenuItemProps {\n  setActive: (item: string) => void;\n  active: string | null;\n  item: string;\n  children?: ReactNode;\n}\n\nexport const MenuItem: React.FC<MenuItemProps> = ({ setActive, active, item, children }) => {\n  return (\n    <div onMouseEnter={() => setActive(item)} className=\"relative \">\n      <motion.p\n        transition={{ duration: 0.3 }}\n        className=\"cursor-pointer text-black hover:opacity-[0.9] dark:text-white\"\n      >\n        {item}\n      </motion.p>\n      {active !== null && (\n        <motion.div\n          initial={{ opacity: 0, scale: 0.85, y: 10 }}\n          animate={{ opacity: 1, scale: 1, y: 0 }}\n          transition={transition}\n        >\n          {active === item && (\n            <div className=\"absolute top-[calc(100%_+_1.2rem)] left-1/2 transform -translate-x-1/2 pt-4\">\n              <motion.div\n                transition={transition}\n                layoutId=\"active\"\n                className=\"bg-white dark:bg-black backdrop-blur-sm rounded-2xl overflow-hidden border border-black/[0.2] dark:border-white/[0.2] shadow-xl\"\n              >\n                <motion.div layout className=\"w-max h-full p-4\">\n                  {children}\n                </motion.div>\n              </motion.div>\n            </div>\n          )}\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport interface MenuProps {\n  setActive: (item: string | null) => void;\n  children: ReactNode;\n  backgroundColor?: string;\n  backgroundImage?: {\n    src: string;\n    alt: string;\n    width: number;\n    height: number;\n    priority?: boolean;\n    quality?: number;\n    sizes?: string;\n    fill?: boolean;\n    className?: string;\n    placeholder?: string;\n  };\n  className?: string;\n}\n\nexport const Menu: React.FC<MenuProps> = ({ setActive, children, backgroundColor, backgroundImage, className }) => {\n  const style: CSSProperties = {\n    ...(backgroundColor ? { backgroundColor } : {}),\n  };\n\n  return (\n    <nav\n      onMouseLeave={() => setActive(null)}\n      className={`relative rounded-full border border-transparent dark:bg-black dark:border-white/[0.2] bg-white shadow-input flex justify-center space-x-4 px-8 py-6 ${className ?? \"\"}`}\n      style={style}\n    >\n      {backgroundImage && (\n        <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n          <Image {...backgroundImage} className={`object-cover ${backgroundImage.className ?? \"\"}`} />\n        </div>\n      )}\n      {children}\n    </nav>\n  );\n};\n\nexport interface ProductItemProps {\n  title: string;\n  description: string;\n  linkHref: string;\n  linkClassName?: string;\n  linkTarget?: \"_blank\" | \"_self\";\n  linkRel?: string;\n  image: {\n    src: string;\n    alt: string;\n    width: number;\n    height: number;\n    priority?: boolean;\n    quality?: number;\n    sizes?: string;\n    fill?: boolean;\n    className?: string;\n    placeholder?: string;\n  };\n}\n\nexport const ProductItem: React.FC<ProductItemProps> = ({ title, description, linkHref, linkClassName, linkTarget, linkRel, image }) => {\n  return (\n    <Link href={linkHref} className={`flex space-x-2 ${linkClassName ?? \"\"}`} target={linkTarget} rel={linkRel}>\n      <Image\n        {...image}\n        className={`flex-shrink-0 rounded-md shadow-2xl ${image.className ?? \"\"}`}\n      />\n      <div>\n        <h4 className=\"text-xl font-bold mb-1 text-black dark:text-white\">{title}</h4>\n        <p className=\"text-neutral-700 text-sm max-w-[10rem] dark:text-neutral-300\">{description}</p>\n      </div>\n    </Link>\n  );\n};\n\nexport interface HoveredLinkProps {\n  href: string;\n  children: ReactNode;\n  className?: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n}\n\nexport const HoveredLink: React.FC<HoveredLinkProps> = ({ children, href, className, target, rel }) => {\n  return (\n    <Link\n      href={href}\n      className={`text-neutral-700 dark:text-neutral-200 hover:text-black ${className ?? \"\"}`}\n      target={target}\n      rel={rel}\n    >\n      {children}\n    </Link>\n  );\n};\n"
    }
  ],
  "meta": {
    "component_name": "Menu",
    "component_path": "/components/ui/navbar-menu.tsx",
    "props": "MenuProps, MenuItemProps, ProductItemProps, HoveredLinkProps",
    "props_path": "/components/ui/navbar-menu.tsx",
    "original_file": "/components/ui/navbar-menu.tsx",
    "transformed_at": "2025-09-23T17:31:57.194376",
    "category": "navigation",
    "tags": [
      "engagement",
      "navigation-element",
      "interactive",
      "responsive-desktop",
      "responsive-mobile"
    ],
    "variations": [],
    "created_at": "2025-09-22T17:47:00.058737",
    "install_url": "s3://registry-marketkore/registry/navbar-menu.json"
  }
}