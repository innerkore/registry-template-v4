{
  "name": "typewriter-effec",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/typewriter-effect.tsx)",
  "title": "Typewriter Effec",
  "files": [
    {
      "path": "/components/ui/typewriter-effect.tsx",
      "type": "registry:ui",
      "content": "import { cn } from \"@/lib/utils\";\nimport { motion, stagger, useAnimate, useInView } from \"framer-motion\";\nimport { useEffect } from \"react\";\nimport Link from \"@/components/Link\";\n\ninterface TypewriterEffectProps {\n  words: {\n    text: string;\n    className?: string;\n  }[];\n  className?: string;\n  cursorClassName?: string;\n  backgroundImage?: string;\n  backgroundColor?: string;\n}\n\nexport const TypewriterEffect = ({\n  words,\n  className,\n  cursorClassName,\n  backgroundImage,\n  backgroundColor,\n}: TypewriterEffectProps) => {\n  const wordsArray = words.map((word) => {\n    return {\n      ...word,\n      text: word.text.split(\"\"),\n    };\n  });\n\n  const [scope, animate] = useAnimate();\n  const isInView = useInView(scope);\n  useEffect(() => {\n    if (isInView) {\n      animate(\n        \"span\",\n        {\n          display: \"inline-block\",\n          opacity: 1,\n          width: \"fit-content\",\n        },\n        {\n          duration: 0.3,\n          delay: stagger(0.1),\n          ease: \"easeInOut\",\n        }\n      );\n    }\n  }, [isInView]);\n\n  const renderWords = () => {\n    return (\n      <motion.div ref={scope} className=\"inline\">\n        {wordsArray.map((word, idx) => {\n          return (\n            <div key={`word-${idx}`} className=\"inline-block\">\n              {word.text.map((char, index) => (\n                <motion.span\n                  initial={{}}\n                  key={`char-${index}`}\n                  className={cn(\n                    `dark:text-white text-black opacity-0 hidden`,\n                    word.className\n                  )}\n                >\n                  {char}\n                </motion.span>\n              ))}\n              &nbsp;\n            </div>\n          );\n        })}\n      </motion.div>\n    );\n  };\n\n  return (\n    <div\n      className={cn(\n        \"text-base sm:text-xl md:text-3xl lg:text-5xl font-bold text-center\",\n        className\n      )}\n      style={{ backgroundImage: `url(${backgroundImage})`, backgroundColor }}\n    >\n      {renderWords()}\n      <motion.span\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.8, repeat: Infinity, repeatType: \"reverse\" }}\n        className={cn(\n          \"inline-block rounded-sm w-[4px] h-4 md:h-6 lg:h-10 bg-blue-500\",\n          cursorClassName\n        )}\n      ></motion.span>\n    </div>\n  );\n};"
    }
  ],
  "meta": {
    "component_name": "TypewriterEffect",
    "component_path": "/components/ui/typewriter-effect.tsx",
    "props": "TypewriterEffectProps",
    "props_path": "/components/ui/typewriter-effect.tsx",
    "original_file": "/components/ui/typewriter-effect.tsx",
    "transformed_at": "2025-09-19T06:12:48.744603",
    "category": "content-container",
    "tags": [
      "text-heavy",
      "animated",
      "dynamic-content",
      "responsive-mobile",
      "above-fold"
    ],
    "variations": [],
    "created_at": "2025-09-19T06:12:48.744619"
  }
}