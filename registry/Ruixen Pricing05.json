{
  "name": "Ruixen Pricing05",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/ruixen-pricing05.tsx)",
  "title": "Ruixen Pricing05",
  "files": [
    {
      "path": "src/components/ui/ruixen-pricing05.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface LinkProps {\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  className?: string;\n  rel?: string;\n}\n\ninterface PricingTier {\n  title: string;\n  monthlyPrice: number;\n  buttonText: string;\n  buttonLink: Pick<LinkProps, \"href\" | \"target\" | \"rel\">;\n  popular?: boolean;\n  inverse?: boolean;\n  features: string[];\n}\n\nexport interface Pricing05Props {\n  className?: string;\n  heading: string;\n  subheading?: string;\n  currencySymbol: string;\n  priceSuffix: string;\n  tiers: PricingTier[];\n  popularBadgeText?: string;\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n}\n\nconst Pricing05: React.FC<Pricing05Props> = ({\n  className,\n  heading,\n  subheading,\n  currencySymbol,\n  priceSuffix,\n  tiers,\n  popularBadgeText,\n  backgroundImage,\n  backgroundColor,\n}) => {\n  return (\n    <section\n      className={`py-24 relative ${className ?? \"\"}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage && (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image {...backgroundImage} />\n        </div>\n      )}\n\n      <div className=\"container\">\n        <div className=\"text-center max-w-2xl mx-auto\">\n          <h2 className=\"text-4xl font-semibold tracking-tight sm:text-5xl\">\n            {heading}\n          </h2>\n          {subheading && (\n            <p className=\"text-muted-foreground mt-4 text-lg\">{subheading}</p>\n          )}\n        </div>\n\n        <div className=\"flex flex-col gap-6 items-center mt-12 lg:flex-row lg:items-end lg:justify-center\">\n          {tiers.map(({ title, monthlyPrice, buttonText, buttonLink, popular, features, inverse }) => (\n            <Card key={title} className={`max-w-xs w-full border ${inverse ? \"bg-black text-white\" : \"\"}`}>\n              <CardHeader className=\"flex justify-between items-start\">\n                <CardTitle className={`text-lg font-bold ${inverse ? \"text-white/70\" : \"text-muted-foreground\"}`}>\n                  {title}\n                </CardTitle>\n                {popular && popularBadgeText && (\n                  <motion.div\n                    animate={{ backgroundPositionX: \"-100%\" }}\n                    transition={{\n                      duration: 1,\n                      repeat: Infinity,\n                      ease: \"linear\",\n                      repeatType: \"loop\",\n                    }}\n                    className=\"text-sm px-3 py-1 rounded-xl border border-white/20 bg-[linear-gradient(to_right,#DD7DDF,#E1CD86,#BBCB92,#71C2EF,#3BFFFF)] [background-size:200%] text-transparent bg-clip-text font-medium\"\n                  >\n                    {popularBadgeText}\n                  </motion.div>\n                )}\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-baseline gap-1 mt-2\">\n                  <span className=\"text-4xl font-bold tracking-tighter leading-none\">\n                    {currencySymbol}\n                    {monthlyPrice}\n                  </span>\n                  <span className={`tracking-tight font-semibold ${inverse ? \"text-white/60\" : \"text-muted-foreground\"}`}>\n                    {priceSuffix}\n                  </span>\n                </div>\n                <Button variant={inverse ? \"secondary\" : \"default\"} className=\"w-full mt-6\" asChild>\n                  <Link href={buttonLink.href} target={buttonLink.target} rel={buttonLink.rel}>\n                    {buttonText}\n                  </Link>\n                </Button>\n                <ul className=\"flex flex-col gap-4 mt-6 text-sm\">\n                  {features.map((feature) => (\n                    <li key={feature} className=\"flex items-center gap-2\">\n                      <span>{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Pricing05;"
    }
  ],
  "meta": {
    "component_name": "Pricing05",
    "component_path": "src/components/ui/ruixen-pricing05.tsx",
    "props": "Pricing05Props",
    "props_path": "src/components/ui/ruixen-pricing05.tsx",
    "original_file": "src/components/ui/ruixen-pricing05.tsx",
    "transformed_at": "2025-09-22T19:19:38.483580",
    "category": "pricing",
    "tags": [
      "conversion-focused",
      "action-trigger",
      "content-container",
      "responsive-mobile",
      "responsive-desktop",
      "minimalist",
      "decision-stage"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:19:38.483586"
  }
}