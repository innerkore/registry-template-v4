{
  "name": "Feature 73",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/feature-73.tsx)",
  "title": "Feature 73",
  "files": [
    {
      "path": "src/components/ui/feature-73.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport { Button } from \"@/components/ui/button\";\n\nexport interface FeatureImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface FeatureItem {\n  id: string;\n  title: string;\n  description: string;\n  image: FeatureImageProps;\n}\n\nexport interface Feature73Props {\n  heading: string;\n  description: string;\n  cta?: {\n    href: string;\n    text: string;\n    target?: \"_blank\" | \"_self\";\n    rel?: string;\n    iconName?: string; // lucide icon name\n    className?: string;\n  };\n  features?: FeatureItem[];\n  className?: string;\n  backgroundColor?: string;\n  backgroundImage?: FeatureImageProps;\n}\n\nexport const Feature73: React.FC<Feature73Props> = ({\n  heading,\n  description,\n  cta,\n  features,\n  className,\n  backgroundColor,\n  backgroundImage,\n}) => {\n  const sectionClassName = [\"py-32\", \"relative\", className].filter(Boolean).join(\" \");\n\n  const renderImage = (img: FeatureImageProps, extraClass?: string) => (\n    <Image\n      src={img.src}\n      alt={img.alt}\n      width={img.width}\n      height={img.height}\n      priority={img.priority}\n      quality={img.quality}\n      sizes={img.sizes}\n      fill={img.fill}\n      placeholder={img.placeholder}\n      className={[\"aspect-[16/9] h-full w-full object-cover object-center\", img.className, extraClass]\n        .filter(Boolean)\n        .join(\" \")}\n    />\n  );\n\n  return (\n    <section className={sectionClassName} style={{ backgroundColor }}>\n      {backgroundImage && (\n        <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n          <Image\n            src={backgroundImage.src}\n            alt={backgroundImage.alt}\n            width={backgroundImage.width}\n            height={backgroundImage.height}\n            priority={backgroundImage.priority}\n            quality={backgroundImage.quality}\n            sizes={backgroundImage.sizes}\n            placeholder={backgroundImage.placeholder}\n            fill\n            className={[\"object-cover\", backgroundImage.className].filter(Boolean).join(\" \")}\n          />\n        </div>\n      )}\n\n      <div className=\"container flex flex-col gap-16 lg:px-16\">\n        <div className=\"lg:max-w-sm\">\n          <h2 className=\"mb-3 text-xl font-semibold md:mb-4 md:text-4xl lg:mb-6\">{heading}</h2>\n          <p className=\"mb-8 text-muted-foreground lg:text-lg\">{description}</p>\n\n          {cta?.href && cta?.text && (\n            <Button asChild className={[\"group flex items-center text-xs font-medium md:text-base lg:text-lg p-0 h-auto\", cta.className].filter(Boolean).join(\" \")}> \n              <Link href={cta.href} target={cta.target} rel={cta.rel} className=\"group flex items-center\">\n                {cta.text}\n                {cta.iconName ? (\n                  <DynamicIcon name={cta.iconName} className=\"ml-2 size-4 transition-transform group-hover:translate-x-1\" />\n                ) : null}\n              </Link>\n            </Button>\n          )}\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-2 lg:gap-8\">\n          {features && features[0] && (\n            <div className=\"flex flex-col overflow-clip rounded-xl border border-border md:col-span-2 md:grid md:grid-cols-2 md:gap-6 lg:gap-8\">\n              <div className=\"md:min-h-[24rem] lg:min-h-[28rem] xl:min-h-[32rem]\">\n                {renderImage(features[0].image)}\n              </div>\n              <div className=\"flex flex-col justify-center px-6 py-8 md:px-8 md:py-10 lg:px-10 lg:py-12\">\n                <h3 className=\"mb-3 text-lg font-semibold md:mb-4 md:text-2xl lg:mb-6\">{features[0].title}</h3>\n                <p className=\"text-muted-foreground lg:text-lg\">{features[0].description}</p>\n              </div>\n            </div>\n          )}\n\n          {features?.slice(1).map((feature) => (\n            <div key={feature.id} className=\"flex flex-col overflow-clip rounded-xl border border-border\">\n              <div>{renderImage(feature.image)}</div>\n              <div className=\"px-6 py-8 md:px-8 md:py-10 lg:px-10 lg:py-12\">\n                <h3 className=\"mb-3 text-lg font-semibold md:mb-4 md:text-2xl lg:mb-6\">{feature.title}</h3>\n                <p className=\"text-muted-foreground lg:text-lg\">{feature.description}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Feature73;\n"
    }
  ],
  "meta": {
    "component_name": "Feature73",
    "component_path": "src/components/ui/feature-73.tsx",
    "props": "Feature73Props",
    "props_path": "src/components/ui/feature-73.tsx",
    "original_file": "src/components/ui/feature-73.tsx",
    "transformed_at": "2025-09-21T21:46:33.094143",
    "category": "features",
    "tags": [
      "product-highlight",
      "action-trigger",
      "visual-dominant",
      "responsive-mobile",
      "container-bound"
    ],
    "variations": [],
    "created_at": "2025-09-21T21:16:51.463091"
  }
}