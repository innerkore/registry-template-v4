{
  "name": "Feature 73",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/feature-73.tsx)",
  "title": "Feature 73",
  "files": [
    {
      "path": "src/components/ui/feature-73.tsx",
      "type": "registry:component",
      "content": "import DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\nimport { Button } from \"@/components/ui/button\";\nimport type { CSSProperties } from \"react\";\n\ninterface FeatureImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface FeatureItem {\n  id: string;\n  title: string;\n  description: string;\n  image: FeatureImageProps;\n}\n\ninterface CtaProps {\n  href: string;\n  text: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n}\n\nexport interface Feature73Props {\n  heading: string;\n  description: string;\n  cta: CtaProps;\n  features: FeatureItem[];\n  backgroundImage?: FeatureImageProps;\n  backgroundColor?: string;\n  className?: string;\n}\n\nexport function Feature73({\n  heading,\n  description,\n  cta,\n  features,\n  backgroundImage,\n  backgroundColor,\n  className,\n}: Feature73Props): JSX.Element {\n  const sectionStyle: CSSProperties | undefined = backgroundColor\n    ? { backgroundColor }\n    : undefined;\n\n  const computedRel = cta?.rel ?? (cta?.target === \"_blank\" ? \"noopener noreferrer\" : undefined);\n\n  return (\n    <section className={`relative py-32 ${className ?? \"\"}`} style={sectionStyle}>\n      {backgroundImage && (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            src={backgroundImage.src}\n            alt={backgroundImage.alt}\n            width={backgroundImage.width}\n            height={backgroundImage.height}\n            priority={backgroundImage.priority}\n            quality={backgroundImage.quality}\n            sizes={backgroundImage.sizes}\n            fill={backgroundImage.fill ?? true}\n            className={`h-full w-full object-cover object-center ${backgroundImage.className ?? \"\"}`}\n            placeholder={backgroundImage.placeholder}\n          />\n        </div>\n      )}\n\n      <div className=\"container flex flex-col gap-16 lg:px-16\">\n        <div className=\"lg:max-w-sm\">\n          <h2 className=\"mb-3 text-xl font-semibold md:mb-4 md:text-4xl lg:mb-6\">{heading}</h2>\n          <p className=\"mb-8 text-muted-foreground lg:text-lg\">{description}</p>\n\n          {cta?.href && cta?.text && (\n            <Button asChild>\n              <Link\n                href={cta.href}\n                className=\"group inline-flex items-center text-xs font-medium md:text-base lg:text-lg\"\n                target={cta.target}\n                rel={computedRel}\n              >\n                {cta.text}\n                <DynamicIcon name=\"ArrowRight\" className=\"ml-2 size-4 transition-transform group-hover:translate-x-1\" />\n              </Link>\n            </Button>\n          )}\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-2 lg:gap-8\">\n          {Array.isArray(features) && features[0] && (\n            <div className=\"flex flex-col overflow-clip rounded-xl border border-border md:col-span-2 md:grid md:grid-cols-2 md:gap-6 lg:gap-8\">\n              <div className=\"md:min-h-[24rem] lg:min-h-[28rem] xl:min-h-[32rem]\">\n                <Image\n                  src={features[0].image.src}\n                  alt={features[0].image.alt}\n                  width={features[0].image.width}\n                  height={features[0].image.height}\n                  priority={features[0].image.priority}\n                  quality={features[0].image.quality}\n                  sizes={features[0].image.sizes}\n                  fill={features[0].image.fill}\n                  className={`aspect-[16/9] h-full w-full object-cover object-center ${features[0].image.className ?? \"\"}`}\n                  placeholder={features[0].image.placeholder}\n                />\n              </div>\n              <div className=\"flex flex-col justify-center px-6 py-8 md:px-8 md:py-10 lg:px-10 lg:py-12\">\n                <h3 className=\"mb-3 text-lg font-semibold md:mb-4 md:text-2xl lg:mb-6\">{features[0].title}</h3>\n                <p className=\"text-muted-foreground lg:text-lg\">{features[0].description}</p>\n              </div>\n            </div>\n          )}\n\n          {Array.isArray(features) &&\n            features.slice(1).map((feature) => (\n              <div key={feature.id} className=\"flex flex-col overflow-clip rounded-xl border border-border\">\n                <div>\n                  <Image\n                    src={feature.image.src}\n                    alt={feature.image.alt}\n                    width={feature.image.width}\n                    height={feature.image.height}\n                    priority={feature.image.priority}\n                    quality={feature.image.quality}\n                    sizes={feature.image.sizes}\n                    fill={feature.image.fill}\n                    className={`aspect-[16/9] h-full w-full object-cover object-center ${feature.image.className ?? \"\"}`}\n                    placeholder={feature.image.placeholder}\n                  />\n                </div>\n                <div className=\"px-6 py-8 md:px-8 md:py-10 lg:px-10 lg:py-12\">\n                  <h3 className=\"mb-3 text-lg font-semibold md:mb-4 md:text-2xl lg:mb-6\">{feature.title}</h3>\n                  <p className=\"text-muted-foreground lg:text-lg\">{feature.description}</p>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Feature73;"
    }
  ],
  "meta": {
    "component_name": "Feature73",
    "component_path": "src/components/ui/feature-73.tsx",
    "props": "Feature73Props",
    "props_path": "src/components/ui/feature-73.tsx",
    "original_file": "src/components/ui/feature-73.tsx",
    "transformed_at": "2025-09-22T19:47:35.855917",
    "category": "features",
    "tags": [
      "product-highlight",
      "content-container",
      "visual-dominant",
      "responsive-mobile",
      "consideration-stage"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:47:35.855930"
  }
}