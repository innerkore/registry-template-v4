{
  "name": "pricing",
  "type": "registry:block",
  "description": "TypeScript component (transformed from /components/blocks/pricing.tsx)",
  "title": "Pricing",
  "files": [
    {
      "path": "/components/blocks/pricing.tsx",
      "type": "registry:block",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { useMediaQuery } from \"@/hooks/use-media-query\";\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"framer-motion\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\nimport { useState, useRef } from \"react\";\nimport confetti from \"canvas-confetti\";\nimport NumberFlow from \"@number-flow/react\";\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface PricingPlan {\n  name: string;\n  price: string;\n  yearlyPrice: string;\n  period: string;\n  features: string[];\n  description: string;\n  buttonText: string;\n  href: string;\n  hrefTarget?: \"_blank\" | \"_self\";\n  hrefRel?: string;\n  isPopular: boolean;\n  hidePeriod?: boolean;\n}\n\nexport interface PricingProps {\n  plans: PricingPlan[];\n  title: string;\n  description: string;\n  billingToggleLabel: string; // e.g., \"Annual billing\"\n  billingToggleSaveLabel: string; // e.g., \"Save 20%\"\n  billedMonthlyText: string; // e.g., \"billed monthly\"\n  billedAnnuallyText: string; // e.g., \"billed annually\"\n  popularLabel: string; // e.g., \"Popular\"\n  currency: string; // ISO 4217 code e.g., \"USD\"\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n}\n\nexport function Pricing({\n  plans,\n  title,\n  description,\n  billingToggleLabel,\n  billingToggleSaveLabel,\n  billedMonthlyText,\n  billedAnnuallyText,\n  popularLabel,\n  currency,\n  backgroundColor,\n  backgroundImage,\n}: PricingProps) {\n  const [isMonthly, setIsMonthly] = useState(true);\n  const isDesktop = useMediaQuery(\"(min-width: 768px)\");\n  const switchRef = useRef<HTMLButtonElement>(null);\n\n  const handleToggle = (checked: boolean) => {\n    setIsMonthly(!checked);\n    if (checked && switchRef.current) {\n      const rect = switchRef.current.getBoundingClientRect();\n      const x = rect.left + rect.width / 2;\n      const y = rect.top + rect.height / 2;\n\n      confetti({\n        particleCount: 50,\n        spread: 60,\n        origin: {\n          x: x / window.innerWidth,\n          y: y / window.innerHeight,\n        },\n        colors: [\n          \"hsl(var(--primary))\",\n          \"hsl(var(--accent))\",\n          \"hsl(var(--secondary))\",\n          \"hsl(var(--muted))\",\n        ],\n        ticks: 200,\n        gravity: 1.2,\n        decay: 0.94,\n        startVelocity: 30,\n        shapes: [\"circle\"],\n      });\n    }\n  };\n\n  return (\n    <div className=\"container py-20 relative\" style={{ backgroundColor }}>\n      {backgroundImage && (\n        <Image\n          src={backgroundImage.src}\n          alt={backgroundImage.alt}\n          width={backgroundImage.width}\n          height={backgroundImage.height}\n          priority={backgroundImage.priority}\n          quality={backgroundImage.quality}\n          sizes={backgroundImage.sizes}\n          fill={backgroundImage.fill}\n          className={cn(\n            \"absolute inset-0 -z-10 object-cover pointer-events-none\",\n            backgroundImage.className\n          )}\n          placeholder={backgroundImage.placeholder}\n        />\n      )}\n\n      <div className=\"text-center space-y-4 mb-12\">\n        <h2 className=\"text-4xl font-bold tracking-tight sm:text-5xl\">{title}</h2>\n        <p className=\"text-muted-foreground text-lg whitespace-pre-line\">{description}</p>\n      </div>\n\n      <div className=\"flex justify-center mb-10\">\n        <label className=\"relative inline-flex items-center cursor-pointer\">\n          <Label>\n            <Switch ref={switchRef} checked={!isMonthly} onCheckedChange={handleToggle} className=\"relative\" />\n          </Label>\n        </label>\n        <span className=\"ml-2 font-semibold\">\n          {billingToggleLabel} <span className=\"text-primary\">({billingToggleSaveLabel})</span>\n        </span>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 sm:2 gap-4\">\n        {plans.map((plan, index) => (\n          <motion.div\n            key={index}\n            initial={{ y: 50, opacity: 1 }}\n            whileInView={\n              isDesktop\n                ? {\n                    y: plan.isPopular ? -20 : 0,\n                    opacity: 1,\n                    x: index === 2 ? -30 : index === 0 ? 30 : 0,\n                    scale: index === 0 || index === 2 ? 0.94 : 1.0,\n                  }\n                : {}\n            }\n            viewport={{ once: true }}\n            transition={{\n              duration: 1.6,\n              type: \"spring\",\n              stiffness: 100,\n              damping: 30,\n              delay: 0.4,\n              opacity: { duration: 0.5 },\n            }}\n            className={cn(\n              `rounded-2xl border-[1px] p-6 bg-background text-center lg:flex lg:flex-col lg:justify-center relative`,\n              plan.isPopular ? \"border-primary border-2\" : \"border-border\",\n              \"flex flex-col\",\n              !plan.isPopular && \"mt-5\",\n              index === 0 || index === 2\n                ? \"z-0 transform translate-x-0 translate-y-0 -translate-z-[50px] rotate-y-[10deg]\"\n                : \"z-10\",\n              index === 0 && \"origin-right\",\n              index === 2 && \"origin-left\"\n            )}\n          >\n            {plan.isPopular && (\n              <div className=\"absolute top-0 right-0 bg-primary py-0.5 px-2 rounded-bl-xl rounded-tr-xl flex items-center\">\n                <DynamicIcon name=\"Star\" className=\"text-primary-foreground h-4 w-4 fill-current\" />\n                <span className=\"text-primary-foreground ml-1 font-sans font-semibold\">{popularLabel}</span>\n              </div>\n            )}\n            <div className=\"flex-1 flex flex-col\">\n              <p className=\"text-base font-semibold text-muted-foreground\">{plan.name}</p>\n              <div className=\"mt-6 flex items-center justify-center gap-x-2\">\n                <span className=\"text-5xl font-bold tracking-tight text-foreground\">\n                  <NumberFlow\n                    value={isMonthly ? Number(plan.price) : Number(plan.yearlyPrice)}\n                    format={{\n                      style: \"currency\",\n                      currency,\n                      minimumFractionDigits: 0,\n                      maximumFractionDigits: 0,\n                    }}\n                    transformTiming={{ duration: 500, easing: \"ease-out\" }}\n                    willChange\n                    className=\"font-variant-numeric: tabular-nums\"\n                  />\n                </span>\n                {!plan.hidePeriod && (\n                  <span className=\"text-sm font-semibold leading-6 tracking-wide text-muted-foreground\">/ {plan.period}</span>\n                )}\n              </div>\n\n              <p className=\"text-xs leading-5 text-muted-foreground\">{isMonthly ? billedMonthlyText : billedAnnuallyText}</p>\n\n              <ul className=\"mt-5 gap-2 flex flex-col\">\n                {plan.features.map((feature, idx) => (\n                  <li key={idx} className=\"flex items-start gap-2\">\n                    <DynamicIcon name=\"Check\" className=\"h-4 w-4 text-primary mt-1 flex-shrink-0\" />\n                    <span className=\"text-left\">{feature}</span>\n                  </li>\n                ))}\n              </ul>\n\n              <hr className=\"w-full my-4\" />\n\n              <Button\n                asChild\n                variant=\"outline\"\n                className={cn(\n                  \"group relative w-full gap-2 overflow-hidden text-lg font-semibold tracking-tighter\",\n                  \"transform-gpu ring-offset-current transition-all duration-300 ease-out hover:ring-2 hover:ring-primary hover:ring-offset-1 hover:bg-primary hover:text-primary-foreground\",\n                  plan.isPopular ? \"bg-primary text-primary-foreground\" : \"bg-background text-foreground\"\n                )}\n              >\n                <Link href={plan.href} target={plan.hrefTarget} rel={plan.hrefRel}>\n                  {plan.buttonText}\n                </Link>\n              </Button>\n\n              <p className=\"mt-6 text-xs leading-5 text-muted-foreground\">{plan.description}</p>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"
    }
  ],
  "meta": {
    "component_name": "Pricing",
    "component_path": "/components/blocks/pricing.tsx",
    "props": "PricingProps",
    "props_path": "/components/blocks/pricing.tsx",
    "original_file": "/components/blocks/pricing.tsx",
    "transformed_at": "2025-09-23T16:53:02.724346",
    "category": "pricing",
    "tags": [
      "conversion-focused",
      "content-container",
      "interactive",
      "responsive-mobile",
      "responsive-desktop",
      "decision-stage"
    ],
    "variations": [],
    "created_at": "2025-09-22T17:39:46.767005",
    "install_url": "s3://registry-marketkore/registry/pricing.json"
  }
}