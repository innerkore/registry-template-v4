{
  "name": "testimonial",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/testimonials.tsx)",
  "title": "Testimonial",
  "files": [
    {
      "path": "/components/ui/testimonials.tsx",
      "type": "registry:ui",
      "content": "import { useState } from 'react';\nimport Image from 'next/image';\nimport { cn } from '@/lib/utils';\nimport { Card } from '@/components/ui/card';\nimport { Icons } from '@/components/ui/icons';\n\ninterface Testimonial {\n  image: string;\n  name: string;\n  username: string;\n  text: string;\n  social: string;\n}\n\ninterface TestimonialsProps {\n  testimonials: Testimonial[];\n  className?: string;\n  title?: string;\n  description?: string;\n  maxDisplayed?: number;\n}\n\nexport function Testimonials({\n  testimonials,\n  className,\n  title = 'Read what people are saying',\n  description = 'Dummy feedback from virtual customers using our component library.',\n  maxDisplayed = 6,\n}: TestimonialsProps) {\n  const [showAll, setShowAll] = useState(false);\n\n  const openInNewTab = (url: string) => {\n    window.open(url, '_blank')?.focus();\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"flex flex-col items-center justify-center pt-5\">\n        <div className=\"flex flex-col gap-5 mb-8\">\n          <h2 className=\"text-center text-4xl font-medium\">{title}</h2>\n          <p className=\"text-center text-muted-foreground\">\n            {description.split('<br />').map((line, i) => (\n              <span key={i}>\n                {line}\n                {i !== description.split('<br />').length - 1 && <br />}\n              </span>\n            ))}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"relative\">\n        <div\n          className={cn(\n            'flex justify-center items-center gap-5 flex-wrap',\n            !showAll && testimonials.length > maxDisplayed && 'max-h-[720px] overflow-hidden',\n          )}\n        >\n          {testimonials\n            .slice(0, showAll ? undefined : maxDisplayed)\n            .map((testimonial, index) => (\n              <Card\n                key={index}\n                className=\"w-80 h-auto p-5 relative bg-card border-border\"\n              >\n                <div className=\"flex items-center\">\n                  <Image\n                    src={testimonial.image}\n                    alt={testimonial.name}\n                    width={50}\n                    height={50}\n                    className=\"rounded-full\"\n                  />\n                  <div className=\"flex flex-col pl-4\">\n                    <span className=\"font-semibold text-base\">\n                      {testimonial.name}\n                    </span>\n                    <span className=\"text-sm text-muted-foreground\">\n                      {testimonial.username}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"mt-5 mb-5\">\n                  <p className=\"text-foreground font-medium\">\n                    {testimonial.text}\n                  </p>\n                </div>\n                <a\n                  onClick={() => openInNewTab(testimonial.social)}\n                  className=\"absolute top-4 right-4 hover:opacity-80 transition-opacity\"\n                  href={testimonial.social}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Icons.twitter className=\"h-4 w-4\" aria-hidden=\"true\" />\n                </a>\n              </Card>\n            ))}\n        </div>\n\n        {testimonials.length > maxDisplayed && !showAll && (\n          <>\n            <div className=\"absolute bottom-0 left-0 w-full h-20 bg-gradient-to-t from-background to-transparent\" />\n            <div className=\"absolute bottom-10 left-1/2 transform -translate-x-1/2 z-20\">\n              <a href=\"#\" onClick={() => setShowAll(true)} className=\"btn btn-secondary\">\n                Load More\n              </a>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}"
    }
  ],
  "meta": {
    "component_name": "Testimonials",
    "component_path": "/components/ui/testimonials.tsx",
    "props": "TestimonialsProps",
    "props_path": "/components/ui/testimonials.tsx",
    "original_file": "/components/ui/testimonials.tsx",
    "transformed_at": "2025-08-14T10:18:38.806104",
    "category": "testimonials",
    "tags": [
      "content-container",
      " text-heavy",
      " interactive-element",
      " responsive-mobile",
      " trust-building",
      " consideration-stage"
    ],
    "created_at": "2025-08-14T10:18:38.806111"
  }
}