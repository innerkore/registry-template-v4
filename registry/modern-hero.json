{
  "name": "modern-hero",
  "type": "registry:block",
  "description": "TypeScript component (transformed from /components/blocks/modern-hero.tsx)",
  "title": "Modern Hero",
  "files": [
    {
      "path": "/components/blocks/modern-hero.tsx",
      "type": "registry:block",
      "content": "import React from \"react\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\nimport { Avatar } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\n\n// Image props interface per guideline\nexport interface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface Hero7Props {\n  heading?: string;\n  description?: string;\n  button?: {\n    text: string;\n    url: string;\n    target?: \"_blank\" | \"_self\";\n    rel?: string;\n  };\n  reviews?: {\n    count: number;\n    stars: number;\n    prefixText?: string; // e.g., \"from\"\n    suffixText?: string; // e.g., \"reviews\"\n    avatars: ImageProps[];\n  };\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n}\n\nconst Hero7: React.FC<Hero7Props> = ({\n  heading,\n  description,\n  button,\n  reviews,\n  backgroundColor,\n  backgroundImage,\n}) => {\n  const starCount = reviews?.stars ?? 0;\n\n  return (\n    <section className=\"relative py-32\" style={{ backgroundColor }}>\n      {backgroundImage && (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            className={`${backgroundImage.className ?? \"\"} size-full object-cover`}\n          />\n        </div>\n      )}\n\n      <div className=\"container text-center\">\n        <div className=\"mx-auto flex max-w-screen-lg flex-col gap-6\">\n          {heading && (\n            <h1 className=\"text-3xl font-extrabold lg:text-6xl\">{heading}</h1>\n          )}\n          {description && (\n            <p className=\"text-balance text-muted-foreground lg:text-lg\">{description}</p>\n          )}\n        </div>\n\n        {button?.text && button?.url && (\n          <Button asChild size=\"lg\" className=\"mt-10\">\n            <Link href={button.url} target={button.target} rel={button.rel}>\n              {button.text}\n            </Link>\n          </Button>\n        )}\n\n        {reviews && (\n          <div className=\"mx-auto mt-10 flex w-fit flex-col items-center gap-4 sm:flex-row\">\n            <span className=\"mx-4 inline-flex items-center -space-x-4\">\n              {reviews.avatars?.map((avatar, index) => (\n                <Avatar key={index} className=\"size-14 border\">\n                  <Image\n                    {...avatar}\n                    className={`${avatar.className ?? \"\"} size-full rounded-full object-cover`}\n                  />\n                </Avatar>\n              ))}\n            </span>\n            <div>\n              <div className=\"flex items-center gap-1\">\n                {Array.from({ length: starCount }).map((_, index) => (\n                  <DynamicIcon\n                    key={index}\n                    name=\"Star\"\n                    className=\"size-5 fill-yellow-400 text-yellow-400\"\n                  />\n                ))}\n              </div>\n              <p className=\"text-left font-medium text-muted-foreground\">\n                {reviews.prefixText ? `${reviews.prefixText} ` : \"\"}\n                {reviews.count}+ {reviews.suffixText}\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport { Hero7 };\nexport type { Hero7Props };"
    }
  ],
  "meta": {
    "component_name": "Hero7",
    "component_path": "/components/blocks/modern-hero.tsx",
    "props": "Hero7Props",
    "props_path": "/components/blocks/modern-hero.tsx",
    "original_file": "/components/blocks/modern-hero.tsx",
    "transformed_at": "2025-09-22T19:54:17.812480",
    "category": "hero",
    "tags": [
      "conversion-focused",
      "action-trigger",
      "visual-dominant",
      "responsive-mobile",
      "above-fold",
      "minimalist"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:54:17.812492",
    "install_url": "s3://registry-marketkore/registry/modern-hero.json"
  }
}