{
  "name": "Navbar 5",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/navbar-5.tsx)",
  "title": "Navbar 5",
  "files": [
    {
      "path": "src/components/ui/navbar-5.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport React from \"react\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@/components/ui/navigation-menu\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\n\n// Image, Link, and Icon interfaces as per guidelines\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface LinkProps {\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  className?: string;\n  rel?: string;\n}\n\ninterface FeatureItem {\n  title: string;\n  description: string;\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n}\n\ninterface SimpleNavLink {\n  label: string;\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n}\n\nexport interface Navbar5Props {\n  brandName: string;\n  brandHref: string;\n  brandLogo: ImageProps;\n\n  featuresLabel: string; // e.g., \"Features\"\n  features: FeatureItem[];\n\n  navLinks: SimpleNavLink[]; // e.g., Products, Resources, Contact\n  mobileLinks: SimpleNavLink[]; // e.g., Templates, Blog, Pricing\n\n  primaryCta: SimpleNavLink; // e.g., Start for free\n  secondaryCta: SimpleNavLink; // e.g., Sign in\n\n  menuIconName: string; // lucide icon name\n\n  backgroundColor?: string;\n  backgroundImageUrl?: string; // optional background image URL for section\n}\n\nexport const Navbar5: React.FC<Navbar5Props> = ({\n  brandName,\n  brandHref,\n  brandLogo,\n  featuresLabel,\n  features,\n  navLinks,\n  mobileLinks,\n  primaryCta,\n  secondaryCta,\n  menuIconName,\n  backgroundColor,\n  backgroundImageUrl,\n}) => {\n  const sectionStyle: React.CSSProperties = {\n    ...(backgroundColor ? { backgroundColor } : {}),\n    ...(backgroundImageUrl\n      ? {\n          backgroundImage: `url(${backgroundImageUrl})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }\n      : {}),\n  };\n\n  return (\n    <section className=\"py-4\" style={sectionStyle}>\n      <div className=\"container\">\n        <nav className=\"flex items-center justify-between\">\n          <Link href={brandHref} className=\"flex items-center gap-2\">\n            <Image\n              src={brandLogo.src}\n              alt={brandLogo.alt}\n              width={brandLogo.width}\n              height={brandLogo.height}\n              className={`max-h-8 ${brandLogo.className ?? \"\"}`}\n              priority={brandLogo.priority}\n              quality={brandLogo.quality}\n              sizes={brandLogo.sizes}\n              fill={brandLogo.fill}\n              placeholder={brandLogo.placeholder}\n            />\n            <span className=\"text-lg font-semibold tracking-tighter\">\n              {brandName}\n            </span>\n          </Link>\n\n          <NavigationMenu className=\"hidden lg:block\">\n            <NavigationMenuList>\n              <NavigationMenuItem>\n                <NavigationMenuTrigger>{featuresLabel}</NavigationMenuTrigger>\n                <NavigationMenuContent>\n                  <div className=\"grid w-[600px] grid-cols-2 p-3\">\n                    {features.map((feature, index) => (\n                      <NavigationMenuLink asChild key={`${feature.title}-${index}`}>\n                        <Link\n                          href={feature.href}\n                          target={feature.target}\n                          rel={feature.rel}\n                          className=\"rounded-md p-3 transition-colors hover:bg-muted/70\"\n                        >\n                          <div>\n                            <p className=\"mb-1 font-semibold text-foreground\">\n                              {feature.title}\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {feature.description}\n                            </p>\n                          </div>\n                        </Link>\n                      </NavigationMenuLink>\n                    ))}\n                  </div>\n                </NavigationMenuContent>\n              </NavigationMenuItem>\n\n              {navLinks.map((item, idx) => (\n                <NavigationMenuItem key={`${item.label}-${idx}`}>\n                  <NavigationMenuLink asChild>\n                    <Link\n                      href={item.href}\n                      target={item.target}\n                      rel={item.rel}\n                      className={navigationMenuTriggerStyle()}\n                    >\n                      {item.label}\n                    </Link>\n                  </NavigationMenuLink>\n                </NavigationMenuItem>\n              ))}\n            </NavigationMenuList>\n          </NavigationMenu>\n\n          <div className=\"hidden items-center gap-4 lg:flex\">\n            <Button asChild variant=\"outline\">\n              <Link href={secondaryCta.href} target={secondaryCta.target} rel={secondaryCta.rel}>\n                {secondaryCta.label}\n              </Link>\n            </Button>\n            <Button asChild>\n              <Link href={primaryCta.href} target={primaryCta.target} rel={primaryCta.rel}>\n                {primaryCta.label}\n              </Link>\n            </Button>\n          </div>\n\n          <Sheet>\n            <SheetTrigger asChild className=\"lg:hidden\">\n              <Button variant=\"outline\" size=\"icon\" aria-label=\"Open menu\">\n                <DynamicIcon name={menuIconName} className=\"h-4 w-4\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"top\" className=\"max-h-screen overflow-auto\">\n              <SheetHeader>\n                <SheetTitle>\n                  <Link href={brandHref} className=\"flex items-center gap-2\">\n                    <Image\n                      src={brandLogo.src}\n                      alt={brandLogo.alt}\n                      width={brandLogo.width}\n                      height={brandLogo.height}\n                      className={`max-h-8 ${brandLogo.className ?? \"\"}`}\n                      priority={brandLogo.priority}\n                      quality={brandLogo.quality}\n                      sizes={brandLogo.sizes}\n                      fill={brandLogo.fill}\n                      placeholder={brandLogo.placeholder}\n                    />\n                    <span className=\"text-lg font-semibold tracking-tighter\">\n                      {brandName}\n                    </span>\n                  </Link>\n                </SheetTitle>\n              </SheetHeader>\n              <div className=\"flex flex-col p-4\">\n                <Accordion type=\"single\" collapsible className=\"mt-4 mb-2\">\n                  <AccordionItem value=\"solutions\" className=\"border-none\">\n                    <AccordionTrigger className=\"text-base hover:no-underline\">\n                      {featuresLabel}\n                    </AccordionTrigger>\n                    <AccordionContent>\n                      <div className=\"grid md:grid-cols-2\">\n                        {features.map((feature, index) => (\n                          <Link\n                            href={feature.href}\n                            key={`${feature.title}-${index}`}\n                            target={feature.target}\n                            rel={feature.rel}\n                            className=\"rounded-md p-3 transition-colors hover:bg-muted/70\"\n                          >\n                            <div>\n                              <p className=\"mb-1 font-semibold text-foreground\">\n                                {feature.title}\n                              </p>\n                              <p className=\"text-sm text-muted-foreground\">\n                                {feature.description}\n                              </p>\n                            </div>\n                          </Link>\n                        ))}\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n                <div className=\"flex flex-col gap-6\">\n                  {mobileLinks.map((item, idx) => (\n                    <Link\n                      href={item.href}\n                      key={`${item.label}-${idx}`}\n                      className=\"font-medium\"\n                      target={item.target}\n                      rel={item.rel}\n                    >\n                      {item.label}\n                    </Link>\n                  ))}\n                </div>\n                <div className=\"mt-6 flex flex-col gap-4\">\n                  <Button asChild variant=\"outline\">\n                    <Link href={secondaryCta.href} target={secondaryCta.target} rel={secondaryCta.rel}>\n                      {secondaryCta.label}\n                    </Link>\n                  </Button>\n                  <Button asChild>\n                    <Link href={primaryCta.href} target={primaryCta.target} rel={primaryCta.rel}>\n                      {primaryCta.label}\n                    </Link>\n                  </Button>\n                </div>\n              </div>\n            </SheetContent>\n          </Sheet>\n        </nav>\n      </div>\n    </section>\n  );\n};\n"
    }
  ],
  "meta": {
    "component_name": "Navbar5",
    "component_path": "src/components/ui/navbar-5.tsx",
    "props": "Navbar5Props",
    "props_path": "src/components/ui/navbar-5.tsx",
    "original_file": "src/components/ui/navbar-5.tsx",
    "transformed_at": "2025-09-22T19:55:22.915911",
    "category": "navigation",
    "tags": [
      "brand-awareness",
      "navigation-element",
      "responsive-mobile",
      "responsive-desktop",
      "interactive",
      "minimalist"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:55:22.915930"
  }
}