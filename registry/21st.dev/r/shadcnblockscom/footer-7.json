{
  "name": "footer-7",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/footer-7.tsx)",
  "title": "Footer 7",
  "dependencies": [
    "react-icons"
  ],
  "files": [
    {
      "path": "src/components/ui/footer-7.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\n\n// Icon interface as per guidelines\ninterface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon-name only\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\n// Image props interface as per guidelines\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface SocialLink {\n  icon: Icon;\n  href: string;\n  label: string;\n  target?: '_blank' | '_self';\n  rel?: string;\n}\n\ninterface SectionLink {\n  name: string;\n  href: string;\n  target?: '_blank' | '_self';\n  rel?: string;\n}\n\ninterface Section {\n  title: string;\n  links: SectionLink[];\n}\n\ninterface LegalLink {\n  name: string;\n  href: string;\n  target?: '_blank' | '_self';\n  rel?: string;\n}\n\nexport interface Footer7Props {\n  // Optional background controls\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n\n  // Brand / logo block\n  logo?: {\n    linkHref?: string;\n    image: ImageProps;\n    title: string;\n  };\n\n  // Content blocks\n  description?: string;\n  socialLinks?: SocialLink[];\n  sections?: Section[];\n  legalLinks?: LegalLink[];\n\n  // Footer bottom\n  copyright?: string;\n}\n\nexport const Footer7: React.FC<Footer7Props> = ({\n  backgroundImage,\n  backgroundColor,\n  logo,\n  description,\n  socialLinks,\n  sections,\n  legalLinks,\n  copyright,\n}) => {\n  return (\n    <section className=\"relative py-32\" style={backgroundColor ? { backgroundColor } : undefined}>\n      {backgroundImage && (\n        <Image\n          {...backgroundImage}\n          className={`absolute inset-0 -z-10 object-cover ${backgroundImage.className ?? ''}`}\n        />\n      )}\n      <div className=\"container mx-auto\">\n        <div className=\"flex w-full flex-col justify-between gap-10 lg:flex-row lg:items-start lg:text-left\">\n          <div className=\"flex w-full flex-col justify-between gap-6 lg:items-start\">\n            <div className=\"flex items-center gap-2 lg:justify-start\">\n              {logo?.linkHref ? (\n                <Link href={logo.linkHref} className=\"inline-flex items-center\">\n                  <Image\n                    {...logo.image}\n                    className={`h-8 ${logo.image.className ?? ''}`}\n                  />\n                </Link>\n              ) : (\n                logo?.image && (\n                  <Image\n                    {...logo.image}\n                    className={`h-8 ${logo.image.className ?? ''}`}\n                  />\n                )\n              )}\n              {logo?.title && (\n                <h2 className=\"text-xl font-semibold\">{logo.title}</h2>\n              )}\n            </div>\n\n            {description && (\n              <p className=\"max-w-[70%] text-sm text-muted-foreground\">{description}</p>\n            )}\n\n            {Array.isArray(socialLinks) && socialLinks.length > 0 && (\n              <ul className=\"flex items-center space-x-6 text-muted-foreground\">\n                {socialLinks.map((social, idx) => (\n                  <li key={idx} className=\"font-medium hover:text-primary\">\n                    <Link href={social.href} className=\"inline-flex\" target={social.target} rel={social.rel}>\n                      <DynamicIcon name={social.icon.name} className={social.icon.className} />\n                      <span className=\"sr-only\">{social.label}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n\n          <div className=\"grid w-full gap-6 md:grid-cols-3 lg:gap-20\">\n            {Array.isArray(sections) && sections.map((section, sectionIdx) => (\n              <div key={sectionIdx}>\n                <h3 className=\"mb-4 font-bold\">{section.title}</h3>\n                <ul className=\"space-y-3 text-sm text-muted-foreground\">\n                  {section.links.map((link, linkIdx) => (\n                    <li key={linkIdx} className=\"font-medium hover:text-primary\">\n                      <Link href={link.href} target={link.target} rel={link.rel} className=\"inline-flex\">\n                        {link.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mt-8 flex flex-col justify-between gap-4 border-t py-8 text-xs font-medium text-muted-foreground md:flex-row md:items-center md:text-left\">\n          {copyright && <p className=\"order-2 lg:order-1\">{copyright}</p>}\n          {Array.isArray(legalLinks) && legalLinks.length > 0 && (\n            <ul className=\"order-1 flex flex-col gap-2 md:order-2 md:flex-row\">\n              {legalLinks.map((link, idx) => (\n                <li key={idx} className=\"hover:text-primary\">\n                  <Link href={link.href} target={link.target} rel={link.rel} className=\"inline-flex\">\n                    {link.name}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Footer7;\n"
    }
  ],
  "meta": {
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/shadcnblockscom/footer-7.json",
    "imported_from": "https://21st.dev/r/shadcnblockscom/footer-7",
    "component_name": "Footer7",
    "component_path": "src/components/ui/footer-7.tsx",
    "props": "Footer7Props",
    "props_path": "src/components/ui/footer-7.tsx",
    "original_file": "src/components/ui/footer-7.tsx",
    "transformed_at": "2025-09-23T21:49:45.125405",
    "category": "footer",
    "tags": [
      "footer",
      "trust-building",
      "navigation-element",
      "text-heavy",
      "responsive-mobile",
      "container-bound",
      "simple",
      "accessibility-optimized"
    ],
    "variations": [],
    "schema": {
      "type": "object",
      "properties": {
        "backgroundImage": {
          "type": "object",
          "properties": {
            "src": {
              "type": "string"
            },
            "alt": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "priority": {
              "type": "boolean"
            },
            "quality": {
              "type": "number"
            },
            "sizes": {
              "type": "string"
            },
            "fill": {
              "type": "boolean"
            },
            "className": {
              "type": "string"
            },
            "placeholder": {
              "type": "string"
            }
          }
        },
        "backgroundColor": {
          "type": "string"
        },
        "logo": {
          "type": "object",
          "properties": {
            "linkHref": {
              "type": "string"
            },
            "image": {
              "type": "object",
              "properties": {
                "src": {
                  "type": "string"
                },
                "alt": {
                  "type": "string"
                },
                "width": {
                  "type": "number"
                },
                "height": {
                  "type": "number"
                },
                "priority": {
                  "type": "boolean"
                },
                "quality": {
                  "type": "number"
                },
                "sizes": {
                  "type": "string"
                },
                "fill": {
                  "type": "boolean"
                },
                "className": {
                  "type": "string"
                },
                "placeholder": {
                  "type": "string"
                }
              }
            },
            "title": {
              "type": "string"
            }
          }
        },
        "description": {
          "type": "string"
        },
        "socialLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "icon": {
                "type": "object",
                "properties": {
                  "package": {
                    "type": "string",
                    "const": "lucide"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "const": "icon"
                  },
                  "className": {
                    "type": "string"
                  }
                }
              },
              "href": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "target": {
                "enum": [
                  "_blank",
                  "_self"
                ],
                "type": "string"
              },
              "rel": {
                "type": "string"
              }
            }
          }
        },
        "sections": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "links": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    },
                    "target": {
                      "enum": [
                        "_blank",
                        "_self"
                      ],
                      "type": "string"
                    },
                    "rel": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "legalLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "target": {
                "enum": [
                  "_blank",
                  "_self"
                ],
                "type": "string"
              },
              "rel": {
                "type": "string"
              }
            }
          }
        },
        "copyright": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "schema_updated_at": "2025-09-25T10:05:33.495390"
  }
}