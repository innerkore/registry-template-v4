{
  "name": "feature-73",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/feature-73.tsx)",
  "title": "Feature 73",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "src/components/ui/feature-73.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\nimport { Button } from \"@/components/ui/button\";\n\n// Icon interface per guidelines\ninterface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon name\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\n// ImageProps interface per guidelines\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ninterface FeatureItem {\n  id: string;\n  title: string;\n  description: string;\n  image: ImageProps;\n}\n\nexport interface Feature73Props {\n  heading: string;\n  description: string;\n  ctaHref: string;\n  ctaLabel: string;\n  ctaTarget?: '_blank' | '_self';\n  ctaRel?: string;\n  ctaIcon?: Icon;\n  features: FeatureItem[];\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n}\n\nconst Feature73: React.FC<Feature73Props> = ({\n  heading,\n  description,\n  ctaHref,\n  ctaLabel,\n  ctaTarget,\n  ctaRel,\n  ctaIcon,\n  features,\n  backgroundImage,\n  backgroundColor,\n}) => {\n  return (\n    <section className=\"py-32 relative\" style={backgroundColor ? { backgroundColor } : undefined}>\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            className={`${backgroundImage.className ?? ''} h-full w-full object-cover`}\n          />\n        </div>\n      ) : null}\n\n      <div className=\"container flex flex-col gap-16 lg:px-16\">\n        <div className=\"lg:max-w-sm\">\n          <h2 className=\"mb-3 text-xl font-semibold md:mb-4 md:text-4xl lg:mb-6\">{heading}</h2>\n          <p className=\"mb-8 text-muted-foreground lg:text-lg\">{description}</p>\n\n          <Button asChild>\n            <Link\n              href={ctaHref}\n              target={ctaTarget}\n              rel={ctaRel}\n              className=\"group flex items-center text-xs font-medium md:text-base lg:text-lg\"\n            >\n              {ctaLabel}\n              {ctaIcon ? (\n                <DynamicIcon\n                  name={ctaIcon.name}\n                  className={`ml-2 size-4 transition-transform group-hover:translate-x-1 ${ctaIcon.className}`}\n                />\n              ) : null}\n            </Link>\n          </Button>\n        </div>\n\n        <div className=\"grid gap-6 md:grid-cols-2 lg:gap-8\">\n          {features[0] ? (\n            <div className=\"flex flex-col overflow-clip rounded-xl border border-border md:col-span-2 md:grid md:grid-cols-2 md:gap-6 lg:gap-8\">\n              <div className=\"relative md:min-h-[24rem] lg:min-h-[28rem] xl:min-h-[32rem]\">\n                <Image\n                  {...features[0].image}\n                  className={`${features[0].image.className ?? ''} aspect-[16/9] h-full w-full object-cover object-center`}\n                />\n              </div>\n              <div className=\"flex flex-col justify-center px-6 py-8 md:px-8 md:py-10 lg:px-10 lg:py-12\">\n                <h3 className=\"mb-3 text-lg font-semibold md:mb-4 md:text-2xl lg:mb-6\">{features[0].title}</h3>\n                <p className=\"text-muted-foreground lg:text-lg\">{features[0].description}</p>\n              </div>\n            </div>\n          ) : null}\n\n          {features.slice(1).map((feature) => (\n            <div key={feature.id} className=\"flex flex-col overflow-clip rounded-xl border border-border\">\n              <div className=\"relative\">\n                <Image\n                  {...feature.image}\n                  className={`${feature.image.className ?? ''} aspect-[16/9] h-full w-full object-cover object-center`}\n                />\n              </div>\n              <div className=\"px-6 py-8 md:px-8 md:py-10 lg:px-10 lg:py-12\">\n                <h3 className=\"mb-3 text-lg font-semibold md:mb-4 md:text-2xl lg:mb-6\">{feature.title}</h3>\n                <p className=\"text-muted-foreground lg:text-lg\">{feature.description}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Feature73;\n"
    }
  ],
  "meta": {
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/shadcnblockscom/feature-73.json",
    "imported_from": "https://21st.dev/r/shadcnblockscom/feature-73",
    "component_name": "Feature73",
    "component_path": "src/components/ui/feature-73.tsx",
    "props": "Feature73Props",
    "props_path": "src/components/ui/feature-73.tsx",
    "original_file": "src/components/ui/feature-73.tsx",
    "transformed_at": "2025-09-23T21:47:58.045208",
    "category": "features",
    "tags": [
      "product-highlight",
      "content-container",
      "visual-dominant",
      "responsive-mobile",
      "container-bound",
      "simple"
    ],
    "variations": [],
    "schema": {
      "type": "object",
      "properties": {
        "heading": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ctaHref": {
          "type": "string"
        },
        "ctaLabel": {
          "type": "string"
        },
        "ctaTarget": {
          "enum": [
            "_blank",
            "_self"
          ],
          "type": "string"
        },
        "ctaRel": {
          "type": "string"
        },
        "ctaIcon": {
          "type": "object",
          "properties": {
            "package": {
              "type": "string",
              "const": "lucide"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "const": "icon"
            },
            "className": {
              "type": "string"
            }
          }
        },
        "features": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "image": {
                "type": "object",
                "properties": {
                  "src": {
                    "type": "string"
                  },
                  "alt": {
                    "type": "string"
                  },
                  "width": {
                    "type": "number"
                  },
                  "height": {
                    "type": "number"
                  },
                  "priority": {
                    "type": "boolean"
                  },
                  "quality": {
                    "type": "number"
                  },
                  "sizes": {
                    "type": "string"
                  },
                  "fill": {
                    "type": "boolean"
                  },
                  "className": {
                    "type": "string"
                  },
                  "placeholder": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "backgroundImage": {
          "type": "object",
          "properties": {
            "src": {
              "type": "string"
            },
            "alt": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "priority": {
              "type": "boolean"
            },
            "quality": {
              "type": "number"
            },
            "sizes": {
              "type": "string"
            },
            "fill": {
              "type": "boolean"
            },
            "className": {
              "type": "string"
            },
            "placeholder": {
              "type": "string"
            }
          }
        },
        "backgroundColor": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "schema_updated_at": "2025-09-25T10:05:22.581947",
    "public_ready": true,
    "public_ready_updated_at": "2025-09-25T11:06:59.018363"
  }
}