{
  "name": "navbar-5",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/navbar-5.tsx)",
  "title": "Navbar 5",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "https://21st.dev/r/shadcn/button",
    "https://21st.dev/r/shadcn/navigation-menu",
    "https://21st.dev/r/shadcn/accordion",
    "https://21st.dev/r/shadcn/sheet"
  ],
  "files": [
    {
      "path": "src/components/ui/navbar-5.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@/components/ui/navigation-menu\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport React from \"react\";\n\n// Icon interface guideline\ninterface Icon {\n  package: \"lucide\";\n  name: string; // known lucide react icon-name only\n  type: \"icon\";\n  className: string; // tailwind classes for styling\n}\n\n// Image interface guideline\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\n// Link interface guideline\ninterface LinkProps {\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  className?: string;\n  rel?: string;\n}\n\ninterface FeatureItem {\n  title: string;\n  description: string;\n  href: string;\n}\n\ninterface LabeledLink extends LinkProps {\n  label: string;\n}\n\nexport interface Navbar5Props {\n  brand: {\n    link: LinkProps;\n    name: string;\n    image: ImageProps;\n  };\n  featuresLabel: string;\n  features: FeatureItem[];\n  navItems: LabeledLink[];\n  mobileLinks: LabeledLink[];\n  ctas: {\n    signIn: LabeledLink;\n    primary: LabeledLink;\n  };\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n}\n\nexport const Navbar5: React.FC<Navbar5Props> = ({\n  brand,\n  featuresLabel,\n  features,\n  navItems,\n  mobileLinks,\n  ctas,\n  backgroundImage,\n  backgroundColor,\n}) => {\n  return (\n    <section className=\"py-4 relative\" style={{ backgroundColor }}>\n      {backgroundImage && (\n        <Image\n          {...backgroundImage}\n          className={[\n            \"absolute inset-0 -z-10 object-cover\",\n            backgroundImage.className || \"\",\n          ]\n            .filter(Boolean)\n            .join(\" \")}\n          fill={backgroundImage.fill}\n        />\n      )}\n      <div className=\"container\">\n        <nav className=\"flex items-center justify-between\">\n          <Link\n            href={brand.link.href}\n            className=\"flex items-center gap-2\"\n            target={brand.link.target}\n            rel={brand.link.rel}\n          >\n            <Image\n              {...brand.image}\n              className={[\"max-h-8\", brand.image.className || \"\"]\n                .filter(Boolean)\n                .join(\" \")}\n            />\n            <span className=\"text-lg font-semibold tracking-tighter\">\n              {brand.name}\n            </span>\n          </Link>\n\n          <NavigationMenu className=\"hidden lg:block\">\n            <NavigationMenuList>\n              <NavigationMenuItem>\n                <NavigationMenuTrigger>{featuresLabel}</NavigationMenuTrigger>\n                <NavigationMenuContent>\n                  <div className=\"grid w-[600px] grid-cols-2 p-3\">\n                    {features.map((feature) => (\n                      <NavigationMenuLink asChild key={feature.title}>\n                        <Link\n                          href={feature.href}\n                          className=\"rounded-md p-3 transition-colors hover:bg-muted/70\"\n                        >\n                          <div>\n                            <p className=\"mb-1 font-semibold text-foreground\">\n                              {feature.title}\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {feature.description}\n                            </p>\n                          </div>\n                        </Link>\n                      </NavigationMenuLink>\n                    ))}\n                  </div>\n                </NavigationMenuContent>\n              </NavigationMenuItem>\n\n              {navItems.map((item) => (\n                <NavigationMenuItem key={item.label}>\n                  <NavigationMenuLink asChild>\n                    <Link\n                      href={item.href}\n                      className={navigationMenuTriggerStyle()}\n                      target={item.target}\n                      rel={item.rel}\n                    >\n                      {item.label}\n                    </Link>\n                  </NavigationMenuLink>\n                </NavigationMenuItem>\n              ))}\n            </NavigationMenuList>\n          </NavigationMenu>\n\n          <div className=\"hidden items-center gap-4 lg:flex\">\n            <Button variant=\"outline\" asChild>\n              <Link\n                href={ctas.signIn.href}\n                target={ctas.signIn.target}\n                rel={ctas.signIn.rel}\n              >\n                {ctas.signIn.label}\n              </Link>\n            </Button>\n            <Button asChild>\n              <Link\n                href={ctas.primary.href}\n                target={ctas.primary.target}\n                rel={ctas.primary.rel}\n              >\n                {ctas.primary.label}\n              </Link>\n            </Button>\n          </div>\n\n          <Sheet>\n            <SheetTrigger asChild className=\"lg:hidden\">\n              <Button variant=\"outline\" size=\"icon\" aria-label=\"Open menu\">\n                <DynamicIcon name=\"Menu\" className=\"h-4 w-4\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"top\" className=\"max-h-screen overflow-auto\">\n              <SheetHeader>\n                <SheetTitle>\n                  <Link\n                    href={brand.link.href}\n                    className=\"flex items-center gap-2\"\n                    target={brand.link.target}\n                    rel={brand.link.rel}\n                  >\n                    <Image\n                      {...brand.image}\n                      className={[\"max-h-8\", brand.image.className || \"\"]\n                        .filter(Boolean)\n                        .join(\" \")}\n                    />\n                    <span className=\"text-lg font-semibold tracking-tighter\">\n                      {brand.name}\n                    </span>\n                  </Link>\n                </SheetTitle>\n              </SheetHeader>\n              <div className=\"flex flex-col p-4\">\n                <Accordion type=\"single\" collapsible className=\"mt-4 mb-2\">\n                  <AccordionItem value=\"solutions\" className=\"border-none\">\n                    <AccordionTrigger className=\"text-base hover:no-underline\">\n                      {featuresLabel}\n                    </AccordionTrigger>\n                    <AccordionContent>\n                      <div className=\"grid md:grid-cols-2\">\n                        {features.map((feature) => (\n                          <Link\n                            href={feature.href}\n                            key={feature.title}\n                            className=\"rounded-md p-3 transition-colors hover:bg-muted/70\"\n                          >\n                            <div>\n                              <p className=\"mb-1 font-semibold text-foreground\">\n                                {feature.title}\n                              </p>\n                              <p className=\"text-sm text-muted-foreground\">\n                                {feature.description}\n                              </p>\n                            </div>\n                          </Link>\n                        ))}\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n                <div className=\"flex flex-col gap-6\">\n                  {mobileLinks.map((link) => (\n                    <Link\n                      key={link.label}\n                      href={link.href}\n                      className=\"font-medium\"\n                      target={link.target}\n                      rel={link.rel}\n                    >\n                      {link.label}\n                    </Link>\n                  ))}\n                </div>\n                <div className=\"mt-6 flex flex-col gap-4\">\n                  <Button variant=\"outline\" asChild>\n                    <Link\n                      href={ctas.signIn.href}\n                      target={ctas.signIn.target}\n                      rel={ctas.signIn.rel}\n                    >\n                      {ctas.signIn.label}\n                    </Link>\n                  </Button>\n                  <Button asChild>\n                    <Link\n                      href={ctas.primary.href}\n                      target={ctas.primary.target}\n                      rel={ctas.primary.rel}\n                    >\n                      {ctas.primary.label}\n                    </Link>\n                  </Button>\n                </div>\n              </div>\n            </SheetContent>\n          </Sheet>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Navbar5;\n"
    }
  ],
  "cssVars": {
    "theme": {
      "--animate-accordion-down": "accordion-down 0.2s ease-out",
      "--animate-accordion-up": "accordion-up 0.2s ease-out"
    }
  },
  "css": {
    "@keyframes accordion-down": {
      "from": {
        "height": "0"
      },
      "to": {
        "height": "var(--radix-accordion-content-height)"
      }
    },
    "@keyframes accordion-up": {
      "from": {
        "height": "var(--radix-accordion-content-height)"
      },
      "to": {
        "height": "0"
      }
    }
  },
  "meta": {
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/shadcnblockscom/navbar-5.json",
    "imported_from": "https://21st.dev/r/shadcnblockscom/navbar-5",
    "component_name": "Navbar5",
    "component_path": "src/components/ui/navbar-5.tsx",
    "props": "Navbar5Props",
    "props_path": "src/components/ui/navbar-5.tsx",
    "original_file": "src/components/ui/navbar-5.tsx",
    "transformed_at": "2025-09-23T21:57:01.194533",
    "category": "navigation",
    "tags": [
      "brand-awareness",
      "navigation-element",
      "responsive-mobile",
      "responsive-desktop",
      "interactive",
      "awareness-stage"
    ],
    "variations": [],
    "schema": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "object",
          "properties": {
            "link": {
              "type": "object",
              "properties": {
                "href": {
                  "type": "string"
                },
                "target": {
                  "enum": [
                    "_blank",
                    "_self"
                  ],
                  "type": "string"
                },
                "className": {
                  "type": "string"
                },
                "rel": {
                  "type": "string"
                }
              }
            },
            "name": {
              "type": "string"
            },
            "image": {
              "type": "object",
              "properties": {
                "src": {
                  "type": "string"
                },
                "alt": {
                  "type": "string"
                },
                "width": {
                  "type": "number"
                },
                "height": {
                  "type": "number"
                },
                "priority": {
                  "type": "boolean"
                },
                "quality": {
                  "type": "number"
                },
                "sizes": {
                  "type": "string"
                },
                "fill": {
                  "type": "boolean"
                },
                "className": {
                  "type": "string"
                },
                "placeholder": {
                  "type": "string"
                }
              }
            }
          }
        },
        "featuresLabel": {
          "type": "string"
        },
        "features": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "href": {
                "type": "string"
              }
            }
          }
        },
        "navItems": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "target": {
                "enum": [
                  "_blank",
                  "_self"
                ],
                "type": "string"
              },
              "className": {
                "type": "string"
              },
              "rel": {
                "type": "string"
              }
            }
          }
        },
        "mobileLinks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "target": {
                "enum": [
                  "_blank",
                  "_self"
                ],
                "type": "string"
              },
              "className": {
                "type": "string"
              },
              "rel": {
                "type": "string"
              }
            }
          }
        },
        "ctas": {
          "type": "object",
          "properties": {
            "signIn": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "target": {
                  "enum": [
                    "_blank",
                    "_self"
                  ],
                  "type": "string"
                },
                "className": {
                  "type": "string"
                },
                "rel": {
                  "type": "string"
                }
              }
            },
            "primary": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                },
                "target": {
                  "enum": [
                    "_blank",
                    "_self"
                  ],
                  "type": "string"
                },
                "className": {
                  "type": "string"
                },
                "rel": {
                  "type": "string"
                }
              }
            }
          }
        },
        "backgroundImage": {
          "type": "object",
          "properties": {
            "src": {
              "type": "string"
            },
            "alt": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "priority": {
              "type": "boolean"
            },
            "quality": {
              "type": "number"
            },
            "sizes": {
              "type": "string"
            },
            "fill": {
              "type": "boolean"
            },
            "className": {
              "type": "string"
            },
            "placeholder": {
              "type": "string"
            }
          }
        },
        "backgroundColor": {
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "schema_updated_at": "2025-09-25T10:06:51.591963",
    "public_ready": true,
    "public_ready_updated_at": "2025-09-25T11:11:16.316610",
    "variation_creation": true
  }
}