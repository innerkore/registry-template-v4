{
  "name": "header",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-icons",
    "@radix-ui/react-navigation-menu"
  ],
  "registryDependencies": [
    "https://21st.dev/r/shadcn/button",
    "https://21st.dev/r/shadcn/navigation-menu"
  ],
  "files": [
    {
      "path": "/components/ui/header.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n    NavigationMenu,\n    NavigationMenuContent,\n    NavigationMenuItem,\n    NavigationMenuLink,\n    NavigationMenuList,\n    NavigationMenuTrigger,\n} from \"@/components/ui/navigation-menu\";\nimport { Menu, MoveRight, X } from \"lucide-react\";\nimport { useState } from \"react\";\nimport Link from \"next/link\";\n\nfunction Header1() {\n    const navigationItems = [\n        {\n            title: \"Home\",\n            href: \"/\",\n            description: \"\",\n        },\n        {\n            title: \"Product\",\n            description: \"Managing a small business today is already tough.\",\n            items: [\n                {\n                    title: \"Reports\",\n                    href: \"/reports\",\n                },\n                {\n                    title: \"Statistics\",\n                    href: \"/statistics\",\n                },\n                {\n                    title: \"Dashboards\",\n                    href: \"/dashboards\",\n                },\n                {\n                    title: \"Recordings\",\n                    href: \"/recordings\",\n                },\n            ],\n        },\n        {\n            title: \"Company\",\n            description: \"Managing a small business today is already tough.\",\n            items: [\n                {\n                    title: \"About us\",\n                    href: \"/about\",\n                },\n                {\n                    title: \"Fundraising\",\n                    href: \"/fundraising\",\n                },\n                {\n                    title: \"Investors\",\n                    href: \"/investors\",\n                },\n                {\n                    title: \"Contact us\",\n                    href: \"/contact\",\n                },\n            ],\n        },\n    ];\n\n    const [isOpen, setOpen] = useState(false);\n    return (\n        <header className=\"w-full z-40 fixed top-0 left-0 bg-background\">\n            <div className=\"container relative mx-auto min-h-20 flex gap-4 flex-row lg:grid lg:grid-cols-3 items-center\">\n                <div className=\"justify-start items-center gap-4 lg:flex hidden flex-row\">\n                    <NavigationMenu className=\"flex justify-start items-start\">\n                        <NavigationMenuList className=\"flex justify-start gap-4 flex-row\">\n                            {navigationItems.map((item) => (\n                                <NavigationMenuItem key={item.title}>\n                                    {item.href ? (\n                                        <>\n                                            <NavigationMenuLink>\n                                                <Button variant=\"ghost\">{item.title}</Button>\n                                            </NavigationMenuLink>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <NavigationMenuTrigger className=\"font-medium text-sm\">\n                                                {item.title}\n                                            </NavigationMenuTrigger>\n                                            <NavigationMenuContent className=\"!w-[450px] p-4\">\n                                                <div className=\"flex flex-col lg:grid grid-cols-2 gap-4\">\n                                                    <div className=\"flex flex-col h-full justify-between\">\n                                                        <div className=\"flex flex-col\">\n                                                            <p className=\"text-base\">{item.title}</p>\n                                                            <p className=\"text-muted-foreground text-sm\">\n                                                                {item.description}\n                                                            </p>\n                                                        </div>\n                                                        <Button size=\"sm\" className=\"mt-10\">\n                                                            Book a call today\n                                                        </Button>\n                                                    </div>\n                                                    <div className=\"flex flex-col text-sm h-full justify-end\">\n                                                        {item.items?.map((subItem) => (\n                                                            <NavigationMenuLink\n                                                                href={subItem.href}\n                                                                key={subItem.title}\n                                                                className=\"flex flex-row justify-between items-center hover:bg-muted py-2 px-4 rounded\"\n                                                            >\n                                                                <span>{subItem.title}</span>\n                                                                <MoveRight className=\"w-4 h-4 text-muted-foreground\" />\n                                                            </NavigationMenuLink>\n                                                        ))}\n                                                    </div>\n                                                </div>\n                                            </NavigationMenuContent>\n                                        </>\n                                    )}\n                                </NavigationMenuItem>\n                            ))}\n                        </NavigationMenuList>\n                    </NavigationMenu>\n                </div>\n                <div className=\"flex lg:justify-center\">\n                    <p className=\"font-semibold\">TWBlocks</p>\n                </div>\n                <div className=\"flex justify-end w-full gap-4\">\n                    <Button variant=\"ghost\" className=\"hidden md:inline\">\n                        Book a demo\n                    </Button>\n                    <div className=\"border-r hidden md:inline\"></div>\n                    <Button variant=\"outline\">Sign in</Button>\n                    <Button>Get started</Button>\n                </div>\n                <div className=\"flex w-12 shrink lg:hidden items-end justify-end\">\n                    <Button variant=\"ghost\" onClick={() => setOpen(!isOpen)}>\n                        {isOpen ? <X className=\"w-5 h-5\" /> : <Menu className=\"w-5 h-5\" />}\n                    </Button>\n                    {isOpen && (\n                        <div className=\"absolute top-20 border-t flex flex-col w-full right-0 bg-background shadow-lg py-4 container gap-8\">\n                            {navigationItems.map((item) => (\n                                <div key={item.title}>\n                                    <div className=\"flex flex-col gap-2\">\n                                        {item.href ? (\n                                            <Link\n                                                href={item.href}\n                                                className=\"flex justify-between items-center\"\n                                            >\n                                                <span className=\"text-lg\">{item.title}</span>\n                                                <MoveRight className=\"w-4 h-4 stroke-1 text-muted-foreground\" />\n                                            </Link>\n                                        ) : (\n                                            <p className=\"text-lg\">{item.title}</p>\n                                        )}\n                                        {item.items &&\n                                            item.items.map((subItem) => (\n                                                <Link\n                                                    key={subItem.title}\n                                                    href={subItem.href}\n                                                    className=\"flex justify-between items-center\"\n                                                >\n                                                    <span className=\"text-muted-foreground\">\n                                                        {subItem.title}\n                                                    </span>\n                                                    <MoveRight className=\"w-4 h-4 stroke-1\" />\n                                                </Link>\n                                            ))}\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport { Header1 };"
    },
    {
      "path": "/components/ui/button.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
    },
    {
      "path": "/components/ui/navigation-menu.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\nimport { ChevronDownIcon } from \"@radix-ui/react-icons\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDownIcon\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/tommyjepsen/header.json",
    "imported_from": "https://21st.dev/r/tommyjepsen/header"
  }
}