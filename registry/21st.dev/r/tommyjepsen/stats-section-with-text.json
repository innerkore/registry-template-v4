{
  "name": "stats-section-with-text",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/badge.tsx)",
  "title": "None",
  "author": "None",
  "docs": "None",
  "dependencies": [
    "lucide-react",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://21st.dev/r/shadcn/badge"
  ],
  "files": [
    {
      "path": "/src/components/ui/stats-section-with-text.tsx",
      "type": "registry:ui",
      "content": "import React from \"react\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport { Badge } from \"@/components/ui/badge\";\n\nexport interface Icon {\n  package: 'lucide';\n  name: string; // known lucide react icon-name only\n  type: 'icon';\n  className: string; // tailwind classes for styling\n}\n\nexport interface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n}\n\nexport interface StatsItem {\n  icon: Icon;\n  value: string;\n  change: string;\n  label: string;\n}\n\nexport interface StatsProps {\n  badgeText: string;\n  title: string;\n  description: string;\n  stats: StatsItem[];\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n  className?: string;\n}\n\nexport function Stats({\n  badgeText,\n  title,\n  description,\n  stats,\n  backgroundImage,\n  backgroundColor,\n  className,\n}: StatsProps) {\n  return (\n    <div\n      className={`w-full py-20 lg:py-40 ${backgroundImage ? \"relative overflow-hidden\" : \"\"} ${className ?? \"\"}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n    >\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10\">\n          <Image\n            src={backgroundImage.src}\n            alt={backgroundImage.alt}\n            width={backgroundImage.width}\n            height={backgroundImage.height}\n            priority={backgroundImage.priority}\n            quality={backgroundImage.quality}\n            sizes={backgroundImage.sizes}\n            fill={backgroundImage.fill}\n            className={`${backgroundImage.className ?? \"\"} w-full h-full object-cover`}\n          />\n        </div>\n      ) : null}\n      <div className=\"container mx-auto\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-10\">\n          <div className=\"flex gap-4 flex-col items-start\">\n            <div>\n              <Badge>{badgeText}</Badge>\n            </div>\n            <div className=\"flex gap-2 flex-col\">\n              <h2 className=\"text-xl md:text-3xl md:text-5xl tracking-tighter lg:max-w-xl font-regular text-left\">\n                {title}\n              </h2>\n              <p className=\"text-lg lg:max-w-sm leading-relaxed tracking-tight text-muted-foreground text-left\">\n                {description}\n              </p>\n            </div>\n          </div>\n          <div className=\"flex justify-center items-center\">\n            <div className=\"grid text-left grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 w-full gap-2\">\n              {stats.map((item, idx) => (\n                <div key={idx} className=\"flex gap-0 flex-col justify-between p-6 border rounded-md\">\n                  <DynamicIcon name={item.icon.name} className={item.icon.className} />\n                  <h2 className=\"text-4xl tracking-tighter max-w-xl text-left font-regular flex flex-row gap-4 items-end\">\n                    {item.value}\n                    <span className=\"text-muted-foreground text-sm tracking-normal\">\n                      {item.change}\n                    </span>\n                  </h2>\n                  <p className=\"text-base leading-relaxed tracking-tight text-muted-foreground max-w-xl text-left\">\n                    {item.label}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Stats;\n"
    },
    {
      "path": "/src/components/ui/badge.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"
    }
  ],
  "meta": {
    "category": "stats",
    "component_name": "Stats",
    "component_path": "/components/ui/stats-section-with-text.tsx",
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/tommyjepsen/stats-section-with-text.json",
    "original_file": "/components/ui/stats-section-with-text.tsx",
    "props": "StatsProps",
    "props_path": "/components/ui/stats-section-with-text.tsx",
    "public_ready": true,
    "public_ready_updated_at": "2025-09-25T11:07:19.338734",
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "properties": {
        "backgroundColor": {
          "type": "string"
        },
        "backgroundImage": {
          "properties": {
            "alt": {
              "type": "string"
            },
            "className": {
              "type": "string"
            },
            "fill": {
              "type": "boolean"
            },
            "height": {
              "type": "number"
            },
            "priority": {
              "type": "boolean"
            },
            "quality": {
              "type": "number"
            },
            "sizes": {
              "type": "string"
            },
            "src": {
              "type": "string"
            },
            "width": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "badgeText": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "stats": {
          "items": {
            "properties": {
              "change": {
                "type": "string"
              },
              "icon": {
                "properties": {
                  "className": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "package": {
                    "const": "lucide",
                    "type": "string"
                  },
                  "type": {
                    "const": "icon",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "label": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "schema_updated_at": "2025-09-25T10:08:21.993374",
    "transformed_at": "2025-09-23T22:06:05.921176",
    "variation_creation": true,
    "variations": [],
    "tags": [
      "trust-building",
      "data-display",
      "minimalist",
      "responsive-mobile",
      "container-bound"
    ],
    "imported_from": "https://21st.dev/r/tommyjepsen/stats-section-with-text"
  }
}