{
  "name": "testimonial",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "/components/ui/testimonial.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\nimport { motion, PanInfo } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\n\ninterface Testimonial {\n  id: number | string\n  name: string\n  avatar: string\n  description: string\n}\n\ninterface TestimonialCarouselProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  testimonials: Testimonial[]\n  showArrows?: boolean\n  showDots?: boolean\n}\n\nconst TestimonialCarousel = React.forwardRef<\n  HTMLDivElement,\n  TestimonialCarouselProps\n>(\n  (\n    { className, testimonials, showArrows = true, showDots = true, ...props },\n    ref,\n  ) => {\n    const [currentIndex, setCurrentIndex] = React.useState(0)\n    const [exitX, setExitX] = React.useState<number>(0)\n\n    const handleDragEnd = (\n      event: MouseEvent | TouchEvent | PointerEvent,\n      info: PanInfo,\n    ) => {\n      if (Math.abs(info.offset.x) > 100) {\n        setExitX(info.offset.x)\n        setTimeout(() => {\n          setCurrentIndex((prev) => (prev + 1) % testimonials.length)\n          setExitX(0)\n        }, 200)\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"h-72 w-full flex items-center justify-center\",\n          className\n        )}\n        {...props}\n      >\n        <div className=\"relative w-80 h-64\">\n          {testimonials.map((testimonial, index) => {\n            const isCurrentCard = index === currentIndex\n            const isPrevCard =\n              index === (currentIndex + 1) % testimonials.length\n            const isNextCard =\n              index === (currentIndex + 2) % testimonials.length\n\n            if (!isCurrentCard && !isPrevCard && !isNextCard) return null\n\n            return (\n              <motion.div\n                key={testimonial.id}\n                className={cn(\n                  \"absolute w-full h-full rounded-2xl cursor-grab active:cursor-grabbing\",\n                  \"bg-white shadow-xl\",\n                  \"dark:bg-card dark:shadow-[2px_2px_4px_rgba(0,0,0,0.4),-1px_-1px_3px_rgba(255,255,255,0.1)]\",\n                )}\n                style={{\n                  zIndex: isCurrentCard ? 3 : isPrevCard ? 2 : 1,\n                }}\n                drag={isCurrentCard ? \"x\" : false}\n                dragConstraints={{ left: 0, right: 0 }}\n                dragElastic={0.7}\n                onDragEnd={isCurrentCard ? handleDragEnd : undefined}\n                initial={{\n                  scale: 0.95,\n                  opacity: 0,\n                  y: isCurrentCard ? 0 : isPrevCard ? 8 : 16,\n                  rotate: isCurrentCard ? 0 : isPrevCard ? -2 : -4,\n                }}\n                animate={{\n                  scale: isCurrentCard ? 1 : 0.95,\n                  opacity: isCurrentCard ? 1 : isPrevCard ? 0.6 : 0.3,\n                  x: isCurrentCard ? exitX : 0,\n                  y: isCurrentCard ? 0 : isPrevCard ? 8 : 16,\n                  rotate: isCurrentCard ? exitX / 20 : isPrevCard ? -2 : -4,\n                }}\n                transition={{\n                  type: \"spring\",\n                  stiffness: 300,\n                  damping: 20,\n                }}\n              >\n                {showArrows && isCurrentCard && (\n                  <div className=\"absolute inset-x-0 top-2 flex justify-between px-4\">\n                    <span className=\"text-2xl select-none cursor-pointer text-gray-300 hover:text-gray-400 dark:text-muted-foreground dark:hover:text-primary\">\n                      &larr;\n                    </span>\n                    <span className=\"text-2xl select-none cursor-pointer text-gray-300 hover:text-gray-400 dark:text-muted-foreground dark:hover:text-primary\">\n                      &rarr;\n                    </span>\n                  </div>\n                )}\n\n                <div className=\"p-6 flex flex-col items-center gap-4\">\n                  <img\n                    src={testimonial.avatar}\n                    alt={testimonial.name}\n                    className=\"w-16 h-16 rounded-full object-cover\"\n                  />\n                  <h3 className=\"text-lg font-semibold text-gray-800 dark:text-foreground\">\n                    {testimonial.name}\n                  </h3>\n                  <p className=\"text-center text-sm text-gray-600 dark:text-muted-foreground\">\n                    {testimonial.description}\n                  </p>\n                </div>\n              </motion.div>\n            )\n          })}\n          {showDots && (\n            <div className=\"absolute -bottom-8 left-0 right-0 flex justify-center gap-2\">\n              {testimonials.map((_, index) => (\n                <div\n                  key={index}\n                  className={cn(\n                    \"w-2 h-2 rounded-full transition-colors\",\n                    index === currentIndex\n                      ? \"bg-blue-500 dark:bg-primary\"\n                      : \"bg-gray-300 dark:bg-muted-foreground/30\",\n                  )}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  },\n)\nTestimonialCarousel.displayName = \"TestimonialCarousel\"\n\nexport { TestimonialCarousel, type Testimonial }\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "imported_from": "https://21st.dev/r/anurag-mishra22/testimonial"
  }
}