{
  "name": "gallery",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion",
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://21st.dev/r/shadcn/button"
  ],
  "files": [
    {
      "path": "/components/ui/gallery.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { Ref, forwardRef, useState, useEffect } from \"react\";\nimport Image, { ImageProps } from \"next/image\";\nimport { motion, useMotionValue } from \"framer-motion\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\n\nexport const PhotoGallery = ({\n  animationDelay = 0.5,\n}: {\n  animationDelay?: number;\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    // First make the container visible with a fade-in\n    const visibilityTimer = setTimeout(() => {\n      setIsVisible(true);\n    }, animationDelay * 1000);\n\n    // Then start the photo animations after a short delay\n    const animationTimer = setTimeout(\n      () => {\n        setIsLoaded(true);\n      },\n      (animationDelay + 0.4) * 1000\n    ); // Add 0.4s for the opacity transition\n\n    return () => {\n      clearTimeout(visibilityTimer);\n      clearTimeout(animationTimer);\n    };\n  }, [animationDelay]);\n\n  // Animation variants for the container\n  const containerVariants = {\n    hidden: { opacity: 1 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.15,\n        delayChildren: 0.1, // Reduced from 0.3 to 0.1 since we already have the fade-in delay\n      },\n    },\n  };\n\n  // Animation variants for each photo\n  const photoVariants = {\n    hidden: () => ({\n      x: 0,\n      y: 0,\n      rotate: 0,\n      scale: 1,\n      // Keep the same z-index throughout animation\n    }),\n    visible: (custom: { x: any; y: any; order: number }) => ({\n      x: custom.x,\n      y: custom.y,\n      rotate: 0, // No rotation\n      scale: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 70,\n        damping: 12,\n        mass: 1,\n        delay: custom.order * 0.15, // Explicit delay based on order\n      },\n    }),\n  };\n\n  // Photo positions - horizontal layout with random y offsets\n  const photos = [\n    {\n      id: 1,\n      order: 0,\n      x: \"-320px\",\n      y: \"15px\",\n      zIndex: 50, // Highest z-index (on top)\n      direction: \"left\" as Direction,\n      src: \"https://images.pexels.com/photos/32025694/pexels-photo-32025694/free-photo-of-romantic-wedding-in-ancient-ruins.jpeg\",\n    },\n    {\n      id: 2,\n      order: 1,\n      x: \"-160px\",\n      y: \"32px\",\n      zIndex: 40,\n      direction: \"left\" as Direction,\n      src: \"https://images.pexels.com/photos/31596551/pexels-photo-31596551/free-photo-of-winter-scene-with-lake-view-in-van-turkiye.jpeg\",\n    },\n    {\n      id: 3,\n      order: 2,\n      x: \"0px\",\n      y: \"8px\",\n      zIndex: 30,\n      direction: \"right\" as Direction,\n      src: \"https://images.pexels.com/photos/31890053/pexels-photo-31890053/free-photo-of-moody-portrait-with-heart-shaped-light.jpeg\",\n    },\n    {\n      id: 4,\n      order: 3,\n      x: \"160px\",\n      y: \"22px\",\n      zIndex: 20,\n      direction: \"right\" as Direction,\n      src: \"https://images.pexels.com/photos/19936068/pexels-photo-19936068/free-photo-of-women-sitting-on-hilltop-with-clouds-below.jpeg\",\n    },\n    {\n      id: 5,\n      order: 4,\n      x: \"320px\",\n      y: \"44px\",\n      zIndex: 10, // Lowest z-index (at bottom)\n      direction: \"left\" as Direction,\n      src: \"https://images.pexels.com/photos/20494995/pexels-photo-20494995/free-photo-of-head-of-peacock.jpeg\",\n    },\n  ];\n\n  return (\n    <div className=\"mt-40 relative\">\n       <div className=\"absolute inset-0 max-md:hidden top-[200px] -z-10 h-[300px] w-full bg-transparent bg-[linear-gradient(to_right,#57534e_1px,transparent_1px),linear-gradient(to_bottom,#57534e_1px,transparent_1px)] bg-[size:3rem_3rem] opacity-20 [mask-image:radial-gradient(ellipse_80%_50%_at_50%_0%,#000_70%,transparent_110%)] dark:bg-[linear-gradient(to_right,#a8a29e_1px,transparent_1px),linear-gradient(to_bottom,#a8a29e_1px,transparent_1px)]\"></div>\n      <p className=\"lg:text-md my-2 text-center text-xs font-light uppercase tracking-widest text-slate-600 dark:text-slate-400\">\n      A Journey Through Visual Stories\n      </p>\n      <h3 className=\"z-20 mx-auto max-w-2xl justify-center bg-gradient-to-r from-slate-900 via-slate-800 to-slate-900 bg-clip-text py-3 text-center text-4xl text-transparent dark:bg-gradient-to-r dark:from-slate-100 dark:via-slate-200 dark:to-slate-100 dark:bg-clip-text md:text-7xl\">\n        Welcome to My <span className=\"text-rose-500\"> Stories</span>\n      </h3>\n      <div className=\"relative mb-8 h-[350px] w-full items-center justify-center lg:flex\">\n        <motion.div\n          className=\"relative mx-auto flex w-full max-w-7xl justify-center\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: isVisible ? 1 : 0 }}\n          transition={{ duration: 0.4, ease: \"easeOut\" }}\n        >\n          <motion.div\n            className=\"relative flex w-full justify-center\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate={isLoaded ? \"visible\" : \"hidden\"}\n          >\n            <div className=\"relative h-[220px] w-[220px]\">\n              {/* Render photos in reverse order so that higher z-index photos are rendered later in the DOM */}\n              {[...photos].reverse().map((photo) => (\n                <motion.div\n                  key={photo.id}\n                  className=\"absolute left-0 top-0\"\n                  style={{ zIndex: photo.zIndex }} // Apply z-index directly in style\n                  variants={photoVariants}\n                  custom={{\n                    x: photo.x,\n                    y: photo.y,\n                    order: photo.order,\n                  }}\n                >\n                  <Photo\n                    width={220}\n                    height={220}\n                    src={photo.src}\n                    alt=\"Family photo\"\n                    direction={photo.direction}\n                  />\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n      <div className=\"flex w-full justify-center\">\n      <Button>\n        View All Stories\n      </Button>\n      </div>\n    </div>\n  );\n};\n\nfunction getRandomNumberInRange(min: number, max: number): number {\n  if (min >= max) {\n    throw new Error(\"Min value should be less than max value\");\n  }\n  return Math.random() * (max - min) + min;\n}\n\nconst MotionImage = motion(\n  forwardRef(function MotionImage(\n    props: ImageProps,\n    ref: Ref<HTMLImageElement>\n  ) {\n    return <Image ref={ref} {...props} />;\n  })\n);\n\ntype Direction = \"left\" | \"right\";\n\nexport const Photo = ({\n  src,\n  alt,\n  className,\n  direction,\n  width,\n  height,\n  ...props\n}: {\n  src: string;\n  alt: string;\n  className?: string;\n  direction?: Direction;\n  width: number;\n  height: number;\n}) => {\n  const [rotation, setRotation] = useState<number>(0);\n  const x = useMotionValue(200);\n  const y = useMotionValue(200);\n\n  useEffect(() => {\n    const randomRotation =\n      getRandomNumberInRange(1, 4) * (direction === \"left\" ? -1 : 1);\n    setRotation(randomRotation);\n  }, []);\n\n  function handleMouse(event: {\n    currentTarget: { getBoundingClientRect: () => any };\n    clientX: number;\n    clientY: number;\n  }) {\n    const rect = event.currentTarget.getBoundingClientRect();\n    x.set(event.clientX - rect.left);\n    y.set(event.clientY - rect.top);\n  }\n\n  const resetMouse = () => {\n    x.set(200);\n    y.set(200);\n  };\n\n  return (\n    <motion.div\n      drag\n      dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\n      whileTap={{ scale: 1.2, zIndex: 9999 }}\n      whileHover={{\n        scale: 1.1,\n        rotateZ: 2 * (direction === \"left\" ? -1 : 1),\n        zIndex: 9999,\n      }}\n      whileDrag={{\n        scale: 1.1,\n        zIndex: 9999,\n      }}\n      initial={{ rotate: 0 }}\n      animate={{ rotate: rotation }}\n      style={{\n        width,\n        height,\n        perspective: 400,\n        transform: `rotate(0deg) rotateX(0deg) rotateY(0deg)`,\n        zIndex: 1,\n        WebkitTouchCallout: \"none\",\n        WebkitUserSelect: \"none\",\n        userSelect: \"none\",\n        touchAction: \"none\",\n      }}\n      className={cn(\n        className,\n        \"relative mx-auto shrink-0 cursor-grab active:cursor-grabbing\"\n      )}\n      onMouseMove={handleMouse}\n      onMouseLeave={resetMouse}\n      draggable={false}\n      tabIndex={0}\n    >\n      <div className=\"relative h-full w-full overflow-hidden rounded-3xl shadow-sm\">\n        <MotionImage\n          className={cn(\"rounded-3xl  object-cover\")}\n          fill\n          src={src}\n          alt={alt}\n          {...props}\n          draggable={false}\n        />\n      </div>\n    </motion.div>\n  );\n};\n"
    },
    {
      "path": "/components/ui/button.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/designali-in/gallery.json",
    "imported_from": "https://21st.dev/r/designali-in/gallery"
  }
}