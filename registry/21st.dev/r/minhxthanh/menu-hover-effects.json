{
  "name": "menu-hover-effects",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/menu-hover-effects.tsx)",
  "title": "Menu Hover Effects",
  "files": [
    {
      "path": "src/components/ui/menu-hover-effects.tsx",
      "type": "registry:component",
      "content": "import React, { useState } from \"react\";\nimport Link from \"@/components/Link\";\nimport Image from \"@/components/Image\";\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface NavMenuItem {\n  label: string;\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  rel?: string;\n}\n\nexport interface NavMenuProps {\n  items: NavMenuItem[];\n  toggleAriaLabelOpen: string;\n  toggleAriaLabelClose: string;\n  className?: string;\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n  closeOnNavigate?: boolean;\n}\n\nexport default function NavMenu(props: NavMenuProps) {\n  const {\n    items,\n    toggleAriaLabelOpen,\n    toggleAriaLabelClose,\n    className,\n    backgroundColor,\n    backgroundImage,\n    closeOnNavigate,\n  } = props;\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setIsMenuOpen((prev) => !prev);\n  };\n\n  return (\n    <nav\n      className={`absolute inset-0 w-full ${className ?? \"\"}`}\n      style={{ backgroundColor: backgroundColor }}\n    >\n      {backgroundImage ? (\n        <div className=\"absolute inset-0 -z-10 pointer-events-none\">\n          <Image\n            {...backgroundImage}\n            fill\n            className={`object-cover ${backgroundImage.className ?? \"\"}`}\n          />\n        </div>\n      ) : null}\n\n      <button\n        onClick={toggleMenu}\n        className=\"md:hidden absolute top-6 right-6 z-20 p-2\"\n        aria-label={isMenuOpen ? toggleAriaLabelClose : toggleAriaLabelOpen}\n        type=\"button\"\n      >\n        <div\n          className={`w-6 h-0.5 bg-[#262626] mb-1.5 transition-transform duration-300 ${\n            isMenuOpen ? \"transform rotate-45 translate-y-2\" : \"\"\n          }`}\n        />\n        <div\n          className={`w-6 h-0.5 bg-[#262626] mb-1.5 transition-opacity duration-300 ${\n            isMenuOpen ? \"opacity-0\" : \"\"\n          }`}\n        />\n        <div\n          className={`w-6 h-0.5 bg-[#262626] transition-transform duration-300 ${\n            isMenuOpen ? \"transform -rotate-45 -translate-y-2\" : \"\"\n          }`}\n        />\n      </button>\n\n      <div\n        className={`\n        flex items-center justify-center w-full h-full\n        md:block md:h-auto md:pt-8\n        ${isMenuOpen ? \"block\" : \"hidden md:block\"}\n      `}\n      >\n        <ul\n          className={`\n          flex flex-col items-center space-y-6\n          md:flex-row md:space-y-0 md:space-x-4 md:justify-center\n          lg:space-x-8\n        `}\n        >\n          {items.map((item) => (\n            <li\n              key={`${item.href}-${item.label}`}\n              className=\"list-none\"\n              onClick={() => {\n                if (closeOnNavigate) setIsMenuOpen(false);\n              }}\n            >\n              <Link\n                href={item.href}\n                className=\"relative inline-block group\"\n                target={item.target}\n                rel={item.rel}\n              >\n                <span\n                  className=\"\n                  relative z-10 block uppercase text-[#262626] \n                  font-sans font-semibold transition-colors duration-300 \n                  group-hover:text-white\n                  text-xl py-2 px-3\n                  md:text-base md:py-2 md:px-3\n                  lg:text-lg lg:py-2 lg:px-4\n                \"\n                >\n                  {item.label}\n                </span>\n                <span\n                  className=\"\n                  absolute inset-0 border-t-2 border-b-2 border-[#262626]\n                  transform scale-y-[2] opacity-0 \n                  transition-all duration-300 origin-center\n                  group-hover:scale-y-100 group-hover:opacity-100\n                \"\n                />\n                <span\n                  className=\"\n                  absolute top-[2px] left-0 w-full h-full bg-[#262626]\n                  transform scale-0 opacity-0\n                  transition-all duration-300 origin-top\n                  group-hover:scale-100 group-hover:opacity-100\n                \"\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </nav>\n  );\n}\n"
    }
  ],
  "meta": {
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/minhxthanh/menu-hover-effects.json",
    "imported_from": "https://21st.dev/r/minhxthanh/menu-hover-effects",
    "component_name": "NavMenu",
    "component_path": "src/components/ui/menu-hover-effects.tsx",
    "props": "NavMenuProps",
    "props_path": "src/components/ui/menu-hover-effects.tsx",
    "original_file": "src/components/ui/menu-hover-effects.tsx",
    "transformed_at": "2025-09-23T21:27:29.994214",
    "category": "navigation",
    "tags": [
      "navigation-element",
      "responsive-mobile",
      "accessibility-optimized",
      "container-bound",
      "engagement"
    ],
    "variations": [],
    "schema": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "href": {
                "type": "string"
              },
              "target": {
                "enum": [
                  "_blank",
                  "_self"
                ],
                "type": "string"
              },
              "rel": {
                "type": "string"
              }
            }
          }
        },
        "toggleAriaLabelOpen": {
          "type": "string"
        },
        "toggleAriaLabelClose": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "backgroundColor": {
          "type": "string"
        },
        "backgroundImage": {
          "type": "object",
          "properties": {
            "src": {
              "type": "string"
            },
            "alt": {
              "type": "string"
            },
            "width": {
              "type": "number"
            },
            "height": {
              "type": "number"
            },
            "priority": {
              "type": "boolean"
            },
            "quality": {
              "type": "number"
            },
            "sizes": {
              "type": "string"
            },
            "fill": {
              "type": "boolean"
            },
            "className": {
              "type": "string"
            },
            "placeholder": {
              "type": "string"
            }
          }
        },
        "closeOnNavigate": {
          "type": "boolean"
        }
      },
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "schema_updated_at": "2025-09-25T10:01:51.132163",
    "public_ready": true,
    "public_ready_updated_at": "2025-09-25T11:06:12.285935",
    "variation_creation": true
  }
}