{
  "name": "newsletter-signup",
  "type": "registry:ui",
  "description": "TypeScript component (transformed from /components/ui/newsletter-signup.tsx)",
  "dependencies": [
    "motion",
    "lucide-react",
    "canvas-confetti"
  ],
  "files": [
    {
      "path": "/components/ui/newsletter-signup.tsx",
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport confetti from \"canvas-confetti\";\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"@/components/Link\";\n\ninterface Icon {\n  package: \"lucide\";\n  name: string;\n  type: \"icon\";\n  className: string;\n}\n\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport interface NewsletterSignupProps {\n  onSubmit: (email: string) => Promise<void>;\n  className?: string;\n  title: string;\n  description: string;\n  emailLabel: string;\n  emailPlaceholder: string;\n  submitButtonText: string;\n  submitIconName?: Icon[\"name\"];\n  successTitle: string;\n  successMessage: string;\n  requiredErrorText: string;\n  invalidEmailErrorText: string;\n  genericErrorText: string;\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n  secondaryCtaHref?: string;\n  secondaryCtaText?: string;\n  secondaryCtaTarget?: \"_blank\" | \"_self\";\n}\n\nexport function NewsletterSignup(props: NewsletterSignupProps) {\n  const {\n    onSubmit,\n    className,\n    title,\n    description,\n    emailLabel,\n    emailPlaceholder,\n    submitButtonText,\n    submitIconName,\n    successTitle,\n    successMessage,\n    requiredErrorText,\n    invalidEmailErrorText,\n    genericErrorText,\n    backgroundImage,\n    backgroundColor,\n    secondaryCtaHref,\n    secondaryCtaText,\n    secondaryCtaTarget,\n  } = props;\n\n  const [email, setEmail] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (!email) {\n      setError(requiredErrorText);\n      return;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      setError(invalidEmailErrorText);\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      await onSubmit(email);\n      setIsSubmitted(true);\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 },\n      });\n    } catch {\n      setError(genericErrorText);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div\n      className={`relative overflow-hidden bg-secondary/50 border border-primary/10 rounded-lg p-6 ${className ?? \"\"}`}\n      style={backgroundColor ? { backgroundColor } : undefined}\n      data-category=\"newsletter\"\n    >\n      {backgroundImage && (\n        <div className=\"pointer-events-none absolute inset-0 -z-10\">\n          <Image {...backgroundImage} fill className={`object-cover ${backgroundImage.className ?? \"\"}`} />\n        </div>\n      )}\n\n      <AnimatePresence mode=\"wait\">\n        {!isSubmitted ? (\n          <motion.form\n            key=\"form\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            onSubmit={handleSubmit}\n            className=\"flex flex-col gap-4\"\n          >\n            <div className=\"flex items-start justify-center gap-1 flex-col overflow-y-hidden\">\n              <motion.h2\n                className=\"text-2xl font-bold text-foreground\"\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n              >\n                {title}\n              </motion.h2>\n              <motion.p\n                className=\"text-muted-foreground text-sm\"\n                initial={{ opacity: 0, y: 10, filter: \"blur(3px)\" }}\n                animate={{ opacity: 1, y: 0, filter: \"blur(0px)\" }}\n                transition={{ delay: 0.4 }}\n              >\n                {description}\n              </motion.p>\n            </div>\n            <div className=\"space-y-2\">\n              <motion.label\n                initial={{ opacity: 0, filter: \"blur(3px)\" }}\n                animate={{ opacity: 1, filter: \"blur(0px)\" }}\n                transition={{ delay: 0.6 }}\n                className=\"font-medium text-sm\"\n                htmlFor=\"email\"\n              >\n                {emailLabel}\n              </motion.label>\n              <motion.div\n                className=\"flex gap-2\"\n                initial={{ opacity: 0, filter: \"blur(3px)\" }}\n                animate={{ opacity: 1, filter: \"blur(0px)\" }}\n                transition={{ delay: 0.7 }}\n              >\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder={emailPlaceholder}\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"w-full px-3 py-2 border rounded-md focus-visible:ring-0 focus-within:ring-0 focus:outline-white/10\"\n                />\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"relative overflow-hidden text-sm flex items-center justify-center gap-2 px-4 py-2 bg-white border-black font-medium\"\n                >\n                  <motion.div\n                    key=\"default\"\n                    initial={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"flex items-center px-4\"\n                  >\n                    {submitIconName && (\n                      <DynamicIcon name={submitIconName} className=\"h-4 w-4\" />\n                    )}\n                    <span className=\"ml-2\">{submitButtonText}</span>\n                  </motion.div>\n                </Button>\n              </motion.div>\n            </div>\n\n            {secondaryCtaHref && secondaryCtaText && (\n              <div className=\"pt-1\">\n                <Button asChild>\n                  <Link\n                    href={secondaryCtaHref}\n                    className=\"text-sm\"\n                    target={secondaryCtaTarget}\n                    rel={secondaryCtaTarget === \"_blank\" ? \"noopener noreferrer\" : undefined}\n                  >\n                    {secondaryCtaText}\n                  </Link>\n                </Button>\n              </div>\n            )}\n\n            <AnimatePresence>\n              {error && (\n                <motion.p\n                  className=\"text-red-500 text-sm\"\n                  initial={{ opacity: 0, y: 5 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -5 }}\n                >\n                  {error}\n                </motion.p>\n              )}\n            </AnimatePresence>\n          </motion.form>\n        ) : (\n          <motion.div\n            key=\"success\"\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"text-center\"\n          >\n            <h2 className=\"text-2xl font-bold text-foreground mb-2\">{successTitle}</h2>\n            <p className=\"text-muted-foreground\">{successMessage}</p>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\nexport default NewsletterSignup;\n"
    }
  ],
  "tailwind": {
    "config": {}
  },
  "meta": {
    "install_url": "s3://registry-marketkore/registry/21st.dev/r/preetsuthar17/newsletter-signup.json",
    "imported_from": "https://21st.dev/r/preetsuthar17/newsletter-signup",
    "component_name": "NewsletterSignup",
    "component_path": "/components/ui/newsletter-signup.tsx",
    "props": "NewsletterSignupProps",
    "props_path": "/components/ui/newsletter-signup.tsx",
    "original_file": "/components/ui/newsletter-signup.tsx",
    "transformed_at": "2025-09-23T21:32:26.689497",
    "category": "newsletter",
    "tags": [
      "lead-generation",
      "form",
      "interactive",
      "responsive-mobile",
      "minimalist"
    ],
    "variations": []
  }
}