{
  "name": "gallery6",
  "type": "registry:block",
  "description": "TypeScript component (transformed from /components/blocks/gallery6.tsx)",
  "title": "Gallery6",
  "files": [
    {
      "path": "/components/blocks/gallery6.tsx",
      "type": "registry:block",
      "content": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nimport DynamicIcon from \"@/components/DynamicIcon\";\nimport Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Carousel,\n  CarouselApi,\n  CarouselContent,\n  CarouselItem,\n} from \"@/components/ui/carousel\";\n\n// Icon interface guideline (for reference when passing icon-related props if needed)\ninterface Icon {\n  package: \"lucide\";\n  name: string; // known lucide react icon-name only\n  type: \"icon\";\n  className: string; // tailwind classes for styling\n}\n\n// ImageProps as per guideline\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\n// LinkProps as per guideline\ninterface LinkProps {\n  href: string;\n  target?: \"_blank\" | \"_self\";\n  className?: string;\n  rel?: string;\n}\n\ninterface GalleryItem {\n  id: string;\n  title: string;\n  summary: string;\n  link: LinkProps; // item destination link\n  image: ImageProps; // item image\n}\n\nexport interface Gallery6Props {\n  heading: string;\n  demoLink: LinkProps & { label: string };\n  items: GalleryItem[];\n  readMoreLabel: string;\n  backgroundColor?: string;\n  backgroundImage?: ImageProps;\n}\n\nconst Gallery6 = ({\n  heading,\n  demoLink,\n  items,\n  readMoreLabel,\n  backgroundColor,\n  backgroundImage,\n}: Gallery6Props) => {\n  const [carouselApi, setCarouselApi] = useState<CarouselApi | undefined>(undefined);\n  const [canScrollPrev, setCanScrollPrev] = useState<boolean>(false);\n  const [canScrollNext, setCanScrollNext] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!carouselApi) return;\n    const updateSelection = () => {\n      setCanScrollPrev(carouselApi.canScrollPrev());\n      setCanScrollNext(carouselApi.canScrollNext());\n    };\n    updateSelection();\n    carouselApi.on(\"select\", updateSelection);\n    return () => {\n      carouselApi.off(\"select\", updateSelection);\n    };\n  }, [carouselApi]);\n\n  return (\n    <section className=\"relative py-32\" style={backgroundColor ? { backgroundColor } : undefined}>\n      {backgroundImage ? (\n        <div className=\"pointer-events-none absolute inset-0 -z-10 overflow-hidden\">\n          <Image\n            {...backgroundImage}\n            className={`h-full w-full object-cover ${backgroundImage.className ?? \"\"}`}\n          />\n        </div>\n      ) : null}\n\n      <div className=\"container\">\n        <div className=\"mb-8 flex flex-col justify-between md:mb-14 md:flex-row md:items-end lg:mb-16\">\n          <div>\n            <h2 className=\"mb-3 text-3xl font-semibold md:mb-4 md:text-4xl lg:mb-6\">{heading}</h2>\n            <Link\n              href={demoLink.href}\n              target={demoLink.target}\n              rel={demoLink.rel}\n              className={`group flex items-center gap-1 text-sm font-medium md:text-base lg:text-lg ${demoLink.className ?? \"\"}`}\n            >\n              {demoLink.label}\n              <DynamicIcon name=\"ArrowUpRight\" className=\"size-4 transition-transform group-hover:translate-x-1\" />\n            </Link>\n          </div>\n\n          <div className=\"mt-8 flex shrink-0 items-center justify-start gap-2\">\n            <Button\n              size=\"icon\"\n              variant=\"outline\"\n              onClick={() => {\n                carouselApi?.scrollPrev();\n              }}\n              disabled={!canScrollPrev}\n              className=\"disabled:pointer-events-auto\"\n              aria-label=\"Previous\"\n            >\n              <DynamicIcon name=\"ArrowLeft\" className=\"size-5\" />\n            </Button>\n            <Button\n              size=\"icon\"\n              variant=\"outline\"\n              onClick={() => {\n                carouselApi?.scrollNext();\n              }}\n              disabled={!canScrollNext}\n              className=\"disabled:pointer-events-auto\"\n              aria-label=\"Next\"\n            >\n              <DynamicIcon name=\"ArrowRight\" className=\"size-5\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"w-full\">\n        <Carousel\n          setApi={setCarouselApi}\n          opts={{\n            breakpoints: {\n              \"(max-width: 768px)\": {\n                dragFree: true,\n              },\n            },\n          }}\n          className=\"relative left-[-1rem]\"\n        >\n          <CarouselContent className=\"-mr-4 ml-8 2xl:ml-[max(8rem,calc(50vw-700px+1rem))] 2xl:mr-[max(0rem,calc(50vw-700px-1rem))]\">\n            {items.map((item) => (\n              <CarouselItem key={item.id} className=\"pl-4 md:max-w-[452px]\">\n                <Link href={item.link.href} target={item.link.target} rel={item.link.rel} className={`group flex flex-col justify-between ${item.link.className ?? \"\"}`}>\n                  <div>\n                    <div className=\"flex aspect-[3/2] overflow-clip rounded-xl\">\n                      <div className=\"flex-1\">\n                        <div className=\"relative h-full w-full origin-bottom transition duration-300 group-hover:scale-105\">\n                          <Image\n                            {...item.image}\n                            className={`h-full w-full object-cover object-center ${item.image.className ?? \"\"}`}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-2 line-clamp-3 break-words pt-4 text-lg font-medium md:mb-3 md:pt-4 md:text-xl lg:pt-4 lg:text-2xl\">\n                    {item.title}\n                  </div>\n                  <div className=\"mb-8 line-clamp-2 text-sm text-muted-foreground md:mb-12 md:text-base lg:mb-9\">\n                    {item.summary}\n                  </div>\n                  <div className=\"flex items-center text-sm\">\n                    {readMoreLabel}\n                    <DynamicIcon name=\"ArrowRight\" className=\"ml-2 size-5 transition-transform group-hover:translate-x-1\" />\n                  </div>\n                </Link>\n              </CarouselItem>\n            ))}\n          </CarouselContent>\n        </Carousel>\n      </div>\n    </section>\n  );\n};\n\nexport { Gallery6 };"
    }
  ],
  "meta": {
    "component_name": "Gallery6",
    "component_path": "/components/blocks/gallery6.tsx",
    "props": "Gallery6Props",
    "props_path": "/components/blocks/gallery6.tsx",
    "original_file": "/components/blocks/gallery6.tsx",
    "transformed_at": "2025-09-22T19:51:54.427307",
    "category": "gallery",
    "tags": [
      "media-display",
      "interactive",
      "responsive-mobile",
      "visual-dominant",
      "container-bound",
      "engagement"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:51:54.427320",
    "install_url": "s3://registry-marketkore/registry/gallery6.json"
  }
}