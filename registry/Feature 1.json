{
  "name": "Feature 1",
  "type": "registry:component",
  "description": "TypeScript component (transformed from src/components/ui/feature-1.tsx)",
  "title": "Feature 1",
  "files": [
    {
      "path": "src/components/ui/feature-1.tsx",
      "type": "registry:component",
      "content": "import Image from \"@/components/Image\";\nimport Link from \"@/components/Link\";\nimport { Button } from \"@/components/ui/button\";\n\n// Image interface as per guidelines\ninterface ImageProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n  priority?: boolean;\n  quality?: number;\n  sizes?: string;\n  fill?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\ntype LinkTarget = \"_blank\" | \"_self\";\n\ninterface Feature1Button {\n  label: string;\n  href: string;\n  target?: LinkTarget;\n  rel?: string;\n}\n\nexport interface Feature1Props {\n  title: string;\n  description?: string;\n  image: ImageProps;\n  buttonPrimary: Feature1Button;\n  buttonSecondary: Feature1Button;\n  backgroundImage?: ImageProps;\n  backgroundColor?: string;\n}\n\nexport const Feature1 = ({\n  title,\n  description,\n  image,\n  buttonPrimary,\n  buttonSecondary,\n  backgroundImage,\n  backgroundColor,\n}: Feature1Props) => {\n  const primaryRel = buttonPrimary.target === \"_blank\" ? (buttonPrimary.rel ?? \"noopener noreferrer\") : buttonPrimary.rel;\n  const secondaryRel = buttonSecondary.target === \"_blank\" ? (buttonSecondary.rel ?? \"noopener noreferrer\") : buttonSecondary.rel;\n\n  return (\n    <section className=\"relative py-32\" style={backgroundColor ? { backgroundColor } : undefined}>\n      {backgroundImage ? (\n        <div className=\"pointer-events-none absolute inset-0 -z-10\">\n          <Image\n            {...backgroundImage}\n            fill\n            className={[\"h-full w-full object-cover\", backgroundImage.className].filter(Boolean).join(\" \")}\n          />\n        </div>\n      ) : null}\n\n      <div className=\"container\">\n        <div className=\"grid items-center gap-8 lg:grid-cols-2\">\n          <div className=\"flex flex-col items-center text-center lg:items-start lg:text-left\">\n            <h1 className=\"my-6 mt-0 text-4xl font-semibold text-balance lg:text-5xl\">{title}</h1>\n            {description ? (\n              <p className=\"mb-8 max-w-xl text-muted-foreground lg:text-lg\">{description}</p>\n            ) : null}\n            <div className=\"flex w-full flex-col justify-center gap-2 sm:flex-row lg:justify-start\">\n              <Button asChild>\n                <Link href={buttonPrimary.href} target={buttonPrimary.target} rel={primaryRel}>\n                  {buttonPrimary.label}\n                </Link>\n              </Button>\n              <Button variant=\"outline\" asChild>\n                <Link href={buttonSecondary.href} target={buttonSecondary.target} rel={secondaryRel}>\n                  {buttonSecondary.label}\n                </Link>\n              </Button>\n            </div>\n          </div>\n          <div className=\"w-full\">\n            <Image\n              src={image.src}\n              alt={image.alt}\n              width={image.width}\n              height={image.height}\n              priority={image.priority}\n              quality={image.quality}\n              sizes={image.sizes}\n              fill={image.fill}\n              className={[\"max-h-96 w-full rounded-md object-cover\", image.className].filter(Boolean).join(\" \")}\n              placeholder={image.placeholder}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Feature1;\n"
    }
  ],
  "meta": {
    "component_name": "Feature1",
    "component_path": "src/components/ui/feature-1.tsx",
    "props": "Feature1Props",
    "props_path": "src/components/ui/feature-1.tsx",
    "original_file": "src/components/ui/feature-1.tsx",
    "transformed_at": "2025-09-22T19:45:23.381279",
    "category": "features",
    "tags": [
      "product-highlight",
      "action-trigger",
      "mixed-media",
      "responsive-desktop",
      "rounded",
      "container-bound"
    ],
    "variations": [],
    "created_at": "2025-09-22T19:45:23.381297"
  }
}